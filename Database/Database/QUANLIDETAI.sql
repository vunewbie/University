--MSSV:22120439
--Ho Ten:Nguyễn Hoàng Vũ
--Thuc Hanh: Ca 2
--Tuan 1
--C1.Hoàn chỉnh script tạo cấu trúc và nhập dữ liệu cho cơ sở dữ liệu Quản lý Giáo viên tham gia đề tài.
CREATE DATABASE QUANLIDETAI
GO

USE QUANLIDETAI
GO

CREATE TABLE GIAOVIEN(
	MAGV VARCHAR(3) NOT NULL,
	HOTEN NVARCHAR(50),
	LUONG FLOAT,
	PHAI NVARCHAR(4),
	NGSINH DATE,
	DIACHI NVARCHAR(50),
	GVQLCM VARCHAR(3),
	MABM NVARCHAR(50),
	PRIMARY KEY(MAGV)
)

CREATE TABLE GV_DT(
	MAGV VARCHAR(3) NOT NULL,
	DIENTHOAI VARCHAR(15) NOT NULL,
	PRIMARY KEY (MAGV,DIENTHOAI),
)

CREATE TABLE BOMON(
	MABM NVARCHAR(50) NOT NULL,
	TENBM NVARCHAR(50),
	PHONG CHAR(3),
	DIENTHOAI VARCHAR(15),
	TRUONGBM VARCHAR(3),
	MAKHOA NVARCHAR(50),
	NGAYNHANCHUC DATE,
	PRIMARY KEY (MABM),
)

CREATE TABLE KHOA(
	MAKHOA NVARCHAR(50) NOT NULL,
	TENKHOA NVARCHAR(50),
	NAMTL INT,
	PHONG CHAR(3),
	DIENTHOAI VARCHAR(15),
	TRUONGKHOA VARCHAR(3),
	NGAYNHANCHUC DATE,
	PRIMARY KEY (MAKHOA)
)

CREATE TABLE DETAI(
	MADT VARCHAR(3) NOT NULL,
	TENDT NVARCHAR(50),
	CAPQL NVARCHAR(50),
	KINHPHI FLOAT,
	NGAYBD DATE,
	NGAYKT DATE,
	MACD CHAR(4),
	GVCNDT VARCHAR(3),
	PRIMARY KEY (MADT),
)

CREATE TABLE CHUDE(
	MACD CHAR(4) NOT NULL,
	TENCD NVARCHAR(50),
	PRIMARY KEY(MACD),
)

CREATE TABLE CONGVIEC(
	MADT VARCHAR(3) NOT NULL,
	SOTT INT NOT NULL,
	TENCV NVARCHAR(50),
	NGAYBD DATE,
	NGAYKT DATE,
	PRIMARY KEY(MADT,SOTT),
)

CREATE TABLE THAMGIADT(
	MAGV VARCHAR(3) NOT NULL,
	MADT VARCHAR(3) NOT NULL,
	STT INT NOT NULL,
	PHUCAP FLOAT,
	KETQUA NVARCHAR(50),
	PRIMARY KEY(MAGV,MADT,STT)
)

CREATE TABLE NGUOITHAN(
	MAGV VARCHAR(3) NOT NULL,
	TEN NVARCHAR(50) NOT NULL,
	NGSINH DATE,
	PHAI NVARCHAR(4),
)

--(MAGV) THAMGIADT -> (MAGV) GIAOVIEN)
ALTER TABLE THAMGIADT
ADD CONSTRAINT FK_TGDT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN (MAGV)

--(MADT, STT) THAMGIADT -> (MADT, SOTT) CONGVIEC
ALTER TABLE THAMGIADT
ADD CONSTRAINT FK_TGDT_CV FOREIGN KEY (MADT,STT) REFERENCES CONGVIEC(MADT,SOTT)

--KHOA REF GIAOVIEN
ALTER TABLE KHOA
ADD CONSTRAINT FK_KHOA_GV FOREIGN KEY (TRUONGKHOA) REFERENCES GIAOVIEN (MAGV)
--BOMON REF GIAOVIEN
ALTER TABLE BOMON
ADD CONSTRAINT FK_BM_GV FOREIGN KEY (TRUONGBM) REFERENCES GIAOVIEN (MAGV)
--BOMON REF KHOA
ALTER TABLE BOMON
ADD CONSTRAINT FK_BM_KHOA FOREIGN KEY (MAKHOA) REFERENCES KHOA (MAKHOA)
--CONGVIEC REF DETAI
ALTER TABLE CONGVIEC
ADD CONSTRAINT FK_CV_DT FOREIGN KEY (MADT) REFERENCES DETAI (MADT)
--DETAI REF CHUDE
ALTER TABLE DETAI
ADD CONSTRAINT FK_DT_CD FOREIGN KEY (MACD) REFERENCES CHUDE (MACD)
--DETAI REF GIAOVIEN
ALTER TABLE DETAI
ADD CONSTRAINT FK_DT_GV FOREIGN KEY (GVCNDT) REFERENCES GIAOVIEN (MAGV)
--NGUOITHAN REF GIAOVIEN
ALTER TABLE NGUOITHAN
ADD CONSTRAINT FK_NT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN(MAGV)
--GV_DT REF GIAOVIEN
ALTER TABLE GV_DT
ADD CONSTRAINT FK_GV_DT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN (MAGV)
--GIAOVIEN REF GIAOVIEN
ALTER TABLE GIAOVIEN
ADD CONSTRAINT FK_GV_GV FOREIGN KEY (GVQLCM) REFERENCES GIAOVIEN(MAGV)
--GIAOVIEN REF BOMON
ALTER TABLE GIAOVIEN
ADD CONSTRAINT FK_GV_BM FOREIGN KEY (MABM) REFERENCES BOMON (MABM)
--C2.Viết script để nhập dữ liệu minh họa như mô tả ở trên vào CSDL vừa tạo.
INSERT INTO GIAOVIEN VALUES ('001',N'Nguyễn Hoài An',2000.0,N'Nam','1973-02-15',N'25/3 Lạc Long Quân, Q.10, TP HCM',NULL,NULL),
							('002',N'Trần Trà Hương',2500.0,N'Nữ','1960-06-20',N'125 Trần Hưng Đạo, Q1, TP HCM',NULL,NULL),
							('003',N'Nguyễn Ngọc Ánh',2200.0,N'Nữ','1975-05-11',N'12/21 Võ Văn Ngân Thủ Đức, TP HCM','002',NULL),
							('004',N'Trương Nam Sơn',2300.0,N'Nam','1959-06-20',N'215 Lý Thường Kiệt, TP Biên Hòa',NULL,NULL),
							('005',N'Lý Hoàng Hà',2500.0,N'Nam','1954-10-23',N'22/5 Nguyễn Xí, Q.Bình Thạnh, TP HCM',NULL,NULL),
							('006',N'Trần Bạch Tuyết',1500.0,N'Nữ','1980-05-20',N'127 Hùng Vương, TP Mỹ Tho','004',NULL),
							('007',N'Nguyễn An Trung',2100.0,N'Nam','1976-06-05',N'234 3/2, TP Biên Hòa',NULL,NULL),
							('008',N'Trần Trung Hiếu',1800.0,N'Nam','1977-08-06',N'22/11 Lý Thường Kiệt, TP Mỹ Tho','007',NULL),
							('009',N'Trần Hoàng Nam',2000.0,N'Nam','1975-11-22',N'234 Trần Não, An Phú, TP HCM','001',NULL),
							('010',N'Phạm Nam Thanh',1500.0,N'Nam','1980-12-12',N'221 Hùng Vương, Q.5, TP HCM','007',NULL)
INSERT INTO GV_DT VALUES ('001','0838912112'),
						 ('001','0903123123'),
						 ('002','0903123123'),
						 ('003','0838121212'),
						 ('003','0903656565'),
						 ('003','0937125125'),
						 ('006','0937888888'),
						 ('008','0653717171'),
						 ('008','0913232323')
INSERT INTO NGUOITHAN VALUES ('001',N'Hùng','1990-01-14',N'Nam'),
							 ('001',N'Thủy','1994-12-08',N'Nữ'),
							 ('003',N'Hà','1998-09-03',N'Nữ'),
							 ('003',N'Thu','1998-09-03',N'Nữ'),
							 ('007',N'Mai','2003-03-26',N'Nữ'),
							 ('007',N'Vy','2000-02-14',N'Nữ'),
							 ('008',N'Nam','1991-05-06',N'Nam'),
							 ('009',N'An','1996-08-19',N'Nam'),
							 ('010',N'Nguyệt','2006-01-14',N'Nữ')
INSERT INTO KHOA VALUES ('CNTT',N'Công nghệ thông tin',1995,'B11','0838123456','002','2005-02-20'),
						('HH',N'Hóa Học',1980,'B41','0838456456','007','2001-10-15'),
						('SH',N'Sinh Học',1980,'B31','0838454545','004','2000-10-11'),
						('VL',N'Vật Lý',1976,'B21','0838223223','005','2003-09-18')
INSERT INTO BOMON VALUES ('CNTT',N'Công nghệ tri thức','B15','0838126126',NULL,'CNTT',NULL),
						 ('HHC',N'Hóa hữu cơ','B44','0838222222',NULL,'HH',NULL),
						 ('HL',N'Hóa lý','B42','0838878787',NULL,'HH',NULL),
						 ('HPT',N'Hóa phân tích','B43','0838777777','007','HH','2007-10-15'),
						 ('HTTT',N'Hệ thống thông tin','B13','0838125125','002','CNTT','2004-09-20'),
						 ('MMT',N'Mạng máy tính','B16','0838676767','001','CNTT','2005-05-15'),
						 ('SH',N'Sinh hóa','B33','0838898989',NULL,'SH',NULL),
						 ('VLDT',N'Vật lý điện tử','B23','0838234234',NULL,'VL',NULL),
						 ('VLUD',N'Vật lý ứng dụng','B24','0838454545','005','VL','2006-02-18'),
						 ('VS',N'Vi sinh','B32','0838909090','004','SH','2007-01-01')
UPDATE GIAOVIEN 
SET MABM='MMT'
WHERE MAGV='001' OR MAGV='009'
UPDATE GIAOVIEN 
SET MABM='HTTT'
WHERE MAGV='002' OR MAGV='003'
UPDATE GIAOVIEN 
SET MABM='VS'
WHERE MAGV='004' OR MAGV='006'
UPDATE GIAOVIEN 
SET MABM='VLDT'
WHERE MAGV='005'
UPDATE GIAOVIEN 
SET MABM='HPT'
WHERE MAGV='008' OR MAGV='007' OR MAGV='010'
INSERT INTO CHUDE VALUES ('NCPT',N'Nghiên cứu phát triển'),
						 ('QLGD',N'Quản lý giáo dục'),
						 ('UDCN',N'Ứng dụng công nghệ')
INSERT INTO DETAI VALUES ('001',N'HTTT quản lí các trường ĐH',N'ĐHQG',20.0,'2007-10-20','2008-10-20','QLGD','002'),
						 ('002',N'HTTT quản lý giáo vụ cho một Khoa',N'TRƯỜNG',20.0,'2000-10-12','2001-10-12','QLGD','002'),
						 ('003',N'Nghiên cứu chế tạo sợi Nanô Platin',N'ĐHQG',300.0,'2008-05-15','2010-05-15','NCPT','005'),
						 ('004',N'Tạo vật liệu sinh học bằng màng ối người',N'NHÀ NƯỚC',100.0,'2009-12-31','2008-10-20','NCPT','004'),
						 ('005',N'Ứng dụng hóa học xanh',N'TRƯỜNG',200.0,'2003-10-10','2004-12-10','UDCN','007'),
						 ('006',N'Nghiên cứu tế bào gốc',N'NHÀ NƯỚC',4000.0,'2006-10-20','2009-10-20','NCPT','004'),
						 ('007',N'HTTT quản lý thư viện ở các trường ĐH',N'TRƯỜNG',20.0,'2009-05-10','2010-05-10','QLGD','001')
INSERT INTO CONGVIEC VALUES ('001',1,N'Khởi tạo và lập kế hoạch','2007-10-20','2008-12-20'),
							('001',2,N'Xác định yêu cầu','2008-12-21','2008-03-21'),
							('001',3,N'Phân tích hệ thống','2008-03-22','2008-05-22'),
							('001',4,N'Thiết kế hệ thống','2008-05-23','2008-06-23'),
							('001',5,N'cài đặt thử nghiệm','2008-06-24','2008-10-20'),
							('002',1,N'Khởi tạo và lập kế hoạch','2009-05-10','2009-07-10'),
							('002',2,N'Xác định yêu cầu','2009-07-11','2009-10-11'),
							('002',3,N'Phân tích hệ thống','2009-10-12','2009-12-20'),
							('002',4,N'Thiết kế hệ thống','2009-12-21','2010-03-22'),
							('002',5,N'cài đặt thử nghiệm','2010-03-23','2010-05-10'),
							('006',1,N'Lấy mẫu','2006-10-20','2007-02-20'),
							('006',2,N'Nuôi cấy','2007-02-21','2008-08-21')
INSERT INTO THAMGIADT VALUES ('001','002',1,0.0,NULL),
							 ('001','002',2,2.0,NULL),
							 ('002','001',4,2.0,N'Đạt'),
							 ('003','001',1,1.0,N'Đạt'),
							 ('003','001',2,0.0,N'Đạt'),
							 ('003','001',4,1.0,N'Đạt'),
							 ('003','002',2,0.0,NULL),
							 ('004','006',1,0.0,N'Đạt'),
							 ('004','006',2,1.0,N'Đạt'),
							 ('006','006',2,1.5,N'Đạt'),
							 ('009','002',3,0.5,NULL),
							 ('009','002',4,1.5,NULL)
--Q1. Cho biết họ tên và mức lương của các giáo viên nữ.
SELECT GV.HOTEN,GV.LUONG
FROM GIAOVIEN GV 
WHERE GV.PHAI LIKE N'Nữ'
--Q2. Cho biết họ tên của các giáo viên và lương của họ sau khi tăng 10%.
SELECT GV.HOTEN,GV.LUONG*1.1 AS LUONG110
FROM GIAOVIEN GV
--Q3. Cho biết mã của các giáo viên có họ tên bắt đầu là “Nguyễn” và lương trên $2000 hoặc, giáo viên là trưởng bộ môn nhận chức sau năm 1995.
	--Cách 1: UNION
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE GV.HOTEN LIKE N'Nguyễn%' AND GV.LUONG > 2000
UNION
SELECT GV.MAGV
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM
WHERE YEAR(BM.NGAYNHANCHUC) > 1995
	--Cách 2: TRUY VẤN LỒNG
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE (GV.HOTEN LIKE N'Nguyễn%' AND GV.LUONG > 2000) OR GV.MAGV IN (SELECT GV1.MAGV
																	FROM GIAOVIEN GV1 JOIN BOMON BM ON GV1.MAGV=BM.TRUONGBM
																	WHERE YEAR(BM.NGAYNHANCHUC) > 1995)
--Q4. Cho biết tên những giáo viên khoa Công nghệ thông tin.
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA KH ON KH.MAKHOA=BM.MAKHOA
WHERE KH.TENKHOA LIKE N'Công nghệ thông tin'
--Q5. Cho biết thông tin của bộ môn cùng thông tin giảng viên làm trưởng bộ môn đó.
SELECT*
FROM BOMON BM LEFT JOIN GIAOVIEN GV ON BM.TRUONGBM=GV.MAGV
--Q6. Với mỗi giáo viên, hãy cho biết thông tin của bộ môn mà họ đang làm việc.
SELECT GV.MAGV,BM.*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM  
--Q7. Cho biết tên đề tài và giáo viên chủ nhiệm đề tài.
SELECT DT.TENDT,GV.HOTEN
FROM DETAI DT LEFT JOIN GIAOVIEN GV ON DT.GVCNDT=GV.MAGV
--Q8. Với mỗi khoa cho biết thông tin trưởng khoa.
SELECT KH.MAKHOA,GV.*
FROM KHOA KH LEFT JOIN GIAOVIEN GV ON KH.TRUONGKHOA=GV.MAGV 
--Q9. Cho biết các giáo viên của bộ môn “Vi sinh” có tham gia đề tài 006.
SELECT DISTINCT GV.*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
WHERE BM.TENBM LIKE N'Vi sinh' AND TGDT.MADT LIKE '006'
--Q10. Với những đề tài thuộc cấp quản lý “Trường”, cho biết mã đề tài, đề tài thuộc về chủ đề nào, họ tên người chủ nghiệm đề tài cùng với ngày sinh và địa chỉ của người ấy.
SELECT DT.MADT,CD.TENCD,GV.HOTEN,GV.NGSINH,GV.DIACHI
FROM DETAI DT JOIN CHUDE CD ON DT.MACD=CD.MACD JOIN GIAOVIEN GV ON DT.GVCNDT=GV.MAGV
WHERE DT.CAPQL=N'Trường'
--Q11. Tìm họ tên của từng giáo viên và người phụ trách chuyên môn trực tiếp của giáo viên đó.
SELECT GV1.HOTEN AS GV,GV2.HOTEN AS GVQLCM
FROM GIAOVIEN GV1 LEFT JOIN GIAOVIEN GV2 ON GV1.GVQLCM=GV2.MAGV
--Q12. Tìm họ tên của những giáo viên được “Nguyễn An Trung” phụ trách trực tiếp.
SELECT GV1.HOTEN
FROM GIAOVIEN GV1 JOIN GIAOVIEN GV2 ON GV1.GVQLCM=GV2.MAGV
WHERE GV2.HOTEN LIKE N'Nguyễn An Trung'
--Q13. Cho biết tên giáo viên là trưởng bộ môn “Hệ thống thông tin”.
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM
WHERE BM.TENBM LIKE N'Hệ thống thông tin'
--Q14. Cho biết tên người chủ nhiệm đề tài của những đề tài thuộc chủ đề Quản lý giáo dục.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV JOIN DETAI DT ON GV.MAGV=DT.GVCNDT JOIN CHUDE CD ON DT.MACD=CD.MACD
WHERE CD.TENCD LIKE N'Quản lí giáo dục'
--Q15. Cho biết tên các công việc của đề tài HTTT quản lý các trường ĐH có thời gian bắt đầu trong tháng 3/2008.
SELECT CV.TENCV
FROM DETAI DT JOIN CONGVIEC CV ON DT.MADT=CV.MADT 
WHERE DT.TENDT LIKE N'HTTT quản lí các trường ĐH' AND MONTH(CV.NGAYBD) = '3' AND YEAR(CV.NGAYBD) = '2008' 
--Q16. Cho biết tên giáo viên và tên người quản lý chuyên môn của giáo viên đó.
SELECT GV1.HOTEN AS GV,GV2.HOTEN AS GVQLCM
FROM GIAOVIEN GV1 LEFT JOIN GIAOVIEN GV2 ON GV1.GVQLCM=GV2.MAGV
--Q17. Cho các công việc bắt đầu trong khoảng từ 01/01/2007 đến 01/08/2007.
SELECT*
FROM CONGVIEC CV
WHERE DATEDIFF(DAY,'01/01/2007',CV.NGAYBD)>=0 AND DATEDIFF(DAY,'01/08/2007',CV.NGAYBD)>=0
--Q18. Cho biết họ tên các giáo viên cùng bộ môn với giáo viên “Trần Trà Hương”.
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE GV.MABM IN (SELECT GV.MABM
				  FROM GIAOVIEN GV
				  WHERE GV.HOTEN LIKE N'Trần Trà Hương') AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
--Q19. Tìm những giáo viên vừa là trưởng bộ môn vừa chủ nhiệm đề tài.
SELECT DISTINCT GV.*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM JOIN DETAI DT ON BM.TRUONGBM=DT.GVCNDT
--Q20. Cho biết tên những giáo viên vừa là trưởng khoa và vừa là trưởng bộ môn.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV JOIN KHOA KH ON KH.TRUONGKHOA=GV.MAGV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM
--Q21. Cho biết tên những trưởng bộ môn mà vừa chủ nhiệm đề tài.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM JOIN DETAI DT ON BM.TRUONGBM=DT.GVCNDT
--Q22. Cho biết mã số các trưởng khoa có chủ nhiệm đề tài.
SELECT DISTINCT KH.TRUONGKHOA
FROM KHOA KH JOIN DETAI DT ON KH.TRUONGKHOA=DT.GVCNDT
--Q23. Cho biết mã số các giáo viên thuộc bộ môn “HTTT” hoặc có tham gia đề tài mã “001”.
	--CÁCH 1:UNION
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE GV.MABM LIKE 'HTTT'
UNION
SELECT TGDT.MAGV
FROM THAMGIADT TGDT
WHERE TGDT.MADT LIKE '001'
	--Cách 2:TRUY VẤN LỒNG
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE GV.MABM LIKE 'HTTT' OR GV.MAGV IN (SELECT TGDT.MAGV
										 FROM THAMGIADT TGDT 
										 WHERE TGDT.MADT LIKE '001')
--Q24. Cho biết giáo viên làm việc cùng bộ môn với giáo viên 002.
SELECT *
FROM GIAOVIEN GV
WHERE GV.MABM IN (SELECT GV.MABM
				  FROM GIAOVIEN GV
				  WHERE GV.MAGV LIKE '002') AND GV.MAGV NOT LIKE '002'
--Q25. Tìm những giáo viên là trưởng bộ môn.
SELECT GV.*
FROM BOMON BM JOIN GIAOVIEN GV ON BM.TRUONGBM=GV.MAGV
--Q26. Cho biết họ tên và mức lương của các giáo viên.
SELECT GV.HOTEN,GV.LUONG
FROM GIAOVIEN GV
--Q27. Cho biết số lượng giáo viên và tổng lương của họ
SELECT COUNT(GV.MAGV) AS SOLUONGGV,SUM(GV.LUONG) AS TONGLUONG
FROM GIAOVIEN GV
--Q28. Cho biết số lượng giáo viên và lương trung bình của từng bộ môn
SELECT BM.MABM,COUNT(GV.MAGV) AS SOLUONGGV,AVG(GV.LUONG) AS LUONGTB
FROM GIAOVIEN GV RIGHT JOIN BOMON BM ON GV.MABM=BM.MABM
GROUP BY BM.MABM
--Q29. Cho biết tên chủ đề và số lượng đề tài thuộc về chủ đề đó
SELECT CD.TENCD,COUNT(DT.MADT) AS SOLUONGDT
FROM CHUDE CD LEFT JOIN DETAI DT ON CD.MACD=DT.MACD  
GROUP BY CD.MACD,CD.TENCD
--Q30. Cho biết tên giáo viên và số lượng đề tài mà giáo viên đó tham gia
SELECT GV.HOTEN,COUNT(TGDT.MADT) AS SOLUONGDT
FROM GIAOVIEN GV LEFT JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN
--Q31. Cho biết tên giáo viên và số lượng đề tài mà giáo viên đó làm chủ nhiệm
SELECT GV.HOTEN,COUNT(DT.MADT) AS SOLUONGDTCN
FROM GIAOVIEN GV LEFT JOIN DETAI DT ON GV.MAGV=DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
--Q32. Với mỗi giáo viên hãy cho biết tên giáo viên và số lượng người thân của giáo viên đó
SELECT GV.MAGV,COUNT(NT.MAGV) AS SOLUONGNT
FROM GIAOVIEN GV LEFT JOIN NGUOITHAN NT ON GV.MAGV=NT.MAGV
GROUP BY GV.MAGV
--Q33. Cho biết tên của những giáo viên tham gia từ 3 đề tài trở lên
SELECT GV.HOTEN
FROM GIAOVIEN GV LEFT JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(TGDT.MAGV) >= 3
--Q34. Cho biết số lượng giáo viên đã tham gia đề tài 'Ứng dụng hóa học xanh'
SELECT COUNT(GVTGDT.MAGV) AS SLGVTG
FROM (SELECT TGDT.MAGV
	  FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN DETAI DT ON TGDT.MADT=DT.MADT
      WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh'
      GROUP BY TGDT.MAGV,TGDT.MADT) GVTGDT
--Q35. Cho biết mức lương cao nhất của các giảng viên
	--CÁCH 1:
SELECT DISTINCT GV.LUONG AS LUONGMAX
FROM GIAOVIEN GV
WHERE GV.LUONG >=ALL(SELECT GV1.LUONG
					 FROM GIAOVIEN GV1)
	--CÁCH 2:
SELECT MAX(GV.LUONG) AS LUONGMAX
FROM GIAOVIEN GV
--Q36. Cho biết những giảng viên có lương cao nhất đó
	--CÁCH 1:
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE GV.LUONG>=ALL(SELECT GV1.LUONG
					FROM GIAOVIEN GV1)
	--CÁCH 2:
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE GV.LUONG = (SELECT MAX(GV1.LUONG)
				  FROM GIAOVIEN GV1)
--Q37. Cho biết lương cao nhất trong bộ môn 'HTTT'
	--CÁCH 1:
SELECT GV.LUONG AS MAXLUONG
FROM GIAOVIEN GV
WHERE GV.LUONG >= ALL (SELECT GV2.LUONG
					   FROM GIAOVIEN GV2
					   WHERE GV.MABM LIKE 'HTTT') AND GV.MABM LIKE 'HTTT'
	--CÁCH 2:
SELECT MAX(GV.LUONG) AS MAXLUONG
FROM (SELECT GV1.LUONG
	  FROM GIAOVIEN GV1
	  WHERE GV1.MABM LIKE 'HTTT') GV
--Q38. Cho biết tên giáo viên lớn tuổi nhất của bộ môn 'HTTT'
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE DATEDIFF(YEAR,GV.NGSINH,GETDATE()) >= ALL (SELECT DATEDIFF(YEAR,GV1.NGSINH,GETDATE())
												 FROM GIAOVIEN GV1
												 WHERE GV1.MABM LIKE 'HTTT') AND GV.MABM LIKE 'HTTT'
--Q39. Cho biết tên giáo viên nhỏ tuổi nhất của khoa 'Công Nghệ Thông Tin'
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA KH ON BM.MAKHOA=KH.MAKHOA
WHERE GV.NGSINH >= ALL (SELECT GV1.NGSINH
						FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM JOIN KHOA KH1 ON BM1.MAKHOA=KH1.MAKHOA
						WHERE KH1.TENKHOA LIKE N'Công Nghệ Thông Tin') AND KH.TENKHOA LIKE N'Công Nghệ Thông Tin'
--Q40. Cho biết tên giáo viên và tên khoa của giáo viên có lương cao nhất
SELECT GV.HOTEN,KH.TENKHOA
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA KH ON BM.MAKHOA=KH.MAKHOA
WHERE GV.LUONG >= ALL(SELECT GV1.LUONG
					  FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM JOIN KHOA KH1 ON BM1.MAKHOA=KH1.MAKHOA)
--Q41. Cho biết những giáo viên có lương lớn nhất trong bộ môn của họ
SELECT*
FROM GIAOVIEN GV
WHERE GV.LUONG IN (SELECT MAX(GV1.LUONG)
				  FROM GIAOVIEN GV1
				  WHERE GV.MABM=GV1.MABM
				  GROUP BY GV1.MABM)
--Q42. Cho biết tên những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia
	--CÁCH 1:DÙNG EXCEPT
SELECT DT1.TENDT
FROM DETAI DT1
WHERE DT1.MADT IN (SELECT DT.MADT
				   FROM DETAI DT
				   EXCEPT
				   SELECT TGDT.MADT
				   FROM THAMGIADT TGDT JOIN GIAOVIEN GV ON GV.MAGV=TGDT.MAGV 
				   WHERE GV.HOTEN LIKE N'Nguyễn Hoài An')
	--Cách 2: Dùng NOT EXISTS
SELECT DT1.TENDT
FROM DETAI DT1
WHERE NOT EXISTS (SELECT TGDT.MADT
				  FROM THAMGIADT TGDT JOIN GIAOVIEN GV ON TGDT.MAGV=GV.MAGV
				  WHERE GV.HOTEN LIKE N'Nguyễn Hoài An' AND DT1.MADT=TGDT.MADT)
--Q43. Cho biết những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia. Xuất ra tên đề tài, tên người chủ nhiệm đề tài.
	--CÁCH 1: DÙNG EXCEPT
SELECT DT.MADT,DT.TENDT,DT.GVCNDT,GV.HOTEN
FROM DETAI DT LEFT JOIN GIAOVIEN GV ON DT.GVCNDT=GV.MAGV
WHERE DT.MADT IN (SELECT DT1.MADT
				  FROM DETAI DT1
				  EXCEPT
				  SELECT TGDT.MADT
				  FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON GV1.MAGV=TGDT.MAGV
				  WHERE GV1.HOTEN LIKE N'Nguyễn Hoài An')
	--CÁCH 2: DÙNG NOT EXISTS
SELECT DT.MADT,DT.TENDT,DT.GVCNDT,GV.HOTEN
FROM DETAI DT JOIN GIAOVIEN GV ON GV.MAGV=DT.GVCNDT
WHERE NOT EXISTS(SELECT*
				 FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON TGDT.MAGV=GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'Nguyễn Hoài An' AND TGDT.MADT=DT.MADT)
--Q44. Cho biết tên những giáo viên khoa Công Nghệ Thông Tin mà chưa tham gia đề tài nào cả.
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON BM.MABM=GV.MABM JOIN KHOA KH ON KH.MAKHOA=BM.MAKHOA
WHERE KH.TENKHOA LIKE N'Công nghệ thông tin'
EXCEPT
SELECT GV1.MAGV,GV1.HOTEN
FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM JOIN KHOA KH1 ON BM1.MAKHOA=KH1.MAKHOA
WHERE KH1.TENKHOA LIKE N'Công nghệ thông tin' AND GV1.MAGV IN(SELECT TGDT.MAGV
															  FROM THAMGIADT TGDT)
--Q45. Tìm những giáo viên chưa tham gia bất kỳ đề tài nào
SELECT*
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM THAMGIADT TGDT
				 WHERE GV.MAGV=TGDT.MAGV)
--Q46. Cho biết giáo viên có lương lớn hơn lương của giáo viên 'Nguyễn Hoài An'
SELECT*
FROM GIAOVIEN GV
WHERE GV.LUONG >(SELECT GV1.LUONG
				 FROM GIAOVIEN GV1 
				 WHERE GV1.HOTEN LIKE N'Nguyễn Hoài An')
--Q47. Tìm Những trưởng bộ môn tham gia tối thiểu 1 đề tài
	--CÁCH 1:
SELECT BM.TRUONGBM
FROM BOMON BM
EXCEPT
SELECT BM1.TRUONGBM
FROM BOMON BM1
WHERE NOT EXISTS(SELECT 1
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MAGV=BM1.TRUONGBM)
	--CÁCH 2:
SELECT DISTINCT BM.TRUONGBM
FROM BOMON BM JOIN THAMGIADT TGDT ON BM.TRUONGBM=TGDT.MAGV
	--CÁCH 3:
SELECT BM.TRUONGBM
FROM BOMON BM
WHERE (SELECT COUNT(DISTINCT TGDT.MADT)
	   FROM THAMGIADT TGDT
	   WHERE BM.TRUONGBM = TGDT.MAGV)>=1
--Q48. Tìm giáo viên trùng tên và cùng giới tính với các giáo viên khác trong cùng bộ môn
SELECT*
FROM GIAOVIEN GV1
WHERE EXISTS (
    SELECT GV2.MAGV
    FROM GIAOVIEN GV2
    WHERE GV1.MABM = GV2.MABM 
    AND GV1.PHAI = GV2.PHAI 
	AND GV1.HOTEN=GV2.HOTEN
    AND GV1.MAGV <> GV2.MAGV
)
ORDER BY GV1.MABM
--Q49. Tìm những giáo viên có lương lớn hơn lương của ít nhất một giáo viên bộ môn 'Công Nghệ Phần Mềm'
SELECT*
FROM GIAOVIEN GV
WHERE GV.LUONG > ANY (SELECT GV1.LUONG
					  FROM GIAOVIEN GV1 JOIN BOMON BM ON GV1.MABM =BM.MABM
					  WHERE BM.TENBM LIKE N'Công Nghệ Phần Mềm')
--Q50. Tìm Những giáo viên có lương lớn hơn lương của tất cả giáo viên thuộc bộ môn 'Hệ Thống Thông Tin'
SELECT*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
WHERE GV.LUONG > ALL (
    SELECT GIAOVIEN.LUONG
    FROM GIAOVIEN, BOMON
    WHERE GIAOVIEN.MABM = BOMON.MABM AND BOMON.TENBM LIKE N'Hệ Thống Thông Tin'
)
AND BM.TENBM NOT LIKE N'Hệ Thống Thông Tin'
--Q51. Cho biết tên khoa có đông giáo viên nhất
SELECT KH.MAKHOA,KH.TENKHOA
FROM KHOA KH LEFT JOIN BOMON BM ON KH.MAKHOA=BM.MAKHOA JOIN GIAOVIEN GV ON GV.MABM=BM.MABM
GROUP BY KH.MAKHOA,KH.TENKHOA
HAVING COUNT(GV.MAGV) >= ALL (SELECT COUNT(GV1.MAGV)
							  FROM KHOA KH1 JOIN BOMON BM1 ON KH1.MAKHOA=BM1.MAKHOA JOIN GIAOVIEN GV1 ON BM1.MABM=GV1.MABM
							  GROUP BY KH1.MAKHOA,KH1.TENKHOA)
--Q52. Cho biết họ tên giáo viên chủ nhiệm nhiều đề tài nhất
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV LEFT JOIN DETAI DT ON GV.MAGV=DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DT.MADT) >= ALL (SELECT COUNT(DT1.MADT)
							  FROM GIAOVIEN GV1 LEFT JOIN DETAI DT1 ON GV1.MAGV=DT1.GVCNDT
							  GROUP BY GV1.MAGV,GV1.HOTEN)
--Q53. Cho biết mã bộ môn có nhiều giáo viên nhất
SELECT GV.MABM
FROM GIAOVIEN GV
GROUP BY GV.MABM
HAVING COUNT(GV.MAGV) >= ALL(SELECT COUNT(GV1.MAGV)
							 FROM GIAOVIEN GV1
							 GROUP BY GV1.MABM)
--Q54. Cho biết tên giáo viên và tên bộ môn của giáo viên tham gia nhiều đê tài nhất
SELECT GV.HOTEN,BM.TENBM
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN,BM.MABM,BM.TENBM 
HAVING COUNT(DISTINCT TGDT.MADT) >= ALL (SELECT COUNT(DISTINCT TGDT1.MADT)
										 FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM JOIN THAMGIADT TGDT1 ON GV1.MAGV=TGDT1.MAGV
										 GROUP BY GV1.MAGV,GV1.HOTEN,BM1.MABM,BM1.TENBM) 
--Q55. Cho biết tên giáo viên tham gia nhiều đề tài nhất của bộ mốn 'HTTT'
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV
WHERE GV.MABM LIKE 'HTTT'
GROUP BY GV.MAGV,GV.HOTEN,GV.MABM
HAVING COUNT(DISTINCT TGDT.MADT) >= ALL (SELECT COUNT(DISTINCT TGDT1.MADT)
										 FROM GIAOVIEN GV1 JOIN THAMGIADT TGDT1 ON GV1.MAGV=TGDT1.MAGV
										 WHERE GV.MABM LIKE 'HTTT'
										 GROUP BY GV1.MAGV,GV1.HOTEN,GV1.MABM) 
--Q56. Cho biết tên giáo viên và tên bộ môn của giáo viên có nhiều người thân nhất
SELECT GV.HOTEN,BM.TENBM
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN NGUOITHAN NT ON GV.MAGV=NT.MAGV
GROUP BY GV.MAGV,GV.HOTEN,BM.MABM,BM.TENBM
HAVING COUNT(NT.MAGV) >= ALL (SELECT COUNT(NT1.MAGV)
							  FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM JOIN NGUOITHAN NT1 ON GV1.MAGV=NT1.MAGV
							  GROUP BY GV1.MAGV,GV1.HOTEN,BM1.MABM,BM1.TENBM)
--Q57. Cho biết tên trưởng bộ môn mà chủ nhiệm nhiều đề tài nhất
SELECT GV.HOTEN
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM JOIN DETAI DT ON BM.TRUONGBM = DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DT.MADT) >= ALL(SELECT COUNT(DT1.MADT)
							 FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MAGV=BM1.TRUONGBM JOIN DETAI DT1 ON BM1.TRUONGBM = DT1.GVCNDT
							 GROUP BY GV1.MAGV,GV1.HOTEN)
--Q58. Cho biết tên giáo viên nào mà tham gia đề tài đủ tất cả các chủ đề.
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CD.MACD
				 FROM CHUDE CD
				 EXCEPT
				 SELECT DT.MACD
				 FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT
				 WHERE GV.MAGV=TGDT.MAGV)
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS (SELECT*
				  FROM CHUDE CD
				  WHERE NOT EXISTS(SELECT DT.MACD
								   FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT
								   WHERE TGDT.MAGV=GV.MAGV AND CD.MACD=DT.MACD))
	--C3:GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN DETAI DT ON DT.MADT=TGDT.MADT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT DT.MACD)=(SELECT COUNT(CD.MACD)
								FROM CHUDE CD)
--Q59. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn HTTT tham gia.
	--C1:EXCEPT
SELECT DT.MADT,DT.TENDT
FROM DETAI DT 
WHERE NOT EXISTS(SELECT GV.MAGV
				 FROM GIAOVIEN GV
				 WHERE GV.MABM LIKE 'HTTT'
				 EXCEPT
				 SELECT GV1.MAGV
				 FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON TGDT.MAGV=GV1.MAGV
				 WHERE TGDT.MADT = DT.MADT AND GV1.MABM LIKE 'HTTT')
	--C2:NOT EXISTS
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS (SELECT*
				  FROM GIAOVIEN GV
				  WHERE GV.MABM LIKE 'HTTT' AND NOT EXISTS(SELECT TGDT.MAGV
														   FROM THAMGIADT TGDT
														   WHERE TGDT.MADT=DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING
SELECT DT.MADT,DT.TENDT
FROM DETAI DT JOIN THAMGIADT TGDT ON TGDT.MADT=DT.MADT JOIN GIAOVIEN GV ON GV.MAGV=TGDT.MAGV
WHERE GV.MABM LIKE 'HTTT'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV)=(SELECT COUNT(GV1.MAGV)
								  FROM GIAOVIEN GV1
								  WHERE GV1.MABM LIKE 'HTTT')
--Q60. Cho biết tên đề tài có tất cả giảng viên bộ môn “Hệ thống thông tin” tham gia
	--C1:EXCEPT
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS (SELECT GV.MAGV
				  FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
				  WHERE BM.TENBM LIKE N'Hệ thống thông tin'
				  EXCEPT
				  SELECT TGDT.MAGV
				  FROM THAMGIADT TGDT
				  WHERE TGDT.MADT = DT.MADT)
	--C2:NOT EXISTS
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT*
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
				 WHERE BM.TENBM LIKE N'Hệ thống thông tin' AND NOT EXISTS(SELECT TGDT.MAGV
																		  FROM THAMGIADT TGDT
																		  WHERE TGDT.MADT=DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING
SELECT DT.TENDT
FROM DETAI DT
LEFT JOIN THAMGIADT TG ON TG.MADT = DT.MADT
LEFT JOIN GIAOVIEN GV ON GV.MAGV = TG.MAGV
GROUP BY DT.MADT, DT.TENDT
HAVING COUNT(DISTINCT CASE WHEN GV.MABM = N'Hệ thống thông tin' THEN GV.MAGV ELSE NULL END) = (
	SELECT COUNT(CASE WHEN GV2.MABM = N'Hệ thống thông tin' THEN GV2.MAGV ELSE NULL END)
	FROM GIAOVIEN GV2
)
--Q61. Cho biết giáo viên nào đã tham gia tất cả các đề tài có mã chủ đề là QLGD.
	--C1:EXCEPT
SELECT GV.*
FROM GIAOVIEN GV
WHERE NOT EXISTS (SELECT DT.MADT
				  FROM DETAI DT
				  WHERE DT.MACD LIKE 'QLGD'
				  EXCEPT
				  SELECT DT1.MADT
				  FROM THAMGIADT TGDT JOIN DETAI DT1 ON TGDT.MADT=DT1.MADT
				  WHERE TGDT.MAGV=GV.MAGV)
	--C2:NOT EXISTS
SELECT GV.*
FROM GIAOVIEN GV
WHERE NOT EXISTS (SELECT DT.MADT
				  FROM DETAI DT
				  WHERE DT.MACD LIKE 'QLGD' AND NOT EXISTS(SELECT TGDT.MADT
														   FROM THAMGIADT TGDT
														   WHERE TGDT.MAGV = GV.MAGV AND DT.MADT = TGDT.MADT))
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON TGDT.MAGV=GV.MAGV JOIN DETAI DT ON DT.MADT=TGDT.MADT
WHERE DT.MACD LIKE 'QLGD'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT)=(SELECT COUNT(DT1.MADT)
								  FROM DETAI DT1
								  WHERE DT1.MACD LIKE 'QLGD')
--Q62. Cho biết tên giáo viên nào tham gia tất cả các đề tài mà giáo viên Trần Trà Hương đã tham gia.
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT TGDT.MADT
				 FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON TGDT.MAGV=GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
				 EXCEPT
				 SELECT TGDT1.MADT
				 FROM THAMGIADT TGDT1
				 WHERE TGDT1.MAGV=GV.MAGV) AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT*
				 FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON TGDT.MAGV=GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'Trần Trà Hương' AND NOT EXISTS(SELECT TGDT1.MADT
																	   FROM THAMGIADT TGDT1 
																	   WHERE TGDT1.MAGV=GV.MAGV AND TGDT1.MADT=TGDT.MADT)) AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN
(GIAOVIEN GV1 JOIN THAMGIADT TGDT1 ON GV1.MAGV=TGDT1.MAGV AND GV1.HOTEN LIKE N'Trần Trà Hương') ON TGDT1.MADT=TGDT.MADT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT)=(SELECT COUNT(DISTINCT TGDT2.MADT)
								  FROM THAMGIADT TGDT2 JOIN GIAOVIEN GV2 ON TGDT2.MAGV=GV2.MAGV
								  WHERE GV2.HOTEN LIKE N'Trần Trà Hương') AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
--Q63. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn Hóa Hữu Cơ tham gia.
	--C1:EXCEPT
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS (SELECT GV.MAGV
				  FROM GIAOVIEN GV JOIN BOMON BM ON BM.MABM = GV.MABM
				  WHERE BM.TENBM LIKE N'Hóa Hữu Cơ'
				  EXCEPT
				  SELECT TGDT.MAGV
				  FROM THAMGIADT TGDT JOIN GIAOVIEN GV1 ON GV1.MAGV=TGDT.MAGV JOIN BOMON BM1 ON GV1.MABM=BM1.MABM
				  WHERE TGDT.MADT=DT.MADT AND BM1.TENBM LIKE N'Hóa Hữu Cơ')
	--C2:NOT EXISTS
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT*
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
				 WHERE BM.TENBM LIKE N'Hóa Hữu Cơ' AND NOT EXISTS(SELECT TGDT.MAGV
																  FROM THAMGIADT TGDT
																  WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING
SELECT DT.MADT,DT.TENDT
FROM DETAI DT JOIN THAMGIADT TGDT ON DT.MADT=TGDT.MADT JOIN GIAOVIEN GV ON TGDT.MAGV=GV.MAGV JOIN BOMON BM ON BM.MABM=GV.MABM
WHERE BM.TENBM LIKE N'Hóa Hữu Cơ'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV)=(SELECT COUNT(GV1.MAGV)
								  FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM
								  WHERE BM1.TENBM LIKE N'Hóa Hữu Cơ')
--Q64. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài 006.
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.SOTT
				 FROM CONGVIEC CV
				 WHERE CV.MADT='006'
				 EXCEPT
				 SELECT TGDT.STT
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT ='006')
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.SOTT
				 FROM CONGVIEC CV
				 WHERE CV.MADT = '006' AND NOT EXISTS(SELECT TGDT.STT
													  FROM THAMGIADT TGDT
													  WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT='006' AND TGDT.STT=CV.SOTT))
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN CONGVIEC CV ON TGDT.MADT=CV.MADT
WHERE TGDT.MADT='006'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.STT)=(SELECT COUNT(CV1.SOTT)
								 FROM CONGVIEC CV1
								 WHERE CV1.MADT='006')
--Q65. Cho biết giáo viên nào đã tham gia tất cả các đề tài của chủ đề Ứng dụng công nghệ.
	--C1:EXCEPT
SELECT GV.*
FROM GIAOVIEN GV 
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT JOIN CHUDE CD ON DT.MACD=CD.MACD
				 WHERE CD.TENCD LIKE N'Ứng dụng công nghệ'
				 EXCEPT 
				 SELECT TGDT.MADT
				 FROM THAMGIADT TGDT JOIN DETAI DT1 ON TGDT.MADT=DT1.MADT JOIN CHUDE CD1 ON DT1.MACD=CD1.MACD
				 WHERE TGDT.MAGV=GV.MAGV AND CD1.TENCD LIKE N'Ứng dụng công nghệ')
	--C2:NOT EXISTS
SELECT GV.*
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT JOIN CHUDE CD ON DT.MACD=CD.MACD
				 WHERE CD.TENCD LIKE N'Ứng dụng công nghệ' AND NOT EXISTS(SELECT TGDT.MADT
																		  FROM THAMGIADT TGDT
																		  WHERE TGDT.MADT=DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN DETAI DT ON DT.MADT=TGDT.MADT JOIN CHUDE CD ON DT.MACD=CD.MACD
WHERE CD.TENCD LIKE N'Ứng dụng công nghệ'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT DT.MADT)=(SELECT COUNT(DT1.MADT)
								FROM DETAI DT1 JOIN CHUDE CD ON DT1.MACD=CD.MACD
								WHERE CD.TENCD LIKE N'Ứng dụng công nghệ')
--Q66. Cho biết tên giáo viên nào đã tham gia tất cả các đề tài của do Trần Trà Hương làm chủ nhiệm.
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE GV.HOTEN NOT LIKE N'Trần Trà Hương' AND NOT EXISTS(SELECT DT.MADT
														 FROM DETAI DT JOIN GIAOVIEN GV1 ON GV1.MAGV=DT.GVCNDT
														 WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
														 EXCEPT
														 SELECT TGDT.MADT
														 FROM THAMGIADT TGDT
														 WHERE TGDT.MAGV=GV.MAGV)
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE GV.HOTEN NOT LIKE N'Trần Trà Hương' AND NOT EXISTS(SELECT DT.MADT
														 FROM DETAI DT JOIN GIAOVIEN GV1 ON GV1.MAGV=DT.GVCNDT
														 WHERE GV1.HOTEN LIKE N'Trần Trà Hương' AND NOT EXISTS(SELECT TGDT.MADT
																											   FROM THAMGIADT TGDT
																											   WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT=DT.MADT))
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV LEFT JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV LEFT JOIN DETAI DT ON DT.MADT=TGDT.MADT
LEFT JOIN (CASE WHEN N'X' IN (SELECT GV3.HOTEN
							  FROM GIAOVIEN GV3) THEN (THAMGIADT TGDT1 JOIN GIAOVIEN GV2 ON TGDT1.MAGV=GV2.MAGV AND GV2.HOTEN LIKE N'X') ELSE NULL END) ON TGDT1.MADT=TGDT.MADT
WHERE GV.HOTEN NOT LIKE N'X' 
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT DT.MADT)=(SELECT COUNT(DT1.MADT)
								FROM DETAI DT1 JOIN GIAOVIEN GV1 ON DT1.GVCNDT=GV1.MAGV
								WHERE GV1.HOTEN LIKE N'X')

SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV 
LEFT JOIN THAMGIADT TGDT ON GV.MAGV = TGDT.MAGV 
LEFT JOIN DETAI DT ON DT.MADT = TGDT.MADT
LEFT JOIN ( THAMGIADT TGDT1 JOIN GIAOVIEN GV2 ON TGDT1.MAGV = GV2.MAGV) ON TGDT1.MADT = TGDT.MADT
WHERE GV.HOTEN NOT LIKE N'Trần Trà Hương' 
GROUP BY GV.MAGV, GV.HOTEN
HAVING COUNT(DISTINCT CASE WHEN GV2.HOTEN LIKE N'Trần Trà Hương' THEN DT.MADT ELSE NULL END) = (
    SELECT COUNT(TGDT2.MADT)
    FROM THAMGIADT TGDT2 
    JOIN GIAOVIEN GV1 ON TGDT2.MAGV = GV1.MAGV
    WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
) 



--Q67. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa CNTT tham gia.
	--C1:EXCEPT
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV 
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
				 WHERE BM.MAKHOA ='CNTT'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MADT=DT.MADT)
	--C2:NOT EXISTS
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT *
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM
				 WHERE BM.MAKHOA LIKE 'CNTT' AND NOT EXISTS(SELECT TGDT.MAGV
															 FROM THAMGIADT TGDT
															 WHERE TGDT.MADT=DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING
SELECT DT.MADT,DT.TENDT
FROM DETAI DT JOIN THAMGIADT TGDT ON DT.MADT=TGDT.MADT JOIN GIAOVIEN GV ON GV.MAGV=TGDT.MAGV JOIN BOMON BM ON GV.MABM=BM.MABM
WHERE BM.MAKHOA LIKE N'CNTT'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT GV.MAGV)=(SELECT COUNT(GV1.MAGV)
								FROM GIAOVIEN GV1 JOIN BOMON BM1 ON GV1.MABM=BM1.MABM
								WHERE BM1.MAKHOA ='CNTT')
--Q68. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài Nghiên cứu tế bào gốc.
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.MADT,CV.SOTT
				 FROM CONGVIEC CV JOIN DETAI DT ON CV.MADT=DT.MADT 
				 WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc'
				 EXCEPT
				 SELECT TGDT.MADT,TGDT.STT
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MAGV=GV.MAGV)
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT*
				 FROM CONGVIEC CV JOIN DETAI DT ON CV.MADT=DT.MADT
				 WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc' AND NOT EXISTS(SELECT TGDT.MADT,TGDT.STT
																			 FROM THAMGIADT TGDT
																			 WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT=CV.MADT AND TGDT.STT=CV.SOTT))
	--C3: GROUP BY HAVING
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON TGDT.MAGV=GV.MAGV JOIN DETAI DT ON DT.MADT=TGDT.MADT JOIN CONGVIEC CV ON CV.MADT=DT.MADT
WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.STT)=(SELECT COUNT(CV1.SOTT)
								 FROM CONGVIEC CV1 JOIN DETAI DT1 ON CV1.MADT=DT1.MADT
								 WHERE DT1.TENDT LIKE N'Nghiên cứu tế bào gốc')
--Q69. Tìm tên các giáo viên được phân công làm tất cả các đề tài có kinh phí trên 100 triệu?
	--C1:EXCEPT
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT
				 WHERE DT.KINHPHI > 100
				 EXCEPT 
				 SELECT TGDT.MADT
				 FROM THAMGIADT TGDT
				 WHERE GV.MAGV=TGDT.MAGV)
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT*
				 FROM DETAI DT
				 WHERE DT.KINHPHI > 100 AND NOT EXISTS(SELECT TGDT.MADT
													   FROM THAMGIADT TGDT
													   WHERE TGDT.MADT=DT.MADT AND GV.MAGV=TGDT.MAGV))
	--C3: GROUP BY HAVING	
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV JOIN DETAI DT ON DT.MADT=TGDT.MADT
WHERE DT.KINHPHI > 100
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT)=(SELECT COUNT(DT.MADT) 
								  FROM DETAI DT
								  WHERE DT.KINHPHI > 100)
--Q70. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa Sinh Học tham gia.
	--C1:EXCEPT
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA KH ON BM.MAKHOA=KH.MAKHOA
				 WHERE KH.TENKHOA LIKE N'Sinh Học'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MADT=DT.MADT)
	--C2:NOT EXISTS
SELECT DT.MADT,DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT*
				 FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM=BM.MABM JOIN KHOA KH ON BM.MAKHOA=KH.MAKHOA
				 WHERE KH.TENKHOA LIKE N'Sinh Học' AND NOT EXISTS(SELECT TGDT.MAGV
																  FROM THAMGIADT TGDT
																  WHERE TGDT.MADT=DT.MADT AND TGDT.MAGV=GV.MAGV))
	--C3: GROUP BY HAVING	
SELECT DT.MADT,DT.TENDT
FROM DETAI DT JOIN THAMGIADT TGDT ON DT.MADT=TGDT.MADT JOIN GIAOVIEN GV ON TGDT.MAGV=GV.MAGV JOIN BOMON BM ON BM.MABM=GV.MABM JOIN KHOA KH ON KH.MAKHOA=BM.MAKHOA
WHERE KH.TENKHOA LIKE N'Sinh Học'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT GV.MAGV) = (SELECT COUNT(GV.MAGV) 
								  FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM = BM.MABM JOIN KHOA K ON BM.MAKHOA = K.MAKHOA 
								  WHERE K.TENKHOA LIKE N'Sinh Học')
--Q71. Cho biết mã số, họ tên, ngày sinh của giáo viên tham gia tất cả các công việc của đề tài “Ứng dụng hóa học xanh”.
SELECT GV.MAGV,GV.HOTEN,GV.NGSINH
FROM GIAOVIEN GV 
WHERE NOT EXISTS(SELECT CV.MADT,CV.SOTT
				 FROM CONGVIEC CV JOIN DETAI DT ON CV.MADT=DT.MADT
				 WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh'
				 EXCEPT 
				 SELECT TGDT.MADT,TGDT.STT
				 FROM THAMGIADT TGDT
				 WHERE TGDT.MAGV=GV.MAGV)
	--C2:NOT EXISTS
SELECT GV.MAGV,GV.HOTEN,GV.NGSINH
FROM GIAOVIEN GV 
WHERE NOT EXISTS(SELECT*
				 FROM CONGVIEC CV JOIN DETAI DT ON CV.MADT=DT.MADT
				 WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh' AND NOT EXISTS(SELECT TGDT.MADT,TGDT.STT
																			 FROM THAMGIADT TGDT
																			 WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT=CV.MADT AND TGDT.STT=CV.SOTT))
	--C3: GROUP BY HAVING	
SELECT GV.MAGV, GV.HOTEN, GV.NGSINH
FROM GIAOVIEN GV 
LEFT JOIN THAMGIADT TGDT ON TGDT.MAGV = GV.MAGV LEFT JOIN DETAI DT ON TGDT.MADT = DT.MADT AND DT.TENDT LIKE N'Ứng dụng hóa học xanh'
GROUP BY GV.MAGV, GV.HOTEN, GV.NGSINH
HAVING COUNT(DISTINCT CASE WHEN DT.TENDT LIKE N'Ứng dụng hóa học xanh' THEN 1 END) = (SELECT COUNT(*) 
																						FROM CONGVIEC CV  JOIN DETAI DT1 ON DT1.MADT = CV.MADT 
																						WHERE DT1.TENDT LIKE N'Ứng dụng hóa học xanh')
--Q72. Cho biết mã số, họ tên, tên bộ môn và tên người quản lý chuyên môn của giáo viên tham gia tất cả các đề tài thuộc chủ đề “Nghiên cứu phát triển”. 
	--Cách 1: EXCEPT
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN AS GVQLCM
FROM GIAOVIEN GV JOIN GIAOVIEN QLCM ON GV.GVQLCM = QLCM.MAGV JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE NOT EXISTS (SELECT DT1.MADT
				  FROM DETAI DT1 JOIN CHUDE CD1 ON DT1.MACD = CD1.MACD 
				  WHERE CD1.TENCD LIKE N'Nghiên cứu phát triển'
				  EXCEPT
				  SELECT TGDT.MADT
				  FROM THAMGIADT TGDT JOIN DETAI DT2 ON TGDT.MADT = DT2.MADT JOIN CHUDE CD2 ON DT2.MACD = CD2.MACD AND CD2.TENCD LIKE N'Nghiên cứu phát triển'
				  WHERE GV.MAGV = TGDT.MAGV)
	--Cách 2: NOT EXISTS
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN AS GVQLCM
FROM GIAOVIEN GV JOIN GIAOVIEN QLCM ON GV.GVQLCM = QLCM.MAGV JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE NOT EXISTS (SELECT DT.MADT 
				  FROM DETAI DT JOIN CHUDE CD ON DT.MACD = CD.MACD AND CD.TENCD LIKE N'Nghiên cứu phát triển'
				  WHERE NOT EXISTS (SELECT TGDT.MAGV 
									FROM THAMGIADT TGDT 
									WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV))
	--Cách 3: COUNT
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN AS GVQLCM
FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON TGDT.MAGV = GV.MAGV JOIN DETAI DT ON TGDT.MADT = DT.MADT JOIN CHUDE CD ON DT.MACD = CD.MACD JOIN GIAOVIEN QLCM ON GV.GVQLCM = QLCM.MAGV JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE CD.TENCD LIKE N'Nghiên cứu phát triển'
GROUP BY GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN 
HAVING COUNT(DISTINCT DT.MADT) = (SELECT COUNT(DT2.MADT)
								  FROM DETAI DT2 JOIN CHUDE CD2 ON DT2.MACD = CD2.MACD 
								  WHERE CD2.TENCD LIKE N'Nghiên cứu phát triển')
--STORE PROCEDURE

--P1.Xuầ́t ra toàn bộ danh sách giáo viên .
GO 
CREATE PROCEDURE SP_DanhSachGiaoVien
AS BEGIN
	SELECT* FROM GIAOVIEN
END
GO
EXEC dbo.SP_DanhSachGiaoVien
--P2. Tính số lượng đề tài mà một giáo viên đang thực hiện.
GO
CREATE PROCEDURE SP_SoLuongDeTai 
	@MaGV VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	DECLARE @SoLuongDeTai INT
	SELECT @SoLuongDeTai = COUNT(DISTINCT TGDT.MADT) 
	FROM THAMGIADT TGDT 
	RIGHT JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
	WHERE GV.MAGV = @MaGV
	GROUP BY GV.MAGV
	
	PRINT N'Số lượng đề tài của giáo viên ' + @MaGV + N' là: ' + CAST(@SoLuongDeTai AS VARCHAR(10)) 
END
GO
DECLARE @i INT,
		@MaGV VARCHAR(3)
SET @i = 0
WHILE (@i <= 10)
BEGIN
	SET @MaGV = RIGHT('000' + CAST(@i AS VARCHAR(3)),3)
	EXEC dbo.SP_SoLuongDeTai @MaGV
	SET @i=@i+1
END
--P3. In thông tin chi tiết của một giáo viên(sử dụng lệnh print): Thông tin cá nhân, Số lượng đề tài tham gia, Số lượng thân nhân của giáo viên đó.
GO 
CREATE PROCEDURE SP_ThongTinGiaoVien
	@MaGV VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1)
		RETURN
	END

	DECLARE @SoLuongDeTai INT
	SELECT @SoLuongDeTai = COUNT(DISTINCT TGDT.MADT)
	FROM THAMGIADT TGDT
	RIGHT JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
	WHERE GV.MAGV = @MaGV
	GROUP BY GV.MAGV

	DECLARE @SoLuongThanNhan INT
	SELECT @SoLuongThanNhan = COUNT(NT.TEN)
	FROM NGUOITHAN NT
	RIGHT JOIN GIAOVIEN GV ON NT.MAGV = GV.MAGV
	WHERE GV.MAGV = @MaGV
	GROUP BY GV.MAGV

	DECLARE @ThongTinCaNhan VARCHAR(1000)
	SELECT @ThongTinCaNhan = N'Họ Tên: ' + ISNULL(HOTEN, '') + CHAR(13) + CHAR(10) +
							 N'Lương: ' + ISNULL(CAST(LUONG AS NVARCHAR(10)), '') + CHAR(13) + CHAR(10) +
							 N'Phái: ' + ISNULL(PHAI, '') + CHAR(13) + CHAR(10) +
							 N'Ngày Sinh: ' + ISNULL(CAST(NGSINH AS NVARCHAR(20)), '') + CHAR(13) + CHAR(10) +
							 N'Địa Chỉ: ' + ISNULL(DIACHI, '') + CHAR(13) + CHAR(10) +
							 N'GVQLCM: ' + ISNULL(GVQLCM, '') + CHAR(13) + CHAR(10) +
							 N'Mã BM: ' + ISNULL(MaBM, '')
	FROM GIAOVIEN
	WHERE MAGV = @MaGV

	PRINT N'Thông tin cá nhân của giáo viên: ' + @MaGV + CHAR(13) + CHAR(10) + @ThongTinCaNhan
	PRINT N'Số lượng đề tài: ' + CAST(@SoLuongDeTai AS CHAR(10))
	PRINT N'Số lượng thân nhân: ' + CAST(@SoLuongThanNhan AS CHAR(10)) 
END
GO
DECLARE @i INT,
		@MaGV VARCHAR(3)
SET @i = 0
WHILE(@i <= 10)
BEGIN
	SET @MaGV = RIGHT('000' + CAST(@i AS VARCHAR(3)),3)
	EXEC dbo.SP_ThongTinGiaoVien @MaGV
	SET @i = @i +1
END
--P4. Kiểm tra xem 1 giáo viên có tồn tại hay không
GO
CREATE PROC SP_TonTaiGiaoVien 
	@MaGV VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END
	
	PRINT N'Giáo viên '+ @MaGV + N' có tồn tại'
END
GO
EXEC dbo.SP_TonTaiGiaoVien '000'
EXEC dbo.SP_TonTaiGiaoVien '001'
--P5. Kiểm tra quy định của một giáo viên: Chỉ được thực hiện các đề tài mà bộ môn của giáo viên đó làm chủ nhiệm.
GO
CREATE PROC SP_ThucHienDeTaiCuaBoMon
	@MaGV VARCHAR(3),
	@MaDT VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT *
				  FROM GIAOVIEN GV
				  WHERE GV.MABM IN (SELECT BM.MABM
									FROM BOMON BM 
									JOIN GIAOVIEN GV1 ON BM.MABM=GV1.MABM
									JOIN DETAI DT ON DT.GVCNDT=GV1.MAGV
									WHERE DT.MADT = @MaDT)
									AND GV.MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s tham gia vào đề tài không do bộ môn mình chủ nhiệm',15,1,@MaGV)
		RETURN
	END

	PRINT N'Giáo viên thực hiện đúng đề tài do bộ môn chủ nhiệm'
END
GO
EXEC dbo.SP_ThucHienDeTaiCuaBoMon '004','006'
EXEC dbo.SP_ThucHienDeTaiCuaBoMon '000','001'
EXEC dbo.SP_ThucHienDeTaiCuaBoMon '001','000'
EXEC dbo.SP_ThucHienDeTaiCuaBoMon '001','006'
--P6. Thực hiện thêm một phân công cho giáo viên thực hiện một công việc của đề tài:
	--P6 Kiểm tra thông tin đầu vào hợp lệ: giáo viên phải tồn tại, công việc phải tồn tại, thời gian tham gia phải >0
	--P6 Kiểm tra quy định ở câu n.
GO
CREATE PROC SP_PhanCongCongViec
	@MaGV VARCHAR(3),
	@MaDT VARCHAR(3),
	@STT INT,
	@PhuCap FLOAT,
	@KetQua NVARCHAR(20)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM CONGVIEC WHERE MADT = @MaDT AND SOTT = @STT)
	BEGIN
		RAISERROR(N'Công việc %d không tồn tại trong đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT *
				  FROM GIAOVIEN GV
				  WHERE GV.MABM IN (SELECT BM.MABM
									FROM BOMON BM
									JOIN GIAOVIEN GV1 ON BM.MABM=GV1.MABM
									JOIN DETAI DT ON DT.GVCNDT=GV1.MAGV
									WHERE DT.MADT = @MaDT)
									AND GV.MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên không được tham gia vào đề tài mà bộ môn mình không chủ nhiệm',15,1)
		RETURN
	END

	INSERT INTO THAMGIADT VALUES(@MaGV,@MaDT,@STT,@PhuCap,@KetQua)
END
GO
--EXEC dbo.SP_PhanCongCongViec '004','006',2,0.1,NULL
EXEC dbo.SP_PhanCongCongViec '000','006',2,0.1,NULL
EXEC dbo.SP_PhanCongCongViec '004','000',2,0.1,NULL
EXEC dbo.SP_PhanCongCongViec '004','006',10,0.1,NULL
-- P7. Thực hiện xoá một giáo viên theo mã. Nếu giáo viên có thông tin liên quan (Có thân nhân, có làm đề tài, ...) thì báo lỗi.
GO
CREATE PROC SP_XoaGiaoVien
	@MaGV VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF EXISTS(SELECT 1 
			  FROM THAMGIADT TGDT,NGUOITHAN NT,BOMON BM,KHOA KH,DETAI DT,GV_DT GVDT
			  WHERE @MaGV = TGDT.MAGV OR @MaGV = NT.MAGV OR @MaGV = BM.TRUONGBM OR @MaGV = KH.TRUONGKHOA OR @MaGV = DT.GVCNDT OR @MaGV = GVDT.MAGV)
	BEGIN
		RAISERROR(N'Chưa xóa con',15,1)
		RETURN
	END

	DELETE FROM GIAOVIEN WHERE MAGV = @MaGV
	PRINT N'Đã xóa thành công'
END
GO
EXEC dbo.SP_XoaGiaoVien '000'
EXEC dbo.SP_XoaGiaoVien '001'
INSERT INTO GIAOVIEN VALUES ('000',NULL,NULL,NULL,NULL,NULL,NULL,NULL)
EXEC dbo.SP_XoaGiaoVien '000'
SELECT* FROM GIAOVIEN
-- P8. In ra danh sách giáo viên của một phòng ban nào đó cùng với số lượng đề tài mà giáo viên tham gia, số thân nhân, số giáo viên mà giáo viên đó quản lý nếu có,...
GO
CREATE PROC SP_DanhSachGVPhongBan
	@MaKhoa VARCHAR(10)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM KHOA WHERE MAKHOA = @MaKhoa)
	BEGIN
		RAISERROR(N'Không tồn tại phòng ban %s',15,1,@MaKhoa)
		RETURN
	END

	SELECT GV.MAGV,COUNT(DISTINCT TGDT.MADT) AS SLDT,COUNT(DISTINCT NT.TEN) AS SLNT,COUNT(DISTINCT GV1.MAGV) AS SLGVQL
	FROM KHOA KH 
	LEFT JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA 
	LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
	LEFT JOIN THAMGIADT TGDT ON TGDT.MAGV = GV.MAGV
	LEFT JOIN NGUOITHAN NT ON GV.MAGV = NT.MAGV
	LEFT JOIN GIAOVIEN GV1 ON GV.MAGV = GV1.GVQLCM
	WHERE KH.MAKHOA = @MaKhoa AND GV.MAGV IS NOT NULL
	GROUP BY KH.MAKHOA,GV.MAGV
END
GO
EXEC dbo.SP_DanhSachGVPhongBan 'CNTT'
-- P9. Kiểm tra quy định của 2 giáo viên a, b: Nếu a là trưởng bộ môn c của b thì lương của a phải cao hơn lương của b. (a, b: mã giáo viên)
GO
CREATE PROC SP_LuongSoVoiGVThuong 
	@MaGV_A VARCHAR(3),
	@MaGV_B VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV_A) OR NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV_B)
	BEGIN
		RAISERROR(N'1 trong 2 giáo viên trên không tồn tại',15,1)
		RETURN
	END

	DECLARE @LuongA FLOAT,
			@LuongB FLOAT
	SELECT  @LuongA = LUONG FROM GIAOVIEN WHERE MAGV = @MaGV_A
	SELECT  @LuongB = LUONG FROM GIAOVIEN WHERE MAGV = @MaGV_B

	IF EXISTS(SELECT 1 FROM BOMON BM WHERE BM.TRUONGBM = @MaGV_A 
			  AND BM.MABM LIKE (SELECT GV.MABM FROM GIAOVIEN GV WHERE MAGV = @MaGV_B))
	BEGIN
		IF(@LuongA <= @LuongB)
		BEGIN
			RAISERROR(N'Lương của %s phải cao hơn luong của %s',15,1,@MaGV_A,@MaGV_B)
			RETURN
		END

		ELSE
		BEGIN
			PRINT N'Thỏa'
			RETURN
		END
	END

	IF EXISTS(SELECT 1 FROM BOMON BM WHERE BM.TRUONGBM = @MaGV_B 
			  AND BM.MABM LIKE (SELECT GV.MABM FROM GIAOVIEN GV WHERE MAGV = @MaGV_A))
	BEGIN
		IF(@LuongB <= @LuongA)
		BEGIN
			RAISERROR(N'Lương của %s phải cao hơn luong của %s',15,1,@MaGV_B,@MaGV_A)
			RETURN
		END

		ELSE
		BEGIN
			PRINT N'Thỏa'
			RETURN
		END
	END
END
GO
EXEC dbo.SP_LuongSoVoiGVThuong '002','003'
INSERT INTO GIAOVIEN VALUES ('000',NULL,10000,NULL,NULL,NULL,NULL,'HTTT')
EXEC dbo.SP_LuongSoVoiGVThuong '000','002'
EXEC dbo.SP_LuongSoVoiGVThuong '002','000'
DELETE FROM GIAOVIEN WHERE MAGV = '000'
-- P10. Thêm một giáo viên: Kiểm tra các quy định: Không trùng tên, tuổi > 18, lương > 0
GO
CREATE PROC SP_ThemGiaoVien
	@HoTen VARCHAR(3),
	@Luong FLOAT,
	@Phai NVARCHAR(5),
	@NGSINH DATETIME,
	@DiaChi NVARCHAR(50),
	@GVQLCM VARCHAR(3),
	@MaBM VARCHAR(3)
AS BEGIN
	IF EXISTS(SELECT 1 FROM GIAOVIEN WHERE HOTEN = @HoTen)
	BEGIN
		RAISERROR(N'Không được thêm tên trùng',15,1)
		RETURN
	END
	
	IF(DATEDIFF(YEAR,@NGSINH,GETDATE())<18)
	BEGIN
		RAISERROR(N'Tuổi phải lớn hơn hoặc bằng 18',15,1)
		RETURN
	END

	IF(@Luong <= 0)
	BEGIN
		RAISERROR(N'Bóc lột sức lao động',15,1)
		RETURN
	END

	DECLARE @i INT,
			@SoGV INT
	SET @i = 0
	SELECT @SoGV = COUNT(*) FROM GIAOVIEN
	
	WHILE(@i <= @SoGV)
	BEGIN 
		IF(RIGHT('000' + CAST(@i AS VARCHAR(3)), 3) NOT IN (SELECT MAGV FROM GIAOVIEN))
		BEGIN
			BREAK
		END
		SET @i = @i + 1
	END

	DECLARE @MaGV VARCHAR(3)
	SET @MaGV = RIGHT('000' + CAST(@i AS VARCHAR(3)), 3)

	IF @MaGV IS NULL OR @MaGV = ''
    BEGIN
        RAISERROR('Khong the tao ma gv moi.', 15, 1)
        RETURN
    END

	INSERT INTO GIAOVIEN 
	VALUES (@MaGV, @Hoten, @Luong, @Phai, @NGSinh, @DiaChi, @GVQLCM, @MaBM)
END
GO
-- P11. Mã giáo viên được xác định tự động theo quy tắc: Nếu đã có giáo viên 001, 002, 003 thì MAGV của giáo viên mới sẽ là 004. Nếu đã có giáo viên 001, 002, 005 thì MAGV của giáo viên mới là 003.
CREATE PROCEDURE SP_ThemGVTuDong @Hoten NVARCHAR(30),@Luong FLOAT,@Phai NVARCHAR(5),@NgaySinh date,@DiaChi NVARCHAR(50),@GVQLCM char(3),@MaBM varchar(10)
AS
BEGIN
    DECLARE @MaGV CHAR(3)
    DECLARE @soGV INT
    DECLARE @i INT
    SET @i = 1
    SELECT @soGV = COUNT(MAGV) FROM GIAOVIEN
    WHILE(@i <= @soGV)
    BEGIN
        IF RIGHT('000' + CAST(@i AS VARCHAR(3)), 3) NOT IN (SELECT MAGV FROM GIAOVIEN)
        BEGIN
            BREAK
        END
        SET @i = @i + 1
    END

    SET @MaGV = RIGHT('000' + CAST(@i AS VARCHAR(3)), 3)

    IF @MaGV IS NULL OR @MaGV = ''
    BEGIN
        RAISERROR('Khong the tao ma gv moi.', 16, 1)
        RETURN
    END

    INSERT INTO GIAOVIEN
    VALUES (@MaGV, @Hoten, @Luong, @Phai, @NgaySinh, @DiaChi, @GVQLCM, @MaBM)
END
GO

--Bài tập thêm
--1.Viết stored thực hiện phân công 1 giảng viên tham gia 1 công việc của 1 đề tài cụ thể. Lưu ý:
--mỗi giảng viên chỉ được tham gia tối đa 3 công việc của 1 đề tài. Nếu vi phạm thì báo lỗi
--không thực hiện phân công
GO
CREATE PROC SP_PhanCongCongViec
	@MaGV VARCHAR(3),
	@MaDT VARCHAR(3),
	@STT INT,
	@PhuCap FLOAT,
	@KetQua NVARCHAR(50)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN GV WHERE GV.MAGV=@MaGV)
	BEGIN
		RAISERROR(N'Không tồn tại giáo viên %s',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM DETAI DT WHERE DT.MADT=@MaDT)
	BEGIN
		RAISERROR(N'Không tồn tại đề tài %s',15,1,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM CONGVIEC CV WHERE CV.MADT=@MaDT AND CV.SOTT=@STT)
	BEGIN
		RAISERROR(N'Không tồn tại công việc %s thuộc đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	DECLARE @SoCV INT
	SET @SoCV =(SELECT COUNT(STT) FROM THAMGIADT WHERE MAGV=@MaGV AND MADT=@MaDT GROUP BY MAGV)

	IF(@SoCV >= 3)
	BEGIN
		RAISERROR(N'Số công việc mà giáo viên %s đã tham gia vào đề tài %s đã đạt tối đa',15,1,@MaGV,@MaDT)
		RETURN
	END

	INSERT INTO THAMGIADT (MAGV,MADT,STT,PHUCAP,KETQUA)
	VALUES (@MaGV,@MaDT,@STT,@PhuCap,@KetQua)
END
GO
--2. Viết store thực hiện cập nhật ngày kết thúc của dự án. Lưu ý, ngày kết thúc phải sau ngày bắt đầu theo quy định:
--• Đề tài cấp trường: thời gian thực hiện tối thiểu là 3 tháng, tối đa là 6 tháng
--• Đề tài cấp ĐHQG thời gian thực hiện tối thiểu là 6 tháng, tối đa là 9 tháng
--• Đề tài cấp nhà nước thời gian thực hiện tối thiểu là 12 tháng, tối đa là 24 tháng
CREATE PROC SP_CapNhatNgayKT
	@MaDT VARCHAR(3),
	@NgayKT DATE
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	DECLARE @NgayBD DATE
	SET @NgayBD = (SELECT NgayBD FROM DETAI WHERE MADT = @MaDT)

	DECLARE @ThoiGian INT
	SET @ThoiGian = DATEDIFF(MONTH, @NgayBD, @NgayKT)

	DECLARE @CapQL NVARCHAR(20)
	SET @CapQL = (SELECT CAPQL FROM DETAI WHERE MADT = @MaDT)

	IF((@ThoiGian > 6 OR @ThoiGian < 3) AND @CapQL = N'TRƯỜNG')
	BEGIN
		RAISERROR(N'Thời gian thực hiện là %d tháng (không nằm trong qui định đề tài cấp %s)',15,1,@ThoiGian,@CapQL)
		RETURN
	END

	IF((@ThoiGian < 6 OR @ThoiGian > 9) AND @CapQL = N'ĐHQG')
	BEGIN
		RAISERROR(N'Thời gian thực hiện là %d tháng (không nằm trong qui định đề tài cấp %s)',15,1,@ThoiGian,@CapQL)
		RETURN
	END

	IF((@ThoiGian < 12 OR @ThoiGian > 24) AND @CapQL = N'NHÀ NƯỚC')
	BEGIN
		RAISERROR(N'Thời gian thực hiện là %d tháng (không nằm trong qui định đề tài cấp %s)',15,1,@ThoiGian,@CapQL)
		RETURN
	END

	UPDATE DETAI
	SET NGAYKT = @NgayKT WHERE MADT = @MaDT
END
GO
--3. Viết store thực hiện cập nhật giáo viên quản lý chuyên môn cho 1 giảng viên cụ thể. Lưu ý,
--GVQLCM phải cùng bộ môn với giảng viên cần cập nhật.
CREATE PROC SP_CapNhatGVQLCM
	@GVQLCM VARCHAR(3),
	@MaGV VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @GVQLCM)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@GVQLCM)
		RETURN
	END
	
	IF NOT EXISTS(SELECT GV.MABM FROM GIAOVIEN GV WHERE GV.MAGV=@MaGV AND EXISTS(
				  SELECT 1 FROM GIAOVIEN GV1 WHERE GV1.MAGV=@GVQLCM AND GV1.MABM=GV.MABM))
	BEGIN
		RAISERROR(N'Giáo viên %s không cùng bộ môn với giáo viên %s',15,1,@GVQLCM,@MaGV)
		RETURN
	END

	UPDATE GIAOVIEN
	SET GVQLCM=@GVQLCM WHERE MAGV=@MaGV
END
GO
EXEC SP_CapNhatGVQLCM '001','003'
GO
--4.Viết stored thực hiện cập nhật trưởng khoa cho 1 khoa cụ thể. Lưu ý, trưởng khoa phải là
--người trong khoa và không được kiêm nhiệm chức vụ khác (trưởng bộ môn, gvqlcm)
--• Input: @truongkhoa, @makhoa
--• So sánh makhoa của Truongkhoa và @makhoa.
--• Lấy makhoa của @truongkhoa
--• So sanh if(@makhoatk != @makhoa
--1. Nếu khác: báo lỗi & thoát
--2. Nếu đúng: kiểm tra không kiêm nhiệm
--1. @truongkhoa NOT IN (truongbm) và NOT IN (gvqlcm):
--a. Nếu thuộc: báo lỗi và thoát
--b. Nếu không thuộc:
--i. Update Khoa set TruongKHoa = ‘????’ where makhoa=???
GO
CREATE PROC SP_CapNhatTruongKhoa
	@TruongKhoa VARCHAR(3),
	@MaKHOA VARCHAR(5)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE @TruongKhoa = MAGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@TruongKhoa)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM KHOA WHERE @MaKHOA = MAKHOA)
	BEGIN
		RAISERROR(N'Khoa %s không tồn tại',15,1,@MaKhoa)
		RETURN
	END

	DECLARE @MaBM VARCHAR(3)
	SET @MaBM = (SELECT MaBM FROM GIAOVIEN WHERE @TruongKhoa=MAGV)

	IF NOT EXISTS(SELECT 1 FROM KHOA KH JOIN BOMON BM ON KH.MAKHOA=BM.MAKHOA
				  WHERE @MaBM = BM.MABM AND @MaKHOA = KH.MAKHOA)
	BEGIN
		RAISERROR(N'Giáo viên %s không phải người trong khoa %s',15,1,@TruongKhoa,@MaKhoa)
		RETURN
	END

	IF (@TruongKhoa IN (SELECT GV.GVQLCM FROM GIAOVIEN GV WHERE GV.GVQLCM IS NOT NULL
						UNION
						SELECT BM.TRUONGBM FROM BOMON BM WHERE BM.TRUONGBM IS NOT NULL))
	BEGIN
		RAISERROR(N'Giáo Viên %s đang đảm nhận vai trò khác',15,1,@TruongKhoa)
		RETURN 
	END

	UPDATE KHOA
	SET TRUONGKHOA=@TruongKhoa WHERE MAKHOA = @MaKHOA
END
--5. Viết stored đếm số lượng công việc có kết quả “Đạt” của mỗi đề tài
GO
CREATE PROC SP_DemSoCongViecDat 
	@MaDT VARCHAR(3),
	@SoLuong INT OUT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Không tồn tại đề tài %s',15,1,@MaDT)
		RETURN
	END
	
	ELSE
	BEGIN
		SELECT @SoLuong = COUNT(DISTINCT STT) FROM THAMGIADT WHERE MADT = @MaDT AND KETQUA LIKE N'Đạt'
	END
END
GO

--6. Viết stored đếm số lượng công việc có kết quả: “Không đạt” của mỗi đề tài
GO
CREATE PROC SP_DemSoCongViecKhongDat 
	@MaDT VARCHAR(3),
	@SoLuong INT OUT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Không tồn tại đề tài %s',15,1,@MaDT)
		RETURN
	END
	
	ELSE
	BEGIN
		SELECT @SoLuong = COUNT(DISTINCT STT) FROM THAMGIADT WHERE MADT = @MaDT AND KETQUA LIKE N'Không Đạt'
	END
END
GO

--7. Viết stored đếm số lượng công việc chưa có kết quả: “NULL” của mỗi đề tài
GO
CREATE PROC SP_DemSoCongViecChuaHoanThanh 
	@MaDT VARCHAR(3),
	@SoLuong INT OUT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RAISERROR(N'Không tồn tại đề tài %s',15,1,@MaDT)
		RETURN
	END
	
	ELSE
	BEGIN
		SELECT @SoLuong = COUNT(DISTINCT STT) FROM THAMGIADT WHERE MADT = @MaDT AND KETQUA IS NULL
	END
END
GO
--8. Với mỗi đề tài đã kết thúc, xuất kết quả nghiệm thu đề tài:
--• Mã đề tài:
--• Tỷ lệ đạt:
--• Tỷ lệ không đạt:
--• Tỷ lệ chưa hoàn thành (NULL):
--• XẾP LOẠI ĐỀ TÀI: (GIỎI: 100% đạt; KHÁ: 80% đạt và không có công việc nào chưa hoàn
--thành; TRUNG BÌNH: 70% đạt, 30% không đạt, không có công việc chưa hoàn thành;
--FAILED: <=50% đạt và còn công việc chưa hoàn thành)
GO
CREATE PROC SP_NghiemThuDeTai
AS BEGIN
	DECLARE	@TongSoCV TABLE(
		MADT1 NVARCHAR(3),
		TongSoCongViec INT
	)
	INSERT INTO @TongSoCV(MADT1,TongSoCongViec) 
	SELECT MADT,COUNT(*) FROM CONGVIEC GROUP BY MADT

	DECLARE @KetQua TABLE (
        MADT NVARCHAR(3),
        TyLeDat FLOAT,
        TyLeKhongDat FLOAT,
        TyLeChuaHoanThanh FLOAT,
        Loai NVARCHAR(30)
    )

	INSERT INTO @KetQua (MADT, TyLeDat, TyLeKhongDat, TyLeChuaHoanThanh)
    SELECT 
        TGDT.MADT,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA LIKE N'Đạt' THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA LIKE N'Không Đạt' THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA IS NULL THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec
    FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT JOIN @TongSoCV TSCV ON TGDT.MADT = TSCV.MADT1
	WHERE DT.NGAYKT < GETDATE()
    GROUP BY TGDT.MADT,TongSoCongViec

	UPDATE @KetQua
    SET Loai = CASE 
                    WHEN TyLeDat = 1.0 THEN N'Giỏi'
                    WHEN TyLeDat >= 0.8 AND TyLeChuaHoanThanh = 0 THEN N'Khá'
                    WHEN TyLeDat >= 0.7 AND TyLeChuaHoanThanh = 0 THEN N'Trung Bình'
                    WHEN TyLeDat <= 0.5 AND TyLeChuaHoanThanh > 0 THEN N'FAILED'
                    ELSE N'Yếu'
               END

    SELECT * FROM @KetQua
END
GO
EXEC SP_NghiemThuDeTai
--9. Viết store phân công 1 giáo viên chủ nhiệm 1 đề tài cụ thể với điều kiện: Tại thời điểm phân
--công, giáo viên chỉ được chủ nhiệm tối đa 3 đề tài (kể cả đề tài chưa kết thúc).
GO
CREATE PROC SP_PhanCongChuNhiemDeTai
	@GVCNDT VARCHAR(3),
	@MaDT VARCHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE @GVCNDT = MAGV)
	BEGIN
		RAISERROR(N'Không tồn tại giáo viên %s',15,1,@GVCNDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE @MaDT = MADT)
	BEGIN
		RAISERROR(N'Không tồn tại đề tài %s',15,1,@MaDT)
		RETURN 
	END

	DECLARE @SoDTCN INT
	SELECT @SoDTCN = COUNT(MADT) FROM DETAI JOIN GIAOVIEN ON MAGV = GVCNDT WHERE MAGV = @GVCNDT

	IF(@SoDTCN = 3)
	BEGIN
		RAISERROR(N'Số đề tài chủ nhiệm không được vượt quá 3',15,1)
		RETURN
	END

	UPDATE DETAI
	SET GVCNDT = @GVCNDT WHERE MADT = @MaDT
END
--10.Viết stored đếm số lượng giảng viên nam, nữ của mỗi đề tài
GO
CREATE PROC SP_DemSoLuongGVNamNu 
AS BEGIN
	SELECT DT.MADT,
		   COUNT(DISTINCT CASE WHEN GV.PHAI LIKE N'Nam' THEN GV.MAGV ELSE NULL END) AS SLGVNAM,
		   COUNT(DISTINCT CASE WHEN GV.PHAI LIKE N'Nữ' THEN GV.MAGV ELSE NULL END) AS SLGVNU
	FROM GIAOVIEN GV JOIN THAMGIADT TGDT ON GV.MAGV=TGDT.MAGV RIGHT JOIN DETAI DT ON TGDT.MADT=DT.MADT
	GROUP BY DT.MADT
END
GO
EXEC SP_DemSoLuongGVNamNu
--11.Viết stored xuất danh sách các bộ môn có nhiều đề tài loại giỏi nhất
GO
CREATE PROC SP_DSBoMonNhieuDTLoaiGioiNhat
AS BEGIN
	DECLARE	@TongSoCV TABLE(
		MADT1 NVARCHAR(3),
		TongSoCongViec INT
	)
	INSERT INTO @TongSoCV(MADT1,TongSoCongViec) 
	SELECT MADT,COUNT(*) FROM CONGVIEC GROUP BY MADT

	DECLARE @PhanLoai TABLE (
        MADT NVARCHAR(3),
        TyLeDat FLOAT,
        TyLeKhongDat FLOAT,
        TyLeChuaHoanThanh FLOAT,
        Loai NVARCHAR(30)
    )

	INSERT INTO @PhanLoai (MADT, TyLeDat, TyLeKhongDat, TyLeChuaHoanThanh)
    SELECT 
        TGDT.MADT,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA LIKE N'Đạt' THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA LIKE N'Không Đạt' THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec,
        CAST(COUNT(DISTINCT CASE WHEN KETQUA IS NULL THEN STT ELSE NULL END) AS FLOAT) / TSCV.TongSoCongViec
    FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT JOIN @TongSoCV TSCV ON TGDT.MADT = TSCV.MADT1
	WHERE DT.NGAYKT < GETDATE()
    GROUP BY TGDT.MADT,TongSoCongViec

	UPDATE @PhanLoai
    SET Loai = CASE 
                    WHEN TyLeDat = 1.0 THEN N'Giỏi'
                    WHEN TyLeDat >= 0.8 AND TyLeChuaHoanThanh = 0 THEN N'Khá'
                    WHEN TyLeDat >= 0.7 AND TyLeChuaHoanThanh = 0 THEN N'Trung Bình'
                    WHEN TyLeDat <= 0.5 AND TyLeChuaHoanThanh > 0 THEN N'FAILED'
                    ELSE N'Yếu'
               END

	SELECT BM.MABM
	FROM BOMON BM
		 RIGHT JOIN GIAOVIEN GV ON GV.MABM=BM.MABM 
		 LEFT JOIN THAMGIADT TGDT ON TGDT.MAGV=GV.MAGV
		 LEFT JOIN DETAI DT ON TGDT.MADT=DT.MADT
		 LEFT JOIN @PhanLoai PL ON TGDT.MADT=PL.MADT
	WHERE PL.Loai LIKE N'Giỏi'
	GROUP BY BM.MABM
	HAVING COUNT(DISTINCT DT.MADT) >= ALL(SELECT COUNT(DISTINCT DT.MADT)
										  FROM BOMON BM1
											   RIGHT JOIN GIAOVIEN GV1 ON GV1.MABM=BM1.MABM 
											   LEFT JOIN THAMGIADT TGDT1 ON TGDT1.MAGV=GV1.MAGV
											   LEFT JOIN DETAI DT1 ON TGDT1.MADT=DT1.MADT
											   LEFT JOIN @PhanLoai PL1 ON TGDT1.MADT=PL1.MADT
										  WHERE PL1.Loai LIKE N'Giỏi'
										  GROUP BY BM1.MABM)
END
GO
EXEC SP_DSBoMonNhieuDTLoaiGioiNhat
--12.Viết stored phân công công việc cho 1 giáo viên, với điều kiện giáo viên chỉ được phụ trách
--tối đa 3 công việc (kể cả công việc chưa hoàn thành). Tức là nếu thời điểm phân công, giảng
--viên đã được phân công 2 công việc và chưa hoàn thành thì chỉ được nhận thêm 1 công việc.
--Nếu các công việc phân công trước đó đã hoàn thành (kết quả đạt) thì được phép phân công
--thêm 3 công việc khác.
GO
CREATE PROC SP_PhanCongCV
	@MaGV VARCHAR(3),
	@MaDT VARCHAR(3),
	@PhuCap FLOAT,
	@STT INT 
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM THAMGIADT WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tham gia đề tài nào',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM THAMGIADT TGDT JOIN CONGVIEC CV ON CV.MADT=TGDT.MADT WHERE TGDT.MAGV = @MaGV AND @STT=CV.SOTT AND @MaDT = CV.MADT)
	BEGIN
		RAISERROR(N'Công việc %s không tồn tại',15,1,@STT)
		RETURN
	END

	IF(3 <= (SELECT COUNT(TGDT.STT) FROM THAMGIADT TGDT WHERE TGDT.MAGV = @MaGV AND TGDT.KETQUA IS NULL))
	BEGIN
		RAISERROR(N'Giáo viên đang nhận số đề tài quá mức',15,1)
		RETURN
	END

	INSERT INTO THAMGIADT VALUES(@MaGV,@MaDT,@STT,@PhuCap,NULL)
END
--13.Viết stored thực hiện phân công 1 nhân sự cho 1 công việc của đề tài, với điều kiện: đề tài
--cấp trường chỉ có tối đa 2 giảng viên; đề tài cấp dhqg có tối đa 4 giảng viên, đề tài cấp nhà
--nước có tối đa 7gv tham gia.
GO
CREATE PROC SP_PhanCongNhanSu
	@MaGV VARCHAR(3),
	@MaDT VARCHAR(3),
	@PhuCap FLOAT,
	@STT INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM THAMGIADT WHERE MAGV = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không tham gia đề tài nào',15,1,@MaGV)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 FROM THAMGIADT TGDT JOIN CONGVIEC CV ON CV.MADT=TGDT.MADT WHERE TGDT.MAGV = @MaGV AND @STT=CV.SOTT AND @MaDT = CV.MADT)
	BEGIN
		RAISERROR(N'Công việc %s không tồn tại',15,1,@STT)
		RETURN
	END

	IF (2 <= (SELECT COUNT(TGDT.MAGV) FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT WHERE DT.CAPQL LIKE N'Trường' AND TGDT.MADT = @MaDT))
	BEGIN
		RAISERROR(N'Cấp trường tối đa 2 gv',15,1)
		RETURN
	END

	IF (4 <= (SELECT COUNT(TGDT.MAGV) FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT WHERE DT.CAPQL LIKE N'ĐHQG' AND TGDT.MADT = @MaDT))
	BEGIN
		RAISERROR(N'Cấp ĐHQG tối đa 4 gv',15,1)
		RETURN
	END

	IF (7 <= (SELECT COUNT(TGDT.MAGV) FROM THAMGIADT TGDT JOIN DETAI DT ON TGDT.MADT=DT.MADT WHERE DT.CAPQL LIKE N'Nhà Nước' AND TGDT.MADT = @MaDT))
	BEGIN
		RAISERROR(N'Cấp nhà nước tối đa 7 gv',15,1)
		RETURN
	END
END
GO	
--14.Viết stored cho biết năm vừa qua, mỗi chủ đề nghiên cứu có bao nhiêu đề tài thực hiện
CREATE PROC SP_SoDeTaiThucHienMoiChuDe
AS BEGIN
	SELECT CD.MACD,COUNT(DISTINCT TGDT.MADT) AS SoDeTai
	FROM CHUDE CD LEFT JOIN DETAI DT ON CD.MACD=DT.MACD LEFT JOIN THAMGIADT TGDT ON DT.MADT=TGDT.MADT
	GROUP BY CD.MACD
END
--15.Viết stored thực hiện báo cáo:
--• BÁO CÁO TÌNH HÌNH NGHIÊN CỨU TRONG NĂM QUA
--• Tên bộ môn:
--- Số lượng GV có tham gia đề tài
--- Số lượng GV không tham gia đề tài
--- Số lượng đề tài loại Giỏi
--- Số lượng đề tài loại khá
-----------------------------------------------------
--• Tên bộ môn:
--- Số lượng GV có tham gia đề tài
--- Số lượng GV không tham gia đề tài
--- Số lượng đề tài loại Giỏi
--- Số lượng đề tài loại khá
--➔ BỘ MÔN CÓ NHIỀU ĐỀ TÀI LOẠI GIỎI NHẤT
GO
CREATE FUNCTION FN_SoLuongGVThamGiaDT (@MaBM VARCHAR(10))
RETURNS INT
AS BEGIN
	DECLARE @SoLuong INT
	SELECT @SoLuong = COUNT(DISTINCT TGDT.MAGV)
					  FROM BOMON BM 
					  LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
					  LEFT JOIN THAMGIADT TGDT ON GV.MAGV = TGDT.MAGV
					  WHERE BM.MABM = @MaBM
					  GROUP BY BM.MABM
	RETURN @SoLuong
END

GO
CREATE FUNCTION FN_SoLuongGVKhongThamGiaDT (@MaBM VARCHAR(10))
RETURNS INT
AS BEGIN
	DECLARE @SoLuong INT
	SELECT @SoLuong = COUNT(GV.MAGV)
	FROM BOMON BM LEFT JOIN GIAOVIEN GV ON BM.MABM=GV.MABM
	WHERE NOT EXISTS(SELECT 1
					 FROM THAMGIADT TGDT
					 WHERE TGDT.MAGV=GV.MAGV) AND BM.MABM = @MaBM
	GROUP BY BM.MABM
	RETURN @SoLuong
END

GO
CREATE FUNCTION FN_SoLuongDeTaiLoaiGioi (@MaBM VARCHAR(10))
RETURNS INT
AS BEGIN
	DECLARE @SoLuong INT
	SELECT @SoLuong = COUNT(DISTINCT MA)
	FROM(SELECT TGDT.MADT AS MA
		 FROM THAMGIADT TGDT
		 RIGHT JOIN CONGVIEC CV ON TGDT.MADT=CV.MADT
		 WHERE TGDT.KETQUA LIKE N'Đạt'
		 GROUP BY TGDT.MADT
		 HAVING COUNT(DISTINCT TGDT.STT) = (SELECT COUNT(CV1.SOTT)
											FROM CONGVIEC CV1
											WHERE CV1.MADT=TGDT.MADT
											GROUP BY CV1.MADT)) AS BangLoaiGioi
	LEFT JOIN THAMGIADT TGDT1 ON TGDT1.MADT=BangLoaiGioi.MA 
	LEFT JOIN GIAOVIEN GV ON TGDT1.MAGV=GV.MAGV
	RIGHT JOIN BOMON BM ON BM.MABM=GV.MABM
	WHERE BM.MABM=@MaBM
	GROUP BY BM.MABM
	RETURN @SoLuong
END
GO

GO
CREATE FUNCTION FN_SoLuongDeTaiLoaiKha (@MaBM VARCHAR(10))
RETURNS INT
AS BEGIN
	DECLARE @SoLuong INT
	SELECT @SoLuong = COUNT(DISTINCT MA)
	FROM(SELECT TGDT.MADT AS MA
		 FROM THAMGIADT TGDT
		 RIGHT JOIN CONGVIEC CV ON TGDT.MADT=CV.MADT
		 WHERE TGDT.KETQUA LIKE N'Đạt' AND TGDT.KETQUA IS NOT NULL
		 GROUP BY TGDT.MADT
		 HAVING 
		 (CAST(COUNT(DISTINCT TGDT.STT) AS FLOAT) / (SELECT COUNT(CV1.SOTT) FROM CONGVIEC CV1 WHERE CV1.MADT=TGDT.MADT GROUP BY CV1.MADT) >= 0.8)
		 AND
		 (CAST(COUNT(DISTINCT TGDT.STT) AS FLOAT) / (SELECT COUNT(CV1.SOTT) FROM CONGVIEC CV1 WHERE CV1.MADT=TGDT.MADT GROUP BY CV1.MADT) < 1.0)) AS BangLoaiGioi
	LEFT JOIN THAMGIADT TGDT1 ON TGDT1.MADT=BangLoaiGioi.MA 
	LEFT JOIN GIAOVIEN GV ON TGDT1.MAGV=GV.MAGV
	RIGHT JOIN BOMON BM ON BM.MABM=GV.MABM
	WHERE BM.MABM = @MaBM
	GROUP BY BM.MABM
	RETURN @SoLuong
END
GO

GO
CREATE FUNCTION FN_XuatBoMonCoNhieuDeTaiLoaiGioiNhat()
RETURNS VARCHAR(10)
AS BEGIN
	DECLARE @MaBM VARCHAR(10)
	SELECT @MaBM = BM.MABM
	FROM(SELECT TGDT.MADT AS MA
		 FROM THAMGIADT TGDT
		 RIGHT JOIN CONGVIEC CV ON TGDT.MADT=CV.MADT
		 WHERE TGDT.KETQUA LIKE N'Đạt'
		 GROUP BY TGDT.MADT
		 HAVING COUNT(DISTINCT TGDT.STT) = (SELECT COUNT(CV1.SOTT)
											FROM CONGVIEC CV1
											WHERE CV1.MADT=TGDT.MADT
											GROUP BY CV1.MADT)) AS BangLoaiGioi
	LEFT JOIN THAMGIADT TGDT1 ON TGDT1.MADT=BangLoaiGioi.MA 
	LEFT JOIN GIAOVIEN GV ON TGDT1.MAGV=GV.MAGV
	RIGHT JOIN BOMON BM ON BM.MABM=GV.MABM
	GROUP BY BM.MABM
	
	HAVING COUNT(DISTINCT MA) >=ALL(SELECT COUNT(DISTINCT MA)
									FROM(SELECT TGDT.MADT AS MA
										 FROM THAMGIADT TGDT
										 RIGHT JOIN CONGVIEC CV ON TGDT.MADT=CV.MADT
										 WHERE TGDT.KETQUA LIKE N'Đạt'
										 GROUP BY TGDT.MADT
										 HAVING COUNT(DISTINCT TGDT.STT) = (SELECT COUNT(CV1.SOTT)
																			FROM CONGVIEC CV1
																			WHERE CV1.MADT=TGDT.MADT
																			GROUP BY CV1.MADT)) AS BangLoaiGioi
									LEFT JOIN THAMGIADT TGDT1 ON TGDT1.MADT=BangLoaiGioi.MA 
									LEFT JOIN GIAOVIEN GV ON TGDT1.MAGV=GV.MAGV
									RIGHT JOIN BOMON BM ON BM.MABM=GV.MABM
									GROUP BY BM.MABM)
		RETURN @MABM
END
GO

GO
CREATE PROC SP_BaoCaoTinhHinhNghienCuu
AS BEGIN
	PRINT N'• BÁO CÁO TÌNH HÌNH NGHIÊN CỨU TRONG NĂM QUA' + CHAR(13) +CHAR(10)
	DECLARE @MaBM VARCHAR(10),@TenBM NVARCHAR(50),@SLGVTGDT INT,@SLGVKTGDT INT,@SLDTLG INT,@SLDTLK INT,@i INT,@ThongTin NVARCHAR(1000)

	SELECT @i = COUNT(*) FROM BOMON
	WHILE (@i > 0)
	BEGIN
		SELECT @MaBM = MABM
		FROM BOMON
		ORDER BY MABM DESC OFFSET @i -1 ROWS FETCH NEXT 1 ROWS ONLY

		SELECT @TenBM = TENBM 
		FROM BOMON
		WHERE MABM = @MaBM

		SET @SLGVTGDT = dbo.FN_SoLuongGVThamGiaDT(@MaBM)
		SET @SLGVKTGDT = dbo.FN_SoLuongGVKhongThamGiaDT(@MaBM)
		SET @SLDTLG = dbo.FN_SoLuongDeTaiLoaiGioi(@MaBM)
		SET @SLDTLK = dbo.FN_SoLuongDeTaiLoaiKha(@MaBM)

		SET @ThongTin = N'• Tên bộ môn: ' + @TenBM + CHAR(13) + CHAR(10) +
						N'- Số lượng GV có tham gia đề tài: ' + CAST(@SLGVTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
						N'- Số lượng GV không tham gia đề tài: ' + CAST(@SLGVKTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
						N'- Số lượng đề tài loại Giỏi: ' + CAST(@SLDTLG AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
						N'- Số lượng đề tài loại khá: '  + CAST(@SLDTLK AS varchar(10)) + CHAR(13) + CHAR(10)

		IF(@i >= 1)
		BEGIN
			SET @ThongTin += '---------------------------------------------------' + CHAR(13) + CHAR(10)
		END

		PRINT @ThongTin
		SET @i -= 1
	END
	DECLARE @Max VARCHAR(10)
	SET @Max = dbo.FN_XuatBoMonCoNhieuDeTaiLoaiGioiNhat()
	PRINT N'➔ BỘ MÔN CÓ NHIỀU ĐỀ TÀI LOẠI GIỎI NHẤT: ' + CHAR(13) + CHAR(10) + @Max
END
GO
EXEC SP_BaoCaoTinhHinhNghienCuu
--16.Thêm cột tổng hệ số phụ cấp vào bảng giảng viên. Thực hiện cập nhật hệ số phụ cấp cho tất
--cả giảng viên như sau:
--• Tổng hệ số Phụ cấp = tổng hệ số phụ cấp của giảng viên trong mỗi công việc của đề tài
--+ hệ số chức vụ
--• Hệ số chức vụ chỉ lấy hệ số cao nhất trong các hệ số kiêm nhiệm:
--1. Trưởng bộ môn: 1.1
--2. Chủ nhiệm đề tài: 1.2
--3. Trưởng Khoa: 1.3



--FUNCTION
--17.Viết function cho các câu 5,6,7,10
GO
CREATE FUNCTION FN_SoLuongKetQuaDat(
    @MaDT VARCHAR(3)
)
RETURNS TABLE
AS
RETURN 
(
    SELECT 
        DT.MADT,
        COUNT(CASE WHEN KETQUA LIKE N'Đạt' THEN STT ELSE NULL END) AS SoDeTaiDat,
        COUNT(CASE WHEN KETQUA LIKE N'Không Đạt' THEN STT ELSE NULL END) AS SoDeTaiKhongDat,
        COUNT(CASE WHEN KETQUA IS NULL THEN STT ELSE NULL END) AS SoDeTaiNULL,
        COUNT(DISTINCT CASE WHEN PHAI LIKE N'Nam' THEN GV.MAGV ELSE NULL END) AS SgvNam,
        COUNT(DISTINCT CASE WHEN PHAI LIKE N'Nữ' THEN GV.MAGV ELSE NULL END) AS SgvNu
    FROM 
        THAMGIADT TGDT 
        RIGHT JOIN DETAI DT ON TGDT.MADT = DT.MADT 
        LEFT JOIN GIAOVIEN GV ON GV.MAGV = TGDT.MAGV
    WHERE 
        DT.MADT = @MaDT
    GROUP BY 
        DT.MADT
)
GO
SELECT * FROM dbo.FN_SoLuongKetQuaDat('000')
--18.Viết function cho biết 1 magv có bao nhiêu số điện thoại
GO
CREATE FUNCTION FN_SoLuongSoDT(
	@MaGV VARCHAR(3)
)
RETURNS INT
AS 
BEGIN
	DECLARE @SoLuong INT
	SELECT @SoLuong = COUNT(GVDT.MAGV) 
	FROM GIAOVIEN GV 
	LEFT JOIN GV_DT GVDT ON GV.MAGV=GVDT.MAGV
	WHERE GV.MAGV = @MaGV
	RETURN @SoLuong
END
GO
PRINT dbo.FN_SoLuongSoDT('000')
--19.Viết function cho biết số lượng giảng viên của 1 mã đề tài
GO
CREATE FUNCTION FN_So
--20.Viết function đếm số đề tài tham gia của 1 magv
--21.Viết function đếm số công việc của 1 madt
--22.Viết function đếm số đề tài của 1 makhoa
--23.Viết function đếm số đề tài chủ nhiệm của 1 magv
