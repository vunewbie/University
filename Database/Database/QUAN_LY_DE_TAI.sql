CREATE DATABASE QUAN_LY_DE_TAI
GO

USE QUAN_LY_DE_TAI
GO

--4.1.Tạo lập cơ sở dữ liệu
--C1.Viết script tạo table,khóa chính,khóa ngoại và các ràng buộc cơ bản cho CSDL ở trên.
--Tạo table,khóa chính, ràng buộc
CREATE TABLE GIAOVIEN(
	MAGV CHAR(3) PRIMARY KEY NOT NULL,
	HOTEN NVARCHAR(50),
	LUONG FLOAT DEFAULT 0,
	PHAI NVARCHAR(4) CHECK (PHAI IN (N'Nam',N'Nữ')),
	NGSINH DATETIME,
	DIACHI NVARCHAR(100),
	GVQLCM CHAR(3),
	MABM VARCHAR(5)
)

CREATE TABLE GV_DT(
	MAGV CHAR(3) NOT NULL,
	DIENTHOAI VARCHAR(10) NOT NULL,
	PRIMARY KEY (MAGV,DIENTHOAI)
)

CREATE TABLE BOMON(
	MABM VARCHAR(5) PRIMARY KEY NOT NULL,
	TENBM NVARCHAR(50),
	PHONG CHAR(3),
	DIENTHOAI VARCHAR(10),
	TRUONGBM CHAR(3),
	MAKHOA VARCHAR(5),
	NGAYNHANCHUC DATETIME
)

CREATE TABLE KHOA(
	MAKHOA VARCHAR(5) PRIMARY KEY NOT NULL,
	TENKHOA NVARCHAR(50),
	NAMTL DATETIME,
	PHONG CHAR(3),
	DIENTHOAI VARCHAR(10),
	TRUONGKHOA CHAR(3),
	NGAYNHANCHUC DATETIME
)

CREATE TABLE DETAI(
	MADT CHAR(3) PRIMARY KEY NOT NULL,
	TENDT NVARCHAR(50),
	CAPQL NVARCHAR(15),
	KINHPHI FLOAT DEFAULT 0,
	NGAYBD DATETIME,
	NGAYKT DATETIME,
	MACD VARCHAR(5),
	GVCNDT CHAR(3)
)

CREATE TABLE CHUDE(
	MACD VARCHAR(5) PRIMARY KEY NOT NULL,
	TENCD NVARCHAR(50)
)

CREATE TABLE CONGVIEC(
	MADT CHAR(3) NOT NULL,
	STT CHAR(3) NOT NULL,
	TENCV NVARCHAR(50),
	NGAYBD DATETIME,
	NGAYKT DATETIME,
	PRIMARY KEY (MADT,STT)
)

CREATE TABLE THAMGIADETAI(
	MAGV CHAR(3) NOT NULL,
	MADT CHAR(3) NOT NULL,
	STT CHAR(3) NOT NULL,
	PHUCAP FLOAT DEFAULT 0,
	KETQUA NVARCHAR(10),
	PRIMARY KEY (MAGV,MADT,STT)
)

CREATE TABLE NGUOITHAN(
	MAGV CHAR(3) NOT NULL,
	TEN NVARCHAR(50) NOT NULL,
	NGSINH DATETIME,
	PHAI NVARCHAR(4) CHECK (PHAI IN (N'Nam',N'Nữ'))
	PRIMARY KEY (MAGV,TEN)
)

--Khóa ngoại
--THAMGIADETAI REF CONGVIEC
ALTER TABLE THAMGIADETAI
ADD CONSTRAINT FK_TGDT_CV FOREIGN KEY (MADT,STT) REFERENCES CONGVIEC (MADT,STT)
--THAMGIADETAI REF GIAOVIEN
ALTER TABLE THAMGIADETAI
ADD CONSTRAINT FK_TGDT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN (MAGV)
--CONGVIEC REF DETAI
ALTER TABLE CONGVIEC
ADD CONSTRAINT FK_CV_DT FOREIGN KEY (MADT) REFERENCES DETAI (MADT)
--DETAI REF CHUDE
ALTER TABLE DETAI
ADD CONSTRAINT FK_DT_CD FOREIGN KEY (MACD) REFERENCES CHUDE (MACD)
--DETAI REF GIAOVIEN
ALTER TABLE DETAI
ADD CONSTRAINT FK_DT_GV FOREIGN KEY (GVCNDT) REFERENCES GIAOVIEN (MAGV)
--KHOA REF GIAOVIEN
ALTER TABLE KHOA
ADD CONSTRAINT FK_KH_GV FOREIGN KEY (TRUONGKHOA) REFERENCES GIAOVIEN (MAGV)
--BOMON REF KHOA
ALTER TABLE BOMON
ADD CONSTRAINT FK_BM_KH FOREIGN KEY (MAKHOA) REFERENCES KHOA (MAKHOA)
--BOMON REF GIAOVIEN
ALTER TABLE BOMON
ADD CONSTRAINT FK_BM_GV FOREIGN KEY (TRUONGBM) REFERENCES GIAOVIEN (MAGV)
--GIAOVIEN REF GIAOVIEN
ALTER TABLE GIAOVIEN
ADD CONSTRAINT FK_GV_GV FOREIGN KEY (GVQLCM) REFERENCES GIAOVIEN (MAGV)
--GIAOVIEN REF BOMON
ALTER TABLE GIAOVIEN
ADD CONSTRAINT FK_GV_BM FOREIGN KEY (MABM) REFERENCES BOMON (MABM)
--GV_DT REF GIAOVIEN
ALTER TABLE GV_DT
ADD CONSTRAINT FK_GVDT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN (MAGV)
--NGUOITHAN REF GIAOVIEN
ALTER TABLE NGUOITHAN
ADD CONSTRAINT FK_NT_GV FOREIGN KEY (MAGV) REFERENCES GIAOVIEN (MAGV)

--C2.Viết script để nhập dữ liệu minh họa như mô tả trên vào CSDL vừa tạo.
INSERT INTO GIAOVIEN VALUES ('001',N'Nguyễn Hoài An',2000.0,N'Nam','1973-02-15',N'25/3 Lạc Long Quân, Q.10, TP HCM',NULL,NULL),
							('002',N'Trần Trà Hương',2500.0,N'Nữ','1960-06-20',N'125 Trần Hưng Đạo, Q1, TP HCM',NULL,NULL),
							('003',N'Nguyễn Ngọc Ánh',2200.0,N'Nữ','1975-05-11',N'12/21 Võ Văn Ngân Thủ Đức, TP HCM','002',NULL),
							('004',N'Trương Nam Sơn',2300.0,N'Nam','1959-06-20',N'215 Lý Thường Kiệt, TP Biên Hòa',NULL,NULL),
							('005',N'Lý Hoàng Hà',2500.0,N'Nam','1954-10-23',N'22/5 Nguyễn Xí, Q.Bình Thạnh, TP HCM',NULL,NULL),
							('006',N'Trần Bạch Tuyết',1500.0,N'Nữ','1980-05-20',N'127 Hùng Vương, TP Mỹ Tho','004',NULL),
							('007',N'Nguyễn An Trung',2100.0,N'Nam','1976-06-05',N'234 3/2, TP Biên Hòa',NULL,NULL),
							('008',N'Trần Trung Hiếu',1800.0,N'Nam','1977-08-06',N'22/11 Lý Thường Kiệt, TP Mỹ Tho','007',NULL),
							('009',N'Trần Hoàng Nam',2000.0,N'Nam','1975-11-22',N'234 Trần Não, An Phú, TP HCM','001',NULL),
							('010',N'Phạm Nam Thanh',1500.0,N'Nam','1980-12-12',N'221 Hùng Vương, Q.5, TP HCM','007',NULL)
INSERT INTO GV_DT VALUES ('001','0838912112'),
						 ('001','0903123123'),
						 ('002','0903123123'),
						 ('003','0838121212'),
						 ('003','0903656565'),
						 ('003','0937125125'),
						 ('006','0937888888'),
						 ('008','0653717171'),
						 ('008','0913232323')
INSERT INTO NGUOITHAN VALUES ('001',N'Hùng','1990-01-14',N'Nam'),
							 ('001',N'Thủy','1994-12-08',N'Nữ'),
							 ('003',N'Hà','1998-09-03',N'Nữ'),
							 ('003',N'Thu','1998-09-03',N'Nữ'),
							 ('007',N'Mai','2003-03-26',N'Nữ'),
							 ('007',N'Vy','2000-02-14',N'Nữ'),
							 ('008',N'Nam','1991-05-06',N'Nam'),
							 ('009',N'An','1996-08-19',N'Nam'),
							 ('010',N'Nguyệt','2006-01-14',N'Nữ')
INSERT INTO KHOA VALUES ('CNTT',N'Công nghệ thông tin',1995,'B11','0838123456','002','2005-02-20'),
						('HH',N'Hóa Học',1980,'B41','0838456456','007','2001-10-15'),
						('SH',N'Sinh Học',1980,'B31','0838454545','004','2000-10-11'),
						('VL',N'Vật Lý',1976,'B21','0838223223','005','2003-09-18')
INSERT INTO BOMON VALUES ('CNTT',N'Công nghệ tri thức','B15','0838126126',NULL,'CNTT',NULL),
						 ('HHC',N'Hóa hữu cơ','B44','0838222222',NULL,'HH',NULL),
						 ('HL',N'Hóa lý','B42','0838878787',NULL,'HH',NULL),
						 ('HPT',N'Hóa phân tích','B43','0838777777','007','HH','2007-10-15'),
						 ('HTTT',N'Hệ thống thông tin','B13','0838125125','002','CNTT','2004-09-20'),
						 ('MMT',N'Mạng máy tính','B16','0838676767','001','CNTT','2005-05-15'),
						 ('SH',N'Sinh hóa','B33','0838898989',NULL,'SH',NULL),
						 ('VLDT',N'Vật lý điện tử','B23','0838234234',NULL,'VL',NULL),
						 ('VLUD',N'Vật lý ứng dụng','B24','0838454545','005','VL','2006-02-18'),
						 ('VS',N'Vi sinh','B32','0838909090','004','SH','2007-01-01')
UPDATE GIAOVIEN 
SET MABM='MMT'
WHERE MAGV='001' OR MAGV='009'
UPDATE GIAOVIEN 
SET MABM='HTTT'
WHERE MAGV='002' OR MAGV='003'
UPDATE GIAOVIEN 
SET MABM='VS'
WHERE MAGV='004' OR MAGV='006'
UPDATE GIAOVIEN 
SET MABM='VLDT'
WHERE MAGV='005'
UPDATE GIAOVIEN 
SET MABM='HPT'
WHERE MAGV='008' OR MAGV='007' OR MAGV='010'
INSERT INTO CHUDE VALUES ('NCPT',N'Nghiên cứu phát triển'),
						 ('QLGD',N'Quản lý giáo dục'),
						 ('UDCN',N'Ứng dụng công nghệ')
INSERT INTO DETAI VALUES ('001',N'HTTT quản lý các trường ĐH',N'ĐHQG',20.0,'2007-10-20','2008-10-20','QLGD','002'),
						 ('002',N'HTTT quản lý giáo vụ cho một Khoa',N'TRƯỜNG',20.0,'2000-10-12','2001-10-12','QLGD','002'),
						 ('003',N'Nghiên cứu chế tạo sợi Nanô Platin',N'ĐHQG',300.0,'2008-05-15','2010-05-15','NCPT','005'),
						 ('004',N'Tạo vật liệu sinh học bằng màng ối người',N'NHÀ NƯỚC',100.0,'2009-12-31','2008-10-20','NCPT','004'),
						 ('005',N'Ứng dụng hóa học xanh',N'TRƯỜNG',200.0,'2003-10-10','2004-12-10','UDCN','007'),
						 ('006',N'Nghiên cứu tế bào gốc',N'NHÀ NƯỚC',4000.0,'2006-10-20','2009-10-20','NCPT','004'),
						 ('007',N'HTTT quản lý thư viện ở các trường ĐH',N'TRƯỜNG',20.0,'2009-05-10','2010-05-10','QLGD','001')
INSERT INTO CONGVIEC VALUES ('001',1,N'Khởi tạo và lập kế hoạch','2007-10-20','2008-12-20'),
							('001',2,N'Xác định yêu cầu','2008-12-21','2008-03-21'),
							('001',3,N'Phân tích hệ thống','2008-03-22','2008-05-22'),
							('001',4,N'Thiết kế hệ thống','2008-05-23','2008-06-23'),
							('001',5,N'cài đặt thử nghiệm','2008-06-24','2008-10-20'),
							('002',1,N'Khởi tạo và lập kế hoạch','2009-05-10','2009-07-10'),
							('002',2,N'Xác định yêu cầu','2009-07-11','2009-10-11'),
							('002',3,N'Phân tích hệ thống','2009-10-12','2009-12-20'),
							('002',4,N'Thiết kế hệ thống','2009-12-21','2010-03-22'),
							('002',5,N'cài đặt thử nghiệm','2010-03-23','2010-05-10'),
							('006',1,N'Lấy mẫu','2006-10-20','2007-02-20'),
							('006',2,N'Nuôi cấy','2007-02-21','2008-08-21')
INSERT INTO THAMGIADETAI VALUES ('001','002',1,0.0,NULL),
							 ('001','002',2,2.0,NULL),
							 ('002','001',4,2.0,N'Đạt'),
							 ('003','001',1,1.0,N'Đạt'),
							 ('003','001',2,0.0,N'Đạt'),
							 ('003','001',4,1.0,N'Đạt'),
							 ('003','002',2,0.0,NULL),
							 ('004','006',1,0.0,N'Đạt'),
							 ('004','006',2,1.0,N'Đạt'),
							 ('006','006',2,1.5,N'Đạt'),
							 ('009','002',3,0.5,NULL),
							 ('009','002',4,1.5,NULL)

--4.2.Viết các câu truy vấn đơn giản
--Q1. Cho biết họ tên và mức lương của các giáo viên nữ.
SELECT MAGV,HOTEN
FROM GIAOVIEN
WHERE PHAI LIKE N'Nữ'
--Q2. Cho biết họ tên của các giáo viên và lương của họ sau khi tăng 10%.
SELECT HOTEN, LUONG*1.1 AS LUONGTANG
FROM GIAOVIEN
--Q3. Cho biết mã của các giáo viên có họ tên bắt đầu là “Nguyễn” và lương trên $2000 hoặc,
--giáo viên là trưởng bộ môn nhận chức sau năm 1995.
SELECT MAGV
FROM GIAOVIEN
WHERE (HOTEN LIKE N'%Nguyễn%' AND LUONG > 2000)
UNION
SELECT TRUONGBM
FROM BOMON
WHERE YEAR(NGAYNHANCHUC) > 1995
--Q4. Cho biết tên những giáo viên khoa Công nghệ thông tin.
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN KHOA KH ON BM.MAKHOA = KH.MAKHOA
WHERE KH.TENKHOA LIKE N'Công nghệ thông tin'
--Q5. Cho biết thông tin của bộ môn cùng thông tin giảng viên làm trưởng bộ môn đó.
SELECT *
FROM BOMON BM LEFT JOIN GIAOVIEN GV ON BM.TRUONGBM= GV.MAGV
--Q6. Với mỗi giáo viên, hãy cho biết thông tin của bộ môn mà họ đang làm việc.
SELECT GV.MAGV,BM.*
FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM = BM.MABM
--Q7. Cho biết tên đề tài và giáo viên chủ nhiệm đề tài.
SELECT TENDT,GV.*
FROM DETAI DT LEFT JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV 
--Q8. Với mỗi khoa cho biết thông tin trưởng khoa.
SELECT KH.MAKHOA,GV.*
FROM KHOA KH LEFT JOIN GIAOVIEN GV ON KH.TRUONGKHOA = GV.MAGV
--Q9. Cho biết các giáo viên của bộ môn “Vi sinh” có tham gia đề tài 006.
SELECT DISTINCT GV.*
FROM GIAOVIEN GV 
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
WHERE BM.TENBM LIKE N'%Vi sinh%' AND TGDT.MADT = '006'
--Q10. Với những đề tài thuộc cấp quản lý “Thành phố”, cho biết mã đề tài, đề tài thuộc về chủ
--đề nào, họ tên người chủ nghiệm đề tài cùng với ngày sinh và địa chỉ của người ấy.
SELECT DT.MADT,DT.MACD,GV.HOTEN,GV.NGSINH,GV.DIACHI
FROM DETAI DT 
JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
WHERE DT.CAPQL LIKE N'%Thành phố%' 
--Q11. Tìm họ tên của từng giáo viên và người phụ trách chuyên môn trực tiếp của giáo viên
--đó.
SELECT GV.HOTEN,GV1.HOTEN
FROM GIAOVIEN GV 
JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
--Q12. Tìm họ tên của những giáo viên được “Nguyễn Thanh Tùng” phụ trách trực tiếp.
SELECT GV.HOTEN
FROM GIAOVIEN GV 
JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
WHERE GV1.HOTEN LIKE N'%Nguyễn Thanh Tùng%'
--Q13. Cho biết tên giáo viên là trưởng bộ môn “Hệ thống thông tin”.
SELECT GV.HOTEN
FROM GIAOVIEN GV 
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
WHERE BM.TENBM LIKE N'Hệ thống thông tin' 
--Q14. Cho biết tên người chủ nhiệm đề tài của những đề tài thuộc chủ đề Quản lý giáo dục.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV 
JOIN DETAI DT ON GV.MAGV = DT.GVCNDT
JOIN CHUDE CD ON DT.MACD = CD.MACD
WHERE CD.TENCD LIKE N'%Quản lý giáo dục%'
--Q15. Cho biết tên các công việc của đề tài HTTT quản lý các trường ĐH có thời gian bắt đầu
--trong tháng 3/2008.
SELECT CV.TENCV
FROM DETAI DT JOIN CONGVIEC CV ON DT.MADT = CV.MADT
WHERE DT.TENDT LIKE N'HTTT quản lý các trường ĐH' AND CV.NGAYBD BETWEEN '2008-03-01' AND '2008-03-31'
--Q16. Cho biết tên giáo viên và tên người quản lý chuyên môn của giáo viên đó.
SELECT GV.HOTEN,GV1.HOTEN
FROM GIAOVIEN GV 
JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
--Q17. Cho các công việc bắt đầu trong khoảng từ 01/01/2007 đến 01/08/2007.
SELECT*
FROM CONGVIEC CV
WHERE CV.NGAYBD BETWEEN '01-01-2007' AND '08-01-2007'--Định dạng mm-dd-yyyy
--Q18. Cho biết họ tên các giáo viên cùng bộ môn với giáo viên “Trần Trà Hương”.
SELECT GV1.HOTEN
FROM GIAOVIEN GV 
JOIN GIAOVIEN GV1 ON GV.MABM = GV1.MABM
WHERE GV.HOTEN LIKE N'Trần Trà Hương' AND GV1.HOTEN NOT LIKE N'Trần Trà Hương'
--Q19. Tìm những giáo viên vừa là trưởng bộ môn vừa chủ nhiệm đề tài.
SELECT DISTINCT GV.*
FROM GIAOVIEN GV 
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
JOIN DETAI DT ON DT.GVCNDT = BM.TRUONGBM
--Q20. Cho biết tên những giáo viên vừa là trưởng khoa và vừa là trưởng bộ môn.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
JOIN KHOA KH ON BM.TRUONGBM = KH.TRUONGKHOA
--Q21. Cho biết tên những trưởng bộ môn mà vừa chủ nhiệm đề tài.
SELECT DISTINCT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
JOIN DETAI DT ON BM.TRUONGBM = DT.GVCNDT
--Q22. Cho biết mã số các trưởng khoa có chủ nhiệm đề tài.
SELECT DISTINCT GV.MAGV
FROM GIAOVIEN GV
JOIN KHOA KH ON GV.MAGV = KH.TRUONGKHOA
JOIN DETAI DT ON KH.TRUONGKHOA = DT.GVCNDT
--Q23. Cho biết mã số các giáo viên thuộc bộ môn “HTTT” hoặc có tham gia đề tài mã “001”.
SELECT DISTINCT GV.MAGV
FROM GIAOVIEN GV
LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
WHERE GV.MABM = 'HTTT' OR TGDT.MADT = '001'
--Q24. Cho biết giáo viên làm việc cùng bộ môn với giáo viên 002.
SELECT GV1.HOTEN
FROM GIAOVIEN GV 
JOIN GIAOVIEN GV1 ON GV.MABM = GV1.MABM
WHERE GV.MAGV = '002' AND GV1.MAGV <> '002'
--Q25. Tìm những giáo viên là trưởng bộ môn.
SELECT GV.*
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
--Q26. Cho biết họ tên và mức lương của các giáo viên.
SELECT HOTEN,LUONG
FROM GIAOVIEN

--4.3.Viết các câu truy vấn sử dụng hàm kết hợp và gom nhóm
--Q27. Cho biết số lượng giáo viên và tổng lương của họ
SELECT COUNT(*) AS SOGV,SUM(LUONG) AS TONGLUONG
FROM GIAOVIEN GV
--Q28. Cho biết số lượng giáo viên và lương trung bình của từng bộ môn
SELECT MABM,COUNT(*) AS SOGV,AVG(LUONG) AS LUONGTB
FROM GIAOVIEN 
GROUP BY MABM
--Q29. Cho biết tên chủ đề và số lượng đề tài thuộc về chủ đề đó
SELECT CD.*,COUNT(DT.MADT) AS SODT
FROM DETAI DT
JOIN CHUDE CD ON DT.MACD = CD.MACD
GROUP BY CD.MACD,CD.TENCD
--Q30. Cho biết tên giáo viên và số lượng đề tài mà giáo viên đó tham gia
SELECT GV.HOTEN,COUNT(DISTINCT TGDT.MADT) AS SODT
FROM GIAOVIEN GV
LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN
--Q31. Cho biết tên giáo viên và số lượng đề tài mà giáo viên đó làm chủ nhiệm
SELECT GV.HOTEN,COUNT(DT.MADT) AS SODT
FROM GIAOVIEN GV
LEFT JOIN DETAI DT ON GV.MAGV = DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
--Q32. Với mỗi giáo viên hãy cho biết tên giáo viên và số lượng người thân của giáo viên đó
SELECT GV.MAGV,COUNT(*) AS SOLUONGNT
FROM GIAOVIEN GV 
LEFT JOIN NGUOITHAN NT ON GV.MAGV=NT.MAGV
GROUP BY GV.MAGV
--Q33. Cho biết tên của những giáo viên tham gia từ 3 đề tài trở lên
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) >= 3
--Q34. Cho biết số lượng giáo viên đã tham gia đề tài 'Ứng dụng hóa học xanh'
SELECT COUNT(DISTINCT TGDT.MAGV) AS SLGV
FROM DETAI DT
LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh'
GROUP BY DT.MADT
--Q35. Cho biết mức lương cao nhất của các giảng viên
SELECT MAX(LUONG) AS LUONGMAX
FROM GIAOVIEN
--Q36. Cho biết những giảng viên có lương cao nhất đó
SELECT* 
FROM GIAOVIEN
WHERE LUONG = (SELECT MAX(GV.LUONG) 
			   FROM GIAOVIEN GV)
--Q37. Cho biết lương cao nhất trong bộ môn 'HTTT'
SELECT LUONG
FROM GIAOVIEN
WHERE LUONG = (SELECT MAX(GV.LUONG) 
			   FROM GIAOVIEN GV 
			   WHERE GV.MABM = 'HTTT') AND MABM = 'HTTT'
--Q38. Cho biết tên giáo viên lớn tuổi nhất của bộ môn 'HTTT'
SELECT HOTEN
FROM GIAOVIEN
WHERE DATEDIFF(DAY,NGSINH,GETDATE()) = (SELECT MAX(DATEDIFF(DAY,GV.NGSINH,GETDATE())) 
									    FROM GIAOVIEN GV 
									    WHERE GV.MABM = 'HTTT') AND MABM = 'HTTT'
--Q39. Cho biết tên giáo viên nhỏ tuổi nhất của khoa 'Công Nghệ Thông Tin'
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN KHOA KH ON BM.MAKHOA = KH.MAKHOA
WHERE DATEDIFF(DAY,NGSINH,GETDATE()) = ( SELECT MIN(DATEDIFF(DAY,GV1.NGSINH,GETDATE())) 
										 FROM GIAOVIEN GV1
										 JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
	 									 JOIN KHOA KH1 ON BM1.MAKHOA = KH1.MAKHOA 
										 WHERE KH1.TENKHOA LIKE N'Công Nghệ Thông Tin') AND KH.TENKHOA LIKE N'Công Nghệ Thông Tin'
--Q40. Cho biết tên giáo viên và tên khoa của giáo viên có lương cao nhất
SELECT GV.HOTEN,KH.TENKHOA
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN KHOA KH ON KH.MAKHOA =BM.MAKHOA
WHERE GV.LUONG = (SELECT MAX(GV1.LUONG)
				  FROM GIAOVIEN GV1)
--Q41. Cho biết những giáo viên có lương lớn nhất trong bộ môn của họ
SELECT GV.MABM,GV.MAGV
FROM GIAOVIEN GV
WHERE GV.LUONG = (SELECT MAX(GV1.LUONG)
				  FROM GIAOVIEN GV1
				  WHERE GV.MABM = GV1.MABM)
GROUP BY GV.MABM,GV.MAGV
--Q42. Cho biết tên những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia
SELECT DT.TENDT
FROM DETAI DT
EXCEPT
SELECT DT1.TENDT
FROM DETAI DT1
JOIN THAMGIADETAI TGDT ON DT1.MADT = TGDT.MADT
JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
WHERE GV.HOTEN LIKE N'%Nguyễn Hoài An%'
--Q43. Cho biết những đề tài mà giáo viên Nguyễn Hoài An chưa tham gia. Xuất ra tên đề tài, tên người chủ nhiệm đề tài.
SELECT DT.TENDT,GV.HOTEN
FROM DETAI DT
LEFT JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
WHERE NOT EXISTS(SELECT 1 
				 FROM THAMGIADETAI TGDT
				 JOIN GIAOVIEN GV1 ON TGDT.MAGV = GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'%Nguyễn Hoài An%' AND DT.MADT = TGDT.MADT)
--Q44. Cho biết tên những giáo viên khoa Công Nghệ Thông Tin mà chưa tham gia đề tài nào cả.
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN KHOA KH ON BM.MAKHOA = KH.MAKHOA
WHERE KH.TENKHOA LIKE N'%Công Nghệ Thông Tin%'
EXCEPT
SELECT GV1.HOTEN
FROM GIAOVIEN GV1
JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
JOIN KHOA KH1 ON BM1.MAKHOA = KH1.MAKHOA
JOIN THAMGIADETAI TGDT ON GV1.MAGV = TGDT.MAGV
WHERE KH1.TENKHOA LIKE N'%Công Nghệ Thông Tin%'
--Q45. Tìm những giáo viên chưa tham gia bất kỳ đề tài nào
SELECT*
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM THAMGIADETAI TGDT
				 WHERE GV.MAGV = TGDT.MAGV)
--Q46. Cho biết giáo viên có lương lớn hơn lương của giáo viên 'Nguyễn Hoài An'
SELECT*
FROM GIAOVIEN 
WHERE LUONG > (SELECT GV1.LUONG
			   FROM GIAOVIEN GV1
			   WHERE GV1.HOTEN LIKE N'%Nguyễn Hoài An%')
--Q47. Tìm Những trưởng bộ môn tham gia tối thiểu 1 đề tài
SELECT DISTINCT BM.TRUONGBM
FROM BOMON BM JOIN THAMGIADETAI TGDT ON BM.TRUONGBM = TGDT.MAGV
--Q48. Tìm giáo viên trùng tên và cùng giới tính với các giáo viên khác trong cùng bộ môn
SELECT GV.*
FROM GIAOVIEN GV
WHERE EXISTS(SELECT 1
			 FROM GIAOVIEN GV1
			 WHERE GV.MABM = GV1.MABM 
			 AND RIGHT(GV.HOTEN, CHARINDEX(N' ',REVERSE(GV.HOTEN))) = RIGHT(GV1.HOTEN, CHARINDEX(N' ',REVERSE(GV1.HOTEN)))
			 AND GV.PHAI LIKE GV1.PHAI
			 AND GV.MAGV NOT LIKE GV1.MAGV)
--Q49. Tìm những giáo viên có lương lớn hơn lương của ít nhất một giáo viên bộ môn 'Công Nghệ Phần Mềm'
SELECT*
FROM GIAOVIEN
WHERE LUONG > ANY (SELECT GV.LUONG FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM = BM.MABM WHERE BM.TENBM LIKE N'Công Nghệ Phần Mềm')
--Q50. Tìm Những giáo viên có lương lớn hơn lương của tất cả giáo viên thuộc bộ môn 'Hệ Thống Thông Tin'
SELECT*
FROM GIAOVIEN
WHERE LUONG > ALL (SELECT GV.LUONG FROM GIAOVIEN GV JOIN BOMON BM ON GV.MABM = BM.MABM WHERE BM.TENBM LIKE N'Hệ Thống Thông Tin')
--Q51. Cho biết tên khoa có đông giáo viên nhất
SELECT KH.TENKHOA
FROM KHOA KH 
JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA
JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
GROUP BY KH.MAKHOA,KH.TENKHOA
HAVING COUNT(DISTINCT GV.MAGV) >= ALL(SELECT COUNT(DISTINCT GV1.MAGV) 
									  FROM KHOA KH1 
									  JOIN BOMON BM1 ON KH1.MAKHOA = BM1.MAKHOA
									  JOIN GIAOVIEN GV1 ON BM1.MABM = GV1.MABM
									  GROUP BY KH1.MAKHOA,KH1.TENKHOA)
--Q52. Cho biết họ tên giáo viên chủ nhiệm nhiều đề tài nhất
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN DETAI DT ON GV.MAGV = DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT DT.MADT) >= ALL(SELECT COUNT(DISTINCT DT1.MADT)
									  FROM GIAOVIEN GV1
									  JOIN DETAI DT1 ON GV1.MAGV = DT1.GVCNDT
									  GROUP BY GV1.MAGV,GV1.HOTEN)
--Q53. Cho biết mã bộ môn có nhiều giáo viên nhất
SELECT GV.MABM
FROM GIAOVIEN GV
GROUP BY GV.MABM
HAVING COUNT(GV.MAGV) >= ALL(SELECT COUNT(GV1.MAGV)
							 FROM GIAOVIEN GV1
							 GROUP BY GV1.MABM)
--Q54. Cho biết tên giáo viên và tên bộ môn của giáo viên tham gia nhiều đê tài nhất
SELECT GV.HOTEN,BM.TENBM
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
GROUP BY GV.MAGV,GV.HOTEN,BM.MABM,BM.TENBM
HAVING COUNT(DISTINCT TGDT.MADT) >= ALL(SELECT COUNT(DISTINCT TGDT1.MADT)
										FROM GIAOVIEN GV1
										JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
										JOIN THAMGIADETAI TGDT1 ON GV1.MAGV = TGDT1.MAGV
										GROUP BY GV1.MAGV,GV1.HOTEN,BM1.MABM,BM1.TENBM)
--Q55. Cho biết tên giáo viên tham gia nhiều đề tài nhất của bộ mốn 'HTTT'
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
WHERE BM.MABM = 'HTTT'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) >= ALL(SELECT COUNT(DISTINCT TGDT1.MADT)
										FROM GIAOVIEN GV1
										JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
										JOIN THAMGIADETAI TGDT1 ON GV1.MAGV = TGDT1.MAGV
										WHERE BM1.MABM = 'HTTT'
										GROUP BY GV1.MAGV,GV1.HOTEN)
--Q56. Cho biết tên giáo viên và tên bộ môn của giáo viên có nhiều người thân nhất
SELECT GV.HOTEN,BM.TENBM
FROM GIAOVIEN GV 
JOIN BOMON BM ON GV.MABM=BM.MABM 
JOIN NGUOITHAN NT ON GV.MAGV=NT.MAGV
GROUP BY GV.MAGV,GV.HOTEN,BM.MABM,BM.TENBM
HAVING COUNT(NT.MAGV) >= ALL (SELECT COUNT(NT1.MAGV)
							  FROM GIAOVIEN GV1 
							  JOIN BOMON BM1 ON GV1.MABM=BM1.MABM 
							  JOIN NGUOITHAN NT1 ON GV1.MAGV=NT1.MAGV
							  GROUP BY GV1.MAGV,GV1.HOTEN,BM1.MABM,BM1.TENBM)
--Q57. Cho biết tên trưởng bộ môn mà chủ nhiệm nhiều đề tài nhất
SELECT GV.HOTEN
FROM GIAOVIEN GV 
JOIN BOMON BM ON GV.MAGV=BM.TRUONGBM 
JOIN DETAI DT ON BM.TRUONGBM = DT.GVCNDT
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DT.MADT) >= ALL(SELECT COUNT(DT1.MADT)
							 FROM GIAOVIEN GV1 
							 JOIN BOMON BM1 ON GV1.MAGV=BM1.TRUONGBM 
							 JOIN DETAI DT1 ON BM1.TRUONGBM = DT1.GVCNDT
							 GROUP BY GV1.MAGV,GV1.HOTEN)

--4.5.Viết các câu truy vấn lồng nâng cao
--Q58. Cho biết tên giáo viên nào mà tham gia đề tài đủ tất cả các chủ đề.
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CD.MACD
				 FROM CHUDE CD
				 EXCEPT
				 SELECT DT.MACD
				 FROM THAMGIADETAI TGDT
				 JOIN DETAI DT ON TGDT.MADT = DT.MADT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM CHUDE CD
				 WHERE NOT EXISTS(SELECT 1 
								  FROM THAMGIADETAI TGDT
								  JOIN DETAI DT ON TGDT.MADT = DT.MADT
								  WHERE TGDT.MAGV = GV.MAGV AND CD.MACD = DT.MACD))
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON TGDT.MADT = DT.MADT
JOIN CHUDE CD ON CD.MACD = DT.MACD
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT CD.MACD) = (SELECT COUNT(*) FROM CHUDE)
--Q59. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn HTTT tham gia.
	--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV1.MAGV
				 FROM GIAOVIEN GV1
				 WHERE GV1.MABM LIKE 'HTTT'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MADT = DT.MADT)
	--NOT EXISTS
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT 1
				 FROM GIAOVIEN GV1
				 WHERE NOT EXISTS(SELECT 1 
								  FROM THAMGIADETAI TGDT1
								  WHERE TGDT1.MADT = DT.MADT AND TGDT1.MAGV = GV1.MAGV) AND GV1.MABM LIKE 'HTTT')
	--GROUP BY
SELECT DT.TENDT
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON TGDT.MADT = DT.MADT
WHERE GV.MABM LIKE 'HTTT'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV) = (SELECT COUNT(*)
									FROM  GIAOVIEN GV1
									WHERE GV1.MABM LIKE 'HTTT')
--Q60. Cho biết tên đề tài có tất cả giảng viên bộ môn “Hệ thống thông tin” tham gia
	--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV1.MAGV
				 FROM GIAOVIEN GV1
				 JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
				 WHERE BM1.TENBM LIKE N'Hệ thống thông tin'
				 EXCEPT
				 SELECT TGDT1.MAGV
				 FROM THAMGIADETAI TGDT1
				 WHERE TGDT1.MADT = DT.MADT)
	--NOT EXISTS
SELECT DISTINCT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT 1
				 FROM GIAOVIEN GV1
				 JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
				 WHERE NOT EXISTS(SELECT 1
								  FROM THAMGIADETAI TGDT1
								  WHERE TGDT1.MADT = DT.MADT AND TGDT1.MAGV = GV1.MAGV) AND BM1.TENBM LIKE N'Hệ thống thông tin')
	--GROUP BY
SELECT DT.TENDT
FROM DETAI DT
JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE BM.TENBM LIKE N'Hệ thống thông tin'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV) = (SELECT COUNT(*)
									FROM GIAOVIEN GV1
									JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
									WHERE BM1.TENBM LIKE N'Hệ thống thông tin')
--Q61. Cho biết giáo viên nào đã tham gia tất cả các đề tài có mã chủ đề là QLGD.
	--EXCEPT
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT
				 WHERE DT.MACD LIKE 'QLGD'
				 EXCEPT
				 SELECT TGDT.MADT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM DETAI DT
				 WHERE NOT EXISTS(SELECT 1
								  FROM THAMGIADETAI TGDT
								  WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV) AND DT.MACD LIKE 'QLGD')
	--GROUP BY
SELECT GV.MAGV
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON TGDT.MADT = DT.MADT
WHERE DT.MACD LIKE 'QLGD'
GROUP BY GV.MAGV
HAVING COUNT(DISTINCT TGDT.MADT) = (SELECT COUNT(*) FROM DETAI DT1 WHERE DT1.MACD LIKE 'QLGD')
--Q62. Cho biết tên giáo viên nào tham gia tất cả các đề tài mà giáo viên Trần Trà Hương đã
--tham gia.
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS (SELECT TGDT.MADT
				  FROM THAMGIADETAI TGDT
				  JOIN GIAOVIEN GV1 ON TGDT.MAGV = GV1.MAGV
				  WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
				  EXCEPT
				  SELECT TGDT1.MADT
				  FROM THAMGIADETAI TGDT1
				  WHERE TGDT1.MAGV = GV.MAGV) AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM THAMGIADETAI TGDT
				 JOIN GIAOVIEN GV1 ON TGDT.MAGV = GV1.MAGV
				 WHERE NOT EXISTS(SELECT 1 
								  FROM THAMGIADETAI TGDT1
								  WHERE TGDT1.MAGV = GV.MAGV AND TGDT1.MADT = TGDT.MADT) AND GV1.HOTEN LIKE N'Trần Trà Hương' ) 
								  AND GV.HOTEN NOT LIKE N'Trần Trà Hương'
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN (GIAOVIEN GV1 
JOIN THAMGIADETAI TGDT1 ON GV1.MAGV = TGDT1.MAGV ) ON TGDT.MADT = TGDT1.MADT
WHERE GV.HOTEN NOT LIKE N'Trần Trà Hương' AND GV1.HOTEN LIKE N'Trần Trà Hương'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) = (SELECT COUNT(DISTINCT TGDT2.MADT)
									FROM THAMGIADETAI TGDT2
									JOIN GIAOVIEN GV2 ON TGDT2.MAGV = GV2.MAGV
									WHERE GV2.HOTEN LIKE N'Trần Trà Hương')
--Q63. Cho biết tên đề tài nào mà được tất cả các giáo viên của bộ môn Hóa Hữu Cơ tham gia.
	--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				 FROM GIAOVIEN GV 
				 JOIN BOMON BM ON GV.MABM = BM.MABM
				 WHERE BM.TENBM LIKE N'Hóa Hữu Cơ'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADETAI TGDT
				 WHERE DT.MADT = TGDT.MADT)
	--NOT EXISTS
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT 1
				 FROM GIAOVIEN GV
				 JOIN BOMON BM ON GV.MABM = BM.MABM
				 WHERE NOT EXISTS(SELECT 1
								  FROM THAMGIADETAI TGDT
								  WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV) AND BM.TENBM LIKE N'Hóa Hữu Cơ')
	--GROUP BY
SELECT DT.TENDT
FROM DETAI DT
JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE BM.TENBM LIKE N'Hóa Hữu Cơ'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV) = (SELECT COUNT(*)
									FROM GIAOVIEN GV1
									JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
									WHERE BM1.TENBM LIKE N'Hóa Hữu Cơ')
--Q64. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài 006.
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT CV.STT
				 FROM CONGVIEC CV
				 WHERE CV.MADT = '006'
				 EXCEPT
				 SELECT TGDT.STT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MADT = '006' AND TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM CONGVIEC CV
				 WHERE CV.MADT = '006' AND NOT EXISTS(SELECT 1
													  FROM THAMGIADETAI TGDT
													  WHERE TGDT.MADT ='006' AND TGDT.STT = CV.STT AND TGDT.MAGV = GV.MAGV))
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN CONGVIEC CV ON TGDT.MADT = CV.MADT
WHERE TGDT.MADT = '006'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.STT) = (SELECT COUNT(*) FROM CONGVIEC WHERE MADT = '006')
--Q65. Cho biết giáo viên nào đã tham gia tất cả các đề tài của chủ đề Ứng dụng công nghệ.
	--EXCEPT
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM CHUDE CD
				 JOIN DETAI DT ON DT.MACD = CD.MACD 
				 WHERE CD.TENCD LIKE N'Ứng dụng công nghệ'
				 EXCEPT
				 SELECT TGDT.MADT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.MAGV
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM DETAI DT
				 JOIN CHUDE CD ON DT.MACD = CD.MACD
				 WHERE NOT EXISTS(SELECT 1
								  FROM THAMGIADETAI TGDT
								  WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV) AND CD.TENCD LIKE N'Ứng dụng công nghệ')
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON DT.MADT = TGDT.MADT
JOIN CHUDE CD ON DT.MACD = CD.MACD
WHERE CD.TENCD LIKE N'Ứng dụng công nghệ'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) = (SELECT COUNT(*) 
									FROM DETAI DT1
									JOIN CHUDE CD1 ON DT1.MACD = CD1.MACD
									WHERE CD1.TENCD LIKE N'Ứng dụng công nghệ')
--Q66. Cho biết tên giáo viên nào đã tham gia tất cả các đề tài của do Trần Trà Hương làm chủ
--nhiệm.
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT
				 JOIN GIAOVIEN GV1 ON DT.GVCNDT = GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
				 EXCEPT
				 SELECT TGDT.MADT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM DETAI DT
				 JOIN GIAOVIEN GV1 ON DT.GVCNDT = GV1.MAGV
				 WHERE GV1.HOTEN LIKE N'Trần Trà Hương' AND NOT EXISTS(SELECT 1
																	   FROM THAMGIADETAI TGDT
																	   WHERE TGDT.MAGV = GV.MAGV AND TGDT.MADT = DT.MADT))
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN (GIAOVIEN GV1 JOIN DETAI DT ON GV1.MAGV = DT.GVCNDT) ON TGDT.MADT = DT.MADT
WHERE GV1.HOTEN LIKE N'Trần Trà Hương'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) = (SELECT COUNT(*)
									FROM DETAI DT 
									JOIN GIAOVIEN GV2 ON DT.GVCNDT = GV2.MAGV
									WHERE GV2.HOTEN LIKE N'Trần Trà Hương')
--Q67. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa CNTT tham gia.
	--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				 FROM GIAOVIEN GV
				 JOIN BOMON BM ON GV.MABM = BM.MABM
				 WHERE BM.MAKHOA LIKE 'CNTT'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MADT = DT.MADT)
	--NOT EXISTS
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT 1
				 FROM GIAOVIEN GV
				 JOIN BOMON BM ON GV.MABM = BM.MABM
				 WHERE BM.MAKHOA LIKE 'CNTT' AND NOT EXISTS(SELECT 1
															FROM THAMGIADETAI TGDT
															WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV))
	--GROUP BY
SELECT DT.TENDT
FROM DETAI DT
JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
JOIN GIAOVIEN GV ON GV.MAGV = TGDT.MADT
JOIN BOMON BM ON GV.MABM = GV.MABM
WHERE BM.MAKHOA LIKE 'CNTT'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV) = (SELECT COUNT(*)
									FROM GIAOVIEN GV1
									JOIN BOMON BM1
									ON GV1.MABM = BM1.MABM
									WHERE BM1.MAKHOA LIKE 'CNTT')
--Q68. Cho biết tên giáo viên nào mà tham gia tất cả các công việc của đề tài Nghiên cứu tế
--bào gốc.
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT,CV.STT
				 FROM CONGVIEC CV
				 JOIN DETAI DT ON CV.MADT = DT.MADT
				 WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc'
				 EXCEPT
				 SELECT TGDT.MADT,TGDT.STT
				 FROM THAMGIADETAI TGDT
				 JOIN DETAI DT1 ON TGDT.MADT = DT1.MADT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM CONGVIEC CV
				 JOIN DETAI DT ON CV.MADT = DT.MADT
				 WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc' AND NOT EXISTS(SELECT 1
																			 FROM THAMGIADETAI TGDT
																			 WHERE TGDT.MADT = CV.MADT AND TGDT.MAGV = GV.MAGV AND TGDT.STT = CV.STT))
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON TGDT.MADT = DT.MADT
JOIN CONGVIEC CV ON CV.MADT = DT.MADT
WHERE DT.TENDT LIKE N'Nghiên cứu tế bào gốc'
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.STT) = (SELECT COUNT(*)
								   FROM CONGVIEC CV1
								   JOIN DETAI DT1 ON CV1.MADT = DT1.MADT
								   WHERE DT1.TENDT LIKE N'Nghiên cứu tế bào gốc')
--Q69. Tìm tên các giáo viên được phân công làm tất cả các đề tài có kinh phí trên 100 triệu?
	--EXCEPT
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT
				 WHERE DT.KINHPHI >100
				 EXCEPT 
				 SELECT TGDT.MADT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.HOTEN
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1 
				 FROM DETAI DT
				 WHERE DT.KINHPHI > 100 AND NOT EXISTS(SELECT 1
													   FROM THAMGIADETAI TGDT
													   WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV))
	--GROUP BY
SELECT GV.HOTEN
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN DETAI DT ON TGDT.MADT = DT.MADT
WHERE DT.KINHPHI > 100
GROUP BY GV.MAGV,GV.HOTEN
HAVING COUNT(DISTINCT TGDT.MADT) =(SELECT COUNT(*) 
								   FROM DETAI DT1
								   WHERE DT1.KINHPHI > 100)
--Q70. Cho biết tên đề tài nào mà được tất cả các giáo viên của khoa Sinh Học tham gia.
	--EXCEPT
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT GV.MAGV
				 FROM KHOA KH
				 JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA
				 JOIN GIAOVIEN GV ON GV.MABM = BM.MABM
				 WHERE KH.TENKHOA LIKE N'Sinh học'
				 EXCEPT
				 SELECT TGDT.MAGV
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MADT = DT.MADT)
	--NOT EXISTS
SELECT DT.TENDT
FROM DETAI DT
WHERE NOT EXISTS(SELECT 1
				 FROM KHOA KH
				 JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA
				 JOIN GIAOVIEN GV ON GV.MABM = BM.MABM
				 WHERE KH.TENKHOA LIKE N'Sinh học' AND NOT EXISTS(SELECT 1
																  FROM THAMGIADETAI TGDT
																  WHERE TGDT.MAGV = GV.MAGV AND TGDT.MADT = DT.MADT))
	--GROUP BY 
SELECT DT.TENDT
FROM GIAOVIEN GV
JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
JOIN BOMON BM ON BM.MABM = GV.MABM
JOIN KHOA KH ON BM.MAKHOA = KH.MAKHOA
JOIN DETAI DT ON DT.MADT = TGDT.MADT
WHERE KH.TENKHOA LIKE N'Sinh học'
GROUP BY DT.MADT,DT.TENDT
HAVING COUNT(DISTINCT TGDT.MAGV) = ( SELECT COUNT(*)
									 FROM KHOA KH1
									 JOIN BOMON BM1 ON KH1.MAKHOA = BM1.MAKHOA
									 JOIN GIAOVIEN GV1 ON GV1.MABM = BM1.MABM
									 WHERE KH1.TENKHOA LIKE N'Sinh học')
--Q71. Cho biết mã số, họ tên, ngày sinh của giáo viên tham gia tất cả các công việc của đề tài
--“Ứng dụng hóa học xanh”.
	--EXCEPT
SELECT GV.MAGV,GV.HOTEN,GV.NGSINH
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT DT.MADT,CV.STT
				 FROM CONGVIEC CV
				 JOIN DETAI DT ON DT.MADT = CV.MADT
				 WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh'
				 EXCEPT
				 SELECT TGDT.MADT,TGDT.STT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.MAGV,GV.HOTEN,GV.NGSINH
FROM GIAOVIEN GV
WHERE NOT EXISTS(SELECT 1
				 FROM CONGVIEC CV
				 JOIN DETAI DT ON CV.MADT = DT.MADT
				 WHERE DT.TENDT LIKE N'Ứng dụng hóa học xanh' AND NOT EXISTS(SELECT 1
																			 FROM THAMGIADETAI TGDT
																			 WHERE TGDT.MAGV=GV.MAGV AND TGDT.MADT=CV.MADT AND TGDT.STT=CV.STT))
	--GROUP BY
SELECT GV.MAGV, GV.HOTEN, GV.NGSINH
FROM GIAOVIEN GV 
LEFT JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV LEFT JOIN DETAI DT ON TGDT.MADT = DT.MADT AND DT.TENDT LIKE N'Ứng dụng hóa học xanh'
GROUP BY GV.MAGV, GV.HOTEN, GV.NGSINH
HAVING COUNT(DISTINCT CASE WHEN DT.TENDT LIKE N'Ứng dụng hóa học xanh' THEN 1 END) = (SELECT COUNT(*) 
																						FROM CONGVIEC CV  JOIN DETAI DT1 ON DT1.MADT = CV.MADT 
																						WHERE DT1.TENDT LIKE N'Ứng dụng hóa học xanh')
--Q72. Cho biết mã số, họ tên, tên bộ môn và tên người quản lý chuyên môn của giáo viên
--tham gia tất cả các đề tài thuộc chủ đề “Nghiên cứu phát triển”.
	--EXCEPT
SELECT GV.MAGV,GV.HOTEN,BM.TENBM,GV1.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
WHERE NOT EXISTS(SELECT DT.MADT
				 FROM DETAI DT
				 JOIN CHUDE CD ON DT.MACD = CD.MACD
				 WHERE CD.TENCD LIKE N'Nghiên cứu phát triển'
				 EXCEPT 
				 SELECT TGDT.MADT
				 FROM THAMGIADETAI TGDT
				 WHERE TGDT.MAGV = GV.MAGV)
	--NOT EXISTS
SELECT GV.MAGV,GV.HOTEN,BM.TENBM,GV1.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
WHERE NOT EXISTS(SELECT 1
				 FROM DETAI DT
				 JOIN CHUDE CD ON DT.MACD = CD.MACD
				 WHERE CD.TENCD LIKE N'Nghiên cứu phát triển' AND NOT EXISTS(SELECT 1
																			 FROM THAMGIADETAI TGDT
																			 WHERE TGDT.MADT = DT.MADT AND TGDT.MAGV = GV.MAGV)) 
	--GROUP BY
SELECT GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN AS GVQLCM
FROM GIAOVIEN GV JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV JOIN DETAI DT ON TGDT.MADT = DT.MADT JOIN CHUDE CD ON DT.MACD = CD.MACD JOIN GIAOVIEN QLCM ON GV.GVQLCM = QLCM.MAGV JOIN BOMON BM ON GV.MABM = BM.MABM
WHERE CD.TENCD LIKE N'Nghiên cứu phát triển'
GROUP BY GV.MAGV, GV.HOTEN, BM.TENBM, QLCM.HOTEN 
HAVING COUNT(DISTINCT DT.MADT) = (SELECT COUNT(DT2.MADT)
								  FROM DETAI DT2 JOIN CHUDE CD2 ON DT2.MACD = CD2.MACD 
								  WHERE CD2.TENCD LIKE N'Nghiên cứu phát triển')
--4.7.Viết các câu truy vấn nâng cao
--Q75. Cho biết họ tên giáo viên và tên bộ môn họ làm trưởng bộ môn nếu có
SELECT GV.HOTEN,BM.TENBM
FROM GIAOVIEN GV
LEFT JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
--Q76. Cho danh sách tên bộ môn và họ tên trưởng bộ môn đó nếu có
SELECT TENBM,GV.HOTEN
FROM BOMON BM
LEFT JOIN GIAOVIEN GV ON GV.MAGV = BM.TRUONGBM
--Q77. Cho danh sách tên giáo viên và các đề tài giáo viên đó chủ nhiệm nếu có
SELECT GV.HOTEN,DT.TENDT
FROM GIAOVIEN GV
LEFT JOIN DETAI DT ON GV.MAGV = DT.GVCNDT 
--Q78. Xuất ra thông tin của giáo viên (MAGV, HOTEN) và mức lương của giáo viên. Mức
--lương được xếp theo quy tắc: Lương của giáo viên < $1800 : “THẤP” ; Từ $1800 đến
--$2200: TRUNG BÌNH; Lương > $2200: “CAO”
SELECT GV.MAGV,GV.HOTEN,GV.LUONG,
CASE
	WHEN GV.LUONG < 1800 THEN N'THẤP'
	WHEN GV.LUONG BETWEEN 1800 AND 2200 THEN N'TRUNG BÌNH'
	WHEN GV.LUONG > 2200 THEN N'CAO'
END AS MUCLUONG
FROM GIAOVIEN GV
--Q79. Xuất ra thông tin giáo viên (MAGV, HOTEN) và xếp hạng dựa vào mức lương. Nếu giáo
--viên có lương cao nhất thì hạng là 1.
SELECT GV.MAGV,GV.HOTEN,GV.LUONG,(
	SELECT COUNT(*)
	FROM GIAOVIEN GV1
	WHERE GV.LUONG<GV1.LUONG) + 1
AS HANG
FROM GIAOVIEN GV
ORDER BY HANG
--Q80. Xuất ra thông tin thu nhập của giáo viên. Thu nhập của giáo viên được tính bằng
--LƯƠNG + PHỤ CẤP. Nếu giáo viên là trưởng bộ môn thì PHỤ CẤP là 300, và giáo viên là
--trưởng khoa thì PHỤ CẤP là 600.
SELECT DISTINCT GV.MAGV,GV.HOTEN,GV.LUONG +( 
CASE 
	WHEN BM.TRUONGBM IS NOT NULL AND KH.TRUONGKHOA IS NULL THEN 300 
	WHEN BM.TRUONGBM IS NULL AND KH.TRUONGKHOA IS NOT NULL THEN 600
	WHEN BM.TRUONGBM IS NOT NULL AND KH.TRUONGKHOA IS NOT NULL THEN 900
	ELSE 0
END) AS THUNHAP
FROM GIAOVIEN GV
LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.PHUCAP
LEFT JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
LEFT JOIN KHOA KH ON GV.MAGV = KH.TRUONGKHOA
--Q81. Xuất ra năm mà giáo viên dự kiến sẽ nghĩ hưu với quy định: Tuổi nghỉ hưu của Nam là
--60, của Nữ là 55.
---------------------------
SELECT MAGV,HOTEN,YEAR(NGSINH) AS NAMSINH,
(CASE
	WHEN PHAI LIKE N'Nam' THEN YEAR(NGSINH) + 60
	WHEN PHAI LIKE N'Nữ' THEN YEAR(NGSINH) + 55
END) AS NAMVEHUU
FROM GIAOVIEN 
--Q82. Cho biết danh sách tất cả giáo viên (magv, hoten) và họ tên giáo viên là quản lý chuyên
--môn của họ.
SELECT GV.MAGV,GV.HOTEN,GV1.HOTEN
FROM GIAOVIEN GV
LEFT JOIN GIAOVIEN GV1 ON GV.GVQLCM = GV1.MAGV
--Q83. Cho biết danh sách tất cả bộ môn (mabm, tenbm), tên trưởng bộ môn cùng số lượng
--giáo viên của mỗi bộ môn.
SELECT BM.MABM,BM.TENBM,GV1.HOTEN,COUNT(DISTINCT GV.MAGV)
FROM BOMON BM
LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
LEFT JOIN (BOMON BM1 
JOIN GIAOVIEN GV1 ON BM1.TRUONGBM = GV1.MAGV) ON BM.MABM = BM1.MABM
GROUP BY BM.MABM,BM.TENBM,GV1.HOTEN
--Q84. Cho biết danh sách tất cả các giáo viên nam và thông tin các công việc mà họ đã tham
--gia.
SELECT TGDT.MAGV,CV.*
FROM GIAOVIEN GV
LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
LEFT JOIN CONGVIEC CV ON TGDT.MADT = CV.MADT
WHERE GV.PHAI LIKE N'Nam'
--Q85. Cho biết danh sách tất cả các giáo viên và thông tin các công việc thuộc đề tài 001 mà
--họ tham gia.
SELECT TGDT.MAGV,CV.*
FROM GIAOVIEN GV
LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
LEFT JOIN CONGVIEC CV ON TGDT.MADT = CV.MADT
WHERE TGDT.MADT LIKE '001'
--Q86. Cho biết thông tin các trưởng bộ môn (magv, hoten) sẽ về hưu vào năm 2014. Biết
--rằng độ tuổi về hưu của giáo viên nam là 60 còn giáo viên nữ là 55.
SELECT GV.MAGV,GV.HOTEN
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MAGV = BM.TRUONGBM
WHERE 2014 - YEAR(NGSINH) = 
(CASE 
	WHEN GV.PHAI LIKE N'Nam' THEN 60 
	WHEN GV.PHAI LIKE N'Nữ' THEN 55 
END)
--Q87. Cho biết thông tin các trưởng khoa (magv) và năm họ sẽ về hưu.
SELECT GV.MAGV,YEAR(GV.NGSINH) + 
(CASE 
	WHEN GV.PHAI LIKE N'Nam' THEN 60 
	WHEN GV.PHAI LIKE N'Nữ' THEN 55 
END)
FROM GIAOVIEN GV
JOIN KHOA KH ON GV.MAGV = KH.TRUONGKHOA
--Q88. Tạo bảng DANHSACHTHIDUA (magv, sodtdat, danhhieu) gồm thông tin mã giáo viên,
--số đề tài họ tham gia đạt kết quả và danh hiệu thi đua:
--a. Insert dữ liệu cho bảng này (để trống cột danh hiệu)
--b. Dựa vào cột sldtdat (số lượng đề tài tham gia có kết quả là “đạt”) để cập nhật dữ
--liệu cho cột danh hiệu theo quy định:
--i. Sodtdat = 0 thì danh hiệu “chưa hoàn thành nhiệm vụ”
--ii. 1 <= Sodtdat <= 2 thì danh hiệu “hoàn thành nhiệm vụ”
--iii. 3 <= Sodtdat <= 5 thì danh hiệu “tiên tiến”
--iv. Sodtdat >= 6 thì danh hiệu “lao động xuất sắc”
CREATE TABLE #DANHSACHTHIDUA(
	MAGV CHAR(3) PRIMARY KEY,
	SODTDAT INT,
	DANHHIEU NVARCHAR(50)
)
INSERT INTO #DANHSACHTHIDUA (MAGV,SODTDAT)
SELECT TGDT.MAGV,COUNT(DISTINCT TGDT.MADT) AS SODTDAT
FROM THAMGIADETAI TGDT
WHERE NOT EXISTS(SELECT 1
				 FROM CONGVIEC CV
				 WHERE CV.MADT = TGDT.MADT AND NOT EXISTS(SELECT 1
															FROM THAMGIADETAI TGDT1
															WHERE CV.STT = TGDT1.STT AND TGDT1.KETQUA LIKE N'Đạt' AND TGDT.MADT = TGDT1.MADT))
GROUP BY TGDT.MAGV
UPDATE #DANHSACHTHIDUA
SET DANHHIEU = 
(CASE
	WHEN SODTDAT = 0 THEN N'Chưa hoàn thành nhiệm vụ'
	WHEN SODTDAT BETWEEN 1 AND 2 THEN N'Hoàn thành nhiệm vụ'
	WHEN SODTDAT BETWEEN 3 AND 5 THEN N'Tiên Tiến'
	WHEN SODTDAT >= 6 THEN N'Lao động xuất sắc'
END)
SELECT * FROM #DANHSACHTHIDUA
DROP TABLE #DANHSACHTHIDUA
--Q89. Cho biết magv, họ tên và mức lương các giáo viên nữ của khoa “Công nghệ thông tin”,
--mức lương trung bình, mức lương lớn nhất và nhỏ nhất của các giáo viên này.
-- Lấy thông tin chi tiết và sắp xếp
SELECT GV.MAGV,GV.HOTEN,GV.LUONG,
	AVG(GV.LUONG) OVER (ORDER BY GV.LUONG) AS LuongTB,
	MAX(GV.LUONG) OVER (ORDER BY GV.LUONG) AS LuongMax,
	MIN(GV.LUONG) OVER (ORDER BY GV.LUONG) AS LuongMin
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
JOIN KHOA KH ON BM.MAKHOA = KH.MAKHOA
WHERE KH.TENKHOA LIKE N'Công nghệ thông tin' AND GV.PHAI LIKE N'Nữ'
--Q90. Cho biết makhoa, tenkhoa, số lượng gv từng khoa, số lượng gv trung bình, lớn nhất và
--nhỏ nhất của các khoa này.
SELECT KH.MAKHOA,KH.TENKHOA,
	COUNT(GV.MAGV) AS SoLuongGV,
	AVG(COUNT(GV.MAGV)) OVER () AS SoLuongGVTB,
	MAX(COUNT(GV.MAGV)) OVER () AS SoLuongGVMax,
	MIN(COUNT(GV.MAGV)) OVER () AS SoLuongGVMin
FROM KHOA KH
JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA
JOIN GIAOVIEN GV ON GV.MABM = BM.MABM
GROUP BY KH.MAKHOA,KH.TENKHOA
--Q91. Cho biết danh sách các tên chủ đề, kinh phí cho chủ đề (là kinh phí cấp cho các đề tài
--thuộc chủ đề), tổng kinh phí, kinh phí lớn nhất và nhỏ nhất cho các chủ đề.
SELECT DISTINCT CD.MACD,CD.TENCD,
	SUM(DT.KINHPHI) OVER (PARTITION BY CD.MACD) AS KinhPhi,
	SUM(DT.KINHPHI) OVER () AS TongKinhPhi,
	MAX(DT.KINHPHI) OVER () AS KinhPhiLonNhat,
    MIN(DT.KINHPHI) OVER () AS KinhPhiNhoNhat
FROM CHUDE CD
JOIN DETAI DT ON CD.MACD = DT.MACD
--Q92. Cho biết madt, tendt, kinh phí đề tài, mức kinh phí tổng và trung bình của các đề tài
--này theo từng giáo viên chủ nhiệm.
SELECT DT.GVCNDT,DT.MADT,DT.TENDT,DT.KINHPHI,
	SUM(DT.KINHPHI) OVER (PARTITION BY DT.GVCNDT) AS KinhPhiTong,
	AVG(DT.KINHPHI) OVER (PARTITION BY DT.GVCNDT) AS KinhPhiTrungBinh
FROM DETAI DT
--Q93. Cho biết madt, tendt, kinh phí đề tài, mức kinh phí tổng và trung bình của các đề tài
--này theo từng cấp độ đề tài.
SELECT DT.CAPQL,DT.MADT,DT.TENDT,DT.KINHPHI,
	SUM(DT.KINHPHI) OVER (PARTITION BY DT.CAPQL) AS KinhPhiTong,
	AVG(DT.KINHPHI) OVER (PARTITION BY DT.CAPQL) AS KinhPhiTrungBinh
FROM DETAI DT
--Q94. Tổng hợp số lượng các đề tài theo (cấp độ, chủ đề), theo (cấp độ), theo (chủ đề).
SELECT CD.MACD,CD.TENCD,DT.CAPQL,
	COUNT(*) OVER (PARTITION BY DT.CAPQL,CD.MACD) AS SoLuongTheoCapDoChuDe,
	COUNT(*) OVER (PARTITION BY DT.CAPQL) AS SoLuongTheoCapDo,
	COUNT(*) OVER (PARTITION BY CD.MACD) AS SoLuongTheoChuDe
FROM DETAI DT
JOIN CHUDE CD ON DT.MACD = CD.MACD
GROUP BY CD.MACD,CD.TENCD,DT.CAPQL
--Q95. Tổng hợp mức lương tổng của các giáo viên theo (bộ môn, phái), theo (bộ môn).
SELECT DISTINCT BM.MABM,GV.PHAI,
	SUM(GV.LUONG) OVER (PARTITION BY BM.MABM,GV.PHAI) AS LuongTheoBoMonPhai,
	SUM(GV.LUONG) OVER (PARTITION BY BM.MABM) AS TongLuongTheoBoMon,
	SUM(GV.LUONG) OVER (PARTITION BY GV.PHAI) AS TongLuongTheoPhai
FROM GIAOVIEN GV
JOIN BOMON BM ON GV.MABM = BM.MABM
--Q96. Tổng hợp số lượng các giáo viên của khoa CNTT theo (bộ môn, lương), theo (bộ môn),
--theo (lương).
SELECT BM.MABM,GV.LUONG,
	COUNT(GV.MAGV) OVER (PARTITION BY BM.MABM, GV.LUONG) AS SoLuongGVTheoBoMonLuong,
	COUNT(GV.MAGV) OVER (PARTITION BY BM.MABM) AS SoLuongGVTheoBoMon,
	COUNT(GV.MAGV) OVER (PARTITION BY GV.LUONG) AS SoLuongGVTheoLuong
FROM BOMON BM 
JOIN GIAOVIEN GV ON GV.MABM = BM.MABM
WHERE BM.MAKHOA LIKE 'CNTT'

--4.7.Viết các STORE PROCEDURE
--Kiểm tra giáo viên tồn tại
GO
CREATE FUNCTION FN_TonTaiGiaoVien(
	@MaGV CHAR(3)
)
RETURNS INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM GIAOVIEN WHERE MAGV = @MaGV)
	BEGIN
		RETURN -1
	END

	RETURN 1
END
GO
--Kiểm tra đề tài tồn tại
GO
CREATE FUNCTION FN_TonTaiDeTai(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT)
	BEGIN
		RETURN -1
	END

	RETURN 1
END
GO
--Kiểm tra công việc tồn tại trong đề tài
GO
CREATE FUNCTION FN_TonTaiCongViecTrongDeTai(
	@STT INT,
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM CONGVIEC WHERE MADT = @MaDT AND @STT = STT)
	BEGIN
		RETURN -1
	END

	RETURN 1
END
GO
--Kiểm tra khoa tồn tại
GO
CREATE FUNCTION FN_TonTaiKhoa(
	@MaKhoa VARCHAR(5)
)
RETURNS INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM KHOA WHERE MAKHOA = @MaKhoa)
	BEGIN
		RETURN -1
	END

	RETURN 1
END
GO
--Kiểm tra chủ đề tồn tại
--Kiểm tra giáo viên tồn tại
GO
CREATE FUNCTION FN_TonTaiChuDe(
	@MaCD CHAR(3)
)
RETURNS INT
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM CHUDE WHERE MACD = @MaCD)
	BEGIN
		RETURN -1
	END

	RETURN 1
END
GO
--P1. Xuất ra toàn bộ danh sách giáo viên.
GO
CREATE PROCEDURE SP_DanhSachGiaoVien
AS BEGIN
	SELECT* FROM GIAOVIEN
END
GO
EXEC dbo.SP_DanhSachGiaoVien
--P2. Tính số lượng đề tài mà một giáo viên đang thực hiện.
GO
CREATE FUNCTION FN_SoLuongDeTai(
    @MaGV CHAR(3)
)
RETURNS INT
BEGIN
    IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

    DECLARE @SoLuongDeTai INT
    SELECT @SoLuongDeTai = COUNT(DISTINCT MADT) FROM THAMGIADETAI WHERE MAGV = @MaGV
    
    RETURN @SoLuongDeTai
END
GO
--Đã test ở P3
--P3. In thông tin chi tiết của một giáo viên(sử dụng lệnh print): Thông tin cá
--nhân, Số lượng đề tài tham gia, Số lượng thân nhân của giáo viên đó.
--Tính số thân nhân
GO
CREATE FUNCTION FN_SoLuongThanNhan(
	@MaGV CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

    DECLARE @SoLuongThanNhan INT
    SELECT @SoLuongThanNhan = COUNT(*) FROM NGUOITHAN WHERE MAGV = @MaGV
    
    RETURN @SoLuongThanNhan
END
GO

CREATE PROCEDURE SP_ThongTinCaNhan
	@MaGV CHAR(3)
AS BEGIN
	DECLARE @SoLuongDeTai INT,
			@SoLuongThanNhan INT
	SET @SoLuongDeTai = dbo.FN_SoLuongDeTai(@MaGV)
	SET @SoLuongThanNhan = dbo.FN_SoLuongThanNhan(@MaGV)

	IF(@SoLuongDeTai = -1 OR @SoLuongThanNhan = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	DECLARE @ThongTin NVARCHAR(1000)
	SELECT @ThongTin = N'Mã Giáo viên: ' + MAGV + CHAR(13) + CHAR(10) +
					   N'Họ tên: ' + ISNULL(HOTEN, '') + CHAR(13) + CHAR(10) +
					   N'Lương: ' + ISNULL(CAST(LUONG AS VARCHAR(50)), '') + CHAR(13) + CHAR(10) +
					   N'Phái: ' + ISNULL(PHAI + CHAR(13) + CHAR(10), '') +
					   N'Ngày sinh: ' + ISNULL(CAST(NGSINH AS VARCHAR(50)), '') + CHAR(13) + CHAR(10) +
					   N'Địa Chỉ: ' + ISNULL(DIACHI, '') + CHAR(13) + CHAR(10) +
					   N'Giáo viên quản lí chuyên môn: ' + ISNULL(GVQLCM, '') + CHAR(13) + CHAR(10) +
					   N'Bộ môn: ' + ISNULL(MABM, '') + CHAR(13) + CHAR(10)
	FROM GIAOVIEN
	WHERE MAGV = @MaGV

	PRINT N'Thông tin cá nhân: ' + @ThongTin
	PRINT N'Số lượng đề tài: ' + CAST(@SoLuongDeTai AS VARCHAR(10))
	PRINT N'Số lượng thân nhân: ' + CAST(@SoLuongThanNhan AS VARCHAR(10))
END
GO

DECLARE @MaGV CHAR(3), @SoLuongDeTai INT, @i INT, @SoGV INT
SELECT @SoGV = COUNT(*) FROM GIAOVIEN
SET @i = 0
WHILE (@i < @SoGV)
BEGIN 
    SET @MaGV = RIGHT('000' + CAST(@i AS VARCHAR(3)), 3)
    EXEC dbo.SP_ThongTinCaNhan @MaGV
	SET @i = @i + 1
END
GO
--P4. Kiểm tra xem một giáo viên có tồn tại hay không (dựa vào MAGV).
PRINT dbo.FN_TonTaiGiaoVien('000')
--P5. Kiểm tra quy định của một giáo viên: Chỉ được thực hiện các đề tài mà bộ
--môn của giáo viên đó làm chủ nhiệm.
GO 
CREATE PROCEDURE SP_ThucHienDeTaiMaBoMonChuNhiem
	@MaGV CHAR(3),
	@MaDT CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1
				  FROM DETAI DT 
				  JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
				  JOIN BOMON BM ON GV.MABM = BM.MABM
				  WHERE EXISTS(SELECT 1 
							   FROM GIAOVIEN GV1
							   WHERE GV1.MABM = GV.MABM AND GV1.MAGV = @MaGV) AND DT.MADT = @MaDT)
	BEGIN
		RAISERROR(N'Giáo viên %s tham gia vào đề tài mình mà bộ môn mình không làm chủ nhiệm',15,1,@MaGV)
		RETURN
	END

	PRINT N'Thỏa'
END
GO
EXEC dbo.SP_ThucHienDeTaiMaBoMonChuNhiem '000','001'
EXEC dbo.SP_ThucHienDeTaiMaBoMonChuNhiem '001','000'
EXEC dbo.SP_ThucHienDeTaiMaBoMonChuNhiem '001','005'
EXEC dbo.SP_ThucHienDeTaiMaBoMonChuNhiem '003','002'
--P6. Thực hiện thêm một phân công cho giáo viên thực hiện một công việc của
--đề tài:
--o Kiểm tra thông tin đầu vào hợp lệ: giáo viên phải tồn tại, công việc
--phải tồn tại, thời gian tham gia phải >0
--o Kiểm tra quy định ở câu n.
SELECT* FROM THAMGIADETAI
GO
CREATE PROCEDURE SP_ThemCongViecChoGiaoVien
	@MaGV CHAR(3),
	@MaDT CHAR(3),
	@STT INT,
	@PHUCAP FLOAT,
	@KETQUA NVARCHAR(30)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF(dbo.FN_TonTaiCongViecTrongDeTai(@STT,@MaDT) = -1)
	BEGIN
		RAISERROR(N'Công việc %d không tồn tại trong đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1
				  FROM DETAI DT 
				  JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
				  JOIN BOMON BM ON GV.MABM = BM.MABM
				  WHERE EXISTS(SELECT 1 
							   FROM GIAOVIEN GV1
							   WHERE GV1.MABM = GV.MABM AND GV1.MAGV = @MaGV) AND DT.MADT = @MaDT)
	BEGIN
		RAISERROR(N'Giáo viên %s tham gia vào đề tài mình mà bộ môn mình không làm chủ nhiệm',15,1,@MaGV)
		RETURN
	END

	INSERT INTO THAMGIADETAI (MAGV,MADT,STT,PHUCAP,KETQUA)
	VALUES (@MaGV,@MaDT,@STT,@PHUCAP,@KETQUA)
	PRINT N'Thêm thành công'
	RETURN
END
GO
EXEC dbo.SP_ThemCongViecChoGiaoVien '003','002',10,0,NULL
EXEC dbo.SP_ThemCongViecChoGiaoVien '006','006',1,0,NULL
SELECT* FROM THAMGIADETAI
DELETE 
FROM THAMGIADETAI
WHERE MAGV = '006' AND MADT = '006' AND STT = 1
--P7. Thực hiện xoá một giáo viên theo mã. Nếu giáo viên có thông tin liên quan
--(Có thân nhân, có làm đề tài, ...) thì báo lỗi.
GO
CREATE PROCEDURE SP_XoaGiaoVienTheoMa
	@MaGV CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF EXISTS(SELECT 1
			  FROM THAMGIADETAI TGDT,NGUOITHAN NT,DETAI DT,BOMON BM,GV_DT GVDT,KHOA KH
			  WHERE @MaGV = TGDT.MAGV OR @MaGV = NT.MAGV OR @MaGV = DT.GVCNDT OR @MaGV = BM.TRUONGBM OR @MaGV = GVDT.MAGV OR @MaGV = KH.TRUONGKHOA)
	BEGIN
		RAISERROR(N'Chưa xóa con',15,1)
		RETURN
	END

	DELETE FROM GIAOVIEN WHERE MAGV = @MaGV
END
GO
EXEC dbo.SP_XoaGiaoVienTheoMa '001'
INSERT INTO GIAOVIEN (MAGV) VALUES ('000')
SELECT* FROM GIAOVIEN
EXEC dbo.SP_XoaGiaoVienTheoMa '000'
SELECT* FROM GIAOVIEN
--08. In ra danh sách giáo viên của một phòng ban nào đó cùng với số lượng đề
--tài mà giáo viên tham gia, số thân nhân, số giáo viên mà giáo viên đó quản
--lý nếu có, ...
GO
CREATE PROCEDURE SP_DanhSachGiaoVienPhongBan
	@Phong CHAR(3)
AS BEGIN
	IF NOT EXISTS(SELECT 1 FROM BOMON WHERE PHONG = @Phong)
	BEGIN
		RAISERROR(N'Phòng ban %s không tồn tại',15,1,@Phong)
	END

	SELECT BM.PHONG,GV.MAGV,COUNT(DISTINCT TGDT.MADT) AS SODT,COUNT(DISTINCT NT.TEN) AS SONT,COUNT(DISTINCT GV1.MAGV) AS SOGVQL
	FROM BOMON BM
	JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
	LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV
	LEFT JOIN NGUOITHAN NT ON NT.MAGV = GV.MAGV
	LEFT JOIN GIAOVIEN GV1 ON GV.MAGV = GV1.GVQLCM
	WHERE BM.PHONG = @Phong
	GROUP BY BM.PHONG,GV.MAGV
END
GO
EXEC dbo.SP_DanhSachGiaoVienPhongBan 'B13'
--P9. Kiểm tra quy định của 2 giáo viên a, b: Nếu a là trưởng bộ môn c của b thì
--lương của a phải cao hơn lương của b. (a, b: mã giáo viên)
GO
CREATE PROCEDURE SP_LuongTruongBoMonHonLuongGiaoVien
	@MaGV_A CHAR(3),
	@MaGV_B CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV_A) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV_A)
		RETURN
	END

	IF(dbo.FN_TonTaiGiaoVien(@MaGV_B) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV_B)
		RETURN
	END

	DECLARE @LUONGA FLOAT,
			@LUONGB FLOAT
	SELECT LUONGA = LUONG FROM GIAOVIEN WHERE MAGV = @MaGV_A
	SELECT LUONGB = LUONG FROM GIAOVIEN WHERE MAGV = @MaGV_B

	IF EXISTS(SELECT 1 FROM BOMON WHERE TRUONGBM = @MaGV_A AND MABM IN (SELECT GV.MABM FROM GIAOVIEN GV WHERE GV.MAGV = @MaGV_B))
	BEGIN
		IF(@LUONGA <= @LUONGB)
		BEGIN
			RAISERROR(N'%s là trưởng bộ môn của %s nên lương phải cao hơn %s',15,1,@MaGV_A,@MaGV_B,@MaGV_B)
			RETURN
		END

		ELSE
		BEGIN
			PRINT N'Thỏa'
			RETURN
		END
	END

	IF EXISTS(SELECT 1 FROM BOMON WHERE TRUONGBM = @MaGV_B AND MABM IN (SELECT GV.MABM FROM GIAOVIEN GV WHERE GV.MAGV = @MaGV_A))
	BEGIN
		IF(@LUONGB <= @LUONGA)
		BEGIN
			RAISERROR(N'%s là trưởng bộ môn của %s nên lương phải cao hơn %s',15,1,@MaGV_B,@MaGV_A,@MaGV_A)
			RETURN
		END

		ELSE
		BEGIN
			PRINT N'Thỏa'
			RETURN
		END
	END

	PRINT N'Thỏa'
END
GO
EXEC dbo.SP_LuongTruongBoMonHonLuongGiaoVien '002','003'
INSERT INTO GIAOVIEN VALUES ('000',NULL,10000,NULL,NULL,NULL,NULL,'HTTT')
EXEC dbo.SP_LuongTruongBoMonHonLuongGiaoVien '000','002'
EXEC dbo.SP_LuongTruongBoMonHonLuongGiaoVien '002','000'
DELETE FROM GIAOVIEN WHERE MAGV = '000'
--P10. Thêm một giáo viên: Kiểm tra các quy định: Không trùng tên, tuổi > 18,
--lương > 0
GO
CREATE PROCEDURE SP_ThemGiaoVien
	@MaGV CHAR(3),
	@HoTen NVARCHAR(50),
	@Luong FLOAT,
	@Phai NVARCHAR(4),
	@NgSinh DATETIME,
	@DiaChi NVARCHAR(50),
	@Gvqlcm CHAR(3),
	@MaBM VARCHAR(5)
AS BEGIN
	IF EXISTS(SELECT 1 FROM GIAOVIEN WHERE HOTEN LIKE @HoTen)
	BEGIN
		RAISERROR(N'Trùng tên',15,1)
		RETURN
	END

	IF (DATEDIFF(YEAR,@NgSinh,GETDATE()) <= 18)
	BEGIN
		RAISERROR(N'Chưa đủ tuổi',15,1)
		RETURN
	END

	IF(@Luong <= 0)
	BEGIN
		RAISERROR(N'Lương phải lớn hơn 0',15,1)
		RETURN
	END

	INSERT INTO GIAOVIEN 
	VALUES (@MaGV, @Hoten, @Luong, @Phai, @NGSinh, @DiaChi, @GVQLCM, @MaBM)
END
GO
--P11. Mã giáo viên được xác định tự động theo quy tắc: Nếu đã có giáo viên 001,
--002, 003 thì MAGV của giáo viên mới sẽ là 004. Nếu đã có giáo viên 001,
--002, 005 thì MAGV của giáo viên mới là 003.
GO
CREATE PROCEDURE SP_ThemGiaoVienTuDong
	@HoTen NVARCHAR(50),
	@Luong FLOAT,
	@Phai NVARCHAR(4),
	@NgSinh DATETIME,
	@DiaChi NVARCHAR(50),
	@Gvqlcm CHAR(3),
	@MaBM VARCHAR(5)
AS BEGIN
	DECLARE @SoGV INT,
			@MaGV VARCHAR(3),
			@i INT
	SELECT @SoGV = COUNT(*) FROM GIAOVIEN
	SET @i = 1
	

	WHILE (@i < @SoGV)
	BEGIN
		SET @MaGV = RIGHT('000'+ CAST(@i AS VARCHAR(3)),3)
		
		IF @MaGV NOT IN (SELECT MAGV FROM GIAOVIEN)
		BEGIN
			BREAK
		END
		
		SET @i = @i +1
	END

	IF (@MaGV IS NULL OR @MaGV = '')
	BEGIN
		RAISERROR(N'Không thể tạo mã',15,1)
		RETURN
	END

	INSERT INTO GIAOVIEN
    VALUES (@MaGV, @Hoten, @Luong, @Phai, @NGSinh, @DiaChi, @GVQLCM, @MaBM)
END
GO

--Bài tập thêm Store-Function
--1. Viết stored thực hiện phân công 1 giảng viên tham gia 1 công việc của 1 đề tài cụ thể. Lưu ý:
--mỗi giảng viên chỉ được tham gia tối đa 3 công việc của 1 đề tài. Nếu vi phạm thì báo lỗi
--không thực hiện phân công
GO
CREATE PROCEDURE SP_PhanCongCongViec
	@MaGV CHAR(3),
	@MaDT CHAR(3),
	@STT INT,
	@PhuCap FLOAT,
	@KetQua NVARCHAR(30)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF(dbo.FN_TonTaiCongViecTrongDeTai(@STT,@MaDT) = -1)
	BEGIN
		RAISERROR(N'Công việc %d không tồn tại trong đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	IF NOT EXISTS(SELECT 1
				  FROM DETAI DT
				  JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
				  WHERE GV.MABM IN (SELECT GV1.MABM
									FROM GIAOVIEN GV1
									WHERE GV1.MAGV = @MaGV) AND DT.MADT = @MaDT)
	BEGIN
		RAISERROR(N'Đề tài %s không được bộ môn của giáo viên %s chủ nhiệm',15,1,@MaDT,@MaGV)
		RETURN
	END

	DECLARE @SoLuongCongViec INT
	SELECT @SoLuongCongViec = COUNT(STT) FROM THAMGIADETAI WHERE MADT = @MaDT AND MAGV = @MaGV
	IF (3 <= @SoLuongCongViec)
	BEGIN
		RAISERROR(N'Giáo viên %s đã tham gia 3 công việc của đề tài %s',15,1,@MaGV,@MaDT)
		RETURN
	END

	INSERT INTO THAMGIADETAI
	VALUES (@MaGV,@MaDT,@STT,@PhuCap,@KetQua)
	PRINT N'Thành công'
END
GO
EXEC dbo.SP_PhanCongCongViec '006','006',1,0.5,NULL
SELECT* FROM THAMGIADETAI
DELETE FROM THAMGIADETAI WHERE MAGV = '006' AND MADT = '006' AND STT = 1
EXEC dbo.SP_PhanCongCongViec '003','001',3,0.5,NULL
DELETE FROM THAMGIADETAI WHERE MAGV = '003' AND MADT = '001' AND STT = 3
--2. Viết store thực hiện cập nhật ngày kết thúc của dự án. Lưu ý, ngày kết thúc phải sau ngày bắt
--đầu theo quy định:
--• Đề tài cấp trường: thời gian thực hiện tối thiểu là 3 tháng, tối đa là 6 tháng
--• Đề tài cấp ĐHQG thời gian thực hiện tối thiểu là 6 tháng, tối đa là 9 tháng
--• Đề tài cấp nhà nước thời gian thực hiện tối thiểu là 12 tháng, tối đa là 24 tháng
--DATEDIFF CHỈ TRỪ THEO ĐỊNH DẠNG VÍ DỤ : 
--DECLARE @TG INT
--SET @TG = DATEDIFF(MONTH,'05-31-2024',GETDATE())
--PRINT @TG
--THÌ KẾT QUẢ TRẢ RA 1 THAY VÌ TRA RA 0 NÊN TA CẦN CHIA TRƯỜNG HỢP
GO
CREATE PROCEDURE SP_CapNhatNgayKetThuc
	@MaDT CHAR(3),
	@NgayKT DATETIME
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	DECLARE @Ngay_NgayBD INT,
			@Thang_NgayBD INT,
			@Nam_NgayBD INT,
			@CapQL NVARCHAR(15)
	SELECT @Nam_NgayBD= DAY(NGAYBD), @Thang_NgayBD = MONTH(NGAYBD), @Nam_NgayBD = YEAR(NGAYBD), @CapQL = CAPQL 
	FROM DETAI
	WHERE @MaDT = MADT

	DECLARE @Ngay_ThoiGian INT,
			@Thang_ThoiGian INT,
			@Nam_ThoiGian INT
	SET @Ngay_ThoiGian = DAY(@NgayKT) - @Ngay_NgayBD
	SET	@Thang_ThoiGian = MONTH(@NgayKT) - @Thang_NgayBD
	SET @Nam_ThoiGian = YEAR(@NgayKT) - @Nam_NgayBD

	IF(@CapQL LIKE N'TRƯỜNG')
	BEGIN
		IF(@Nam_ThoiGian > 0)
		BEGIN
			RAISERROR(N'Quá hạn',15,1)
			RETURN
		END

		IF(@Nam_ThoiGian < 0)
		BEGIN
			RAISERROR(N'Năm kết thúc nhỏ hơn năm bắt đầu',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian < 3)
		BEGIN
			RAISERROR(N'Chưa đủ số tháng tối thiểu',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian > 6)
		BEGIN
			RAISERROR(N'Vượt quá số tháng tối đa',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian = 3)
		BEGIN
			IF(@Ngay_ThoiGian < 0)
			BEGIN
				RAISERROR(N'Chưa tròn 3 tháng',15,1)
				RETURN
			END
		END

		IF(@Thang_ThoiGian = 6)
		BEGIN
			IF(@Ngay_ThoiGian > 0)
			BEGIN
				RAISERROR(N'Vượt quá 6 tháng vài ngày',15,1)
				RETURN
			END
		END
		UPDATE DETAI
		SET NGAYKT = @NgayKT
		WHERE MADT = @MaDT
	END

	IF(@CapQL LIKE N'ĐHQG')
	BEGIN
		IF(@Nam_ThoiGian > 0)
		BEGIN
			RAISERROR(N'Quá hạn',15,1)
			RETURN
		END

		IF(@Nam_ThoiGian < 0)
		BEGIN
			RAISERROR(N'Năm kết thúc nhỏ hơn năm bắt đầu',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian < 6)
		BEGIN
			RAISERROR(N'Chưa đủ số tháng tối thiểu',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian > 9)
		BEGIN
			RAISERROR(N'Vượt quá số tháng tối đa',15,1)
			RETURN
		END

		IF(@Thang_ThoiGian = 6)
		BEGIN
			IF(@Ngay_ThoiGian < 0)
			BEGIN
				RAISERROR(N'Chưa tròn 6 tháng',15,1)
				RETURN
			END
		END

		IF(@Thang_ThoiGian = 9)
		BEGIN
			IF(@Ngay_ThoiGian > 0)
			BEGIN
				RAISERROR(N'Vượt quá 9 tháng vài ngày',15,1)
				RETURN
			END
		END
		UPDATE DETAI
		SET NGAYKT = @NgayKT
		WHERE MADT = @MaDT
	END

	IF(@CapQL LIKE N'NHÀ NƯỚC')
	BEGIN

		IF(@Nam_ThoiGian <= 0)
		BEGIN
			RAISERROR(N'Chưa đủ 12 tháng',15,1)
			RETURN
		END

		IF(@Nam_ThoiGian > 2)
		BEGIN
			RAISERROR(N'Qúa 24 tháng',15,1)
			RETURN
		END

		IF(@Nam_ThoiGian = 2)
		BEGIN
			IF(@Thang_ThoiGian > 0 OR @Ngay_ThoiGian > 0)
			BEGIN
				RAISERROR(N'Quá hạn',15,1)
				RETURN
			END
		END

		IF(@Nam_ThoiGian = 1)
		BEGIN
			IF(@Thang_ThoiGian < 0)
			BEGIN
				RAISERROR(N'Chưa đủ số tháng',15,1)
				RETURN
			END

			ELSE IF(@Thang_ThoiGian = 0 AND @Ngay_ThoiGian < 0)
			BEGIN
				RAISERROR(N'Chưa đủ số ngày',15,1)
				RETURN
			END
		END
		UPDATE DETAI
		SET NGAYKT = @NgayKT
		WHERE MADT = @MaDT
	END
END
GO
SELECT * FROM DETAI
--TEST 'Trường'
EXEC dbo.SP_CapNhatNgayKetThuc '002','2001-10-12'
EXEC dbo.SP_CapNhatNgayKetThuc '002','1999-10-12'
EXEC dbo.SP_CapNhatNgayKetThuc '002','2000-11-12'
--...
--3. Viết store thực hiện cập nhật giáo viên quản lý chuyên môn cho 1 giảng viên cụ thể. Lưu ý,
--GVQLCM phải cùng bộ môn với giảng viên cần cập nhật.
GO
CREATE PROCEDURE SP_CapNhatGVQLCM
	@MaGV CHAR(3),
	@Gvqlcm CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiGiaoVien(@Gvqlcm) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@Gvqlcm)
		RETURN
	END

	IF(@MaGV = @Gvqlcm)
	BEGIN
		RAISERROR(N'Ai đâu tự làm giáo viên quản lí của mình',15,1)
		RETURN
	END

	IF NOT EXISTS(SELECT 1
				  FROM GIAOVIEN GV1,GIAOVIEN GV2
				  WHERE GV1.MAGV = @MaGV AND GV2.MAGV = @Gvqlcm AND GV1.MABM = GV2.MABM AND GV1.MAGV <> GV2.MAGV)
	BEGIN
		RAISERROR(N'Giáo viên %s không cùng bộ môn với giáo viên %s',15,1,@MaGV,@Gvqlcm)
		RETURN
	END

	UPDATE GIAOVIEN
	SET GVQLCM = @Gvqlcm
	WHERE MAGV = @MaGV
END
GO
SELECT * FROM GIAOVIEN
EXEC dbo.SP_CapNhatGVQLCM '002','002'
EXEC dbo.SP_CapNhatGVQLCM '010','002'
--4. Viết stored thực hiện cập nhật trưởng khoa cho 1 khoa cụ thể. Lưu ý, trưởng khoa phải là
--người trong khoa và không được kiêm nhiệm chức vụ khác (trưởng bộ môn, gvqlcm)
--• Input: @truongkhoa, @makhoa
--• So sánh makhoa của Truongkhoa và @makhoa.
--• Lấy makhoa của @truongkhoa
--• So sanh if(@makhoatk != @makhoa
--1. Nếu khác: báo lỗi & thoát
--2. Nếu đúng: kiểm tra không kiêm nhiệm
--1. @truongkhoa NOT IN (truongbm) và NOT IN (gvqlcm):
--a. Nếu thuộc: báo lỗi và thoát
--b. Nếu không thuộc:
--i. Update Khoa set TruongKHoa = ‘????’ where makhoa=???
GO
CREATE PROCEDURE SP_CapNhatTruongKhoa
	@TruongKhoa CHAR(3),
	@MaKhoa CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiKhoa(@MaKhoa) = -1)
	BEGIN
		RAISERROR(N'Khoa %s không tồn tại',15,1,@MaKhoa)
		RETURN
	END

	IF(dbo.FN_TonTaiGiaoVien(@TruongKhoa) = -1)
	BEGIN
		RAISERROR(N'Giáo viên không tồn tại',15,1,@TruongKhoa)
		RETURN
	END

	IF NOT EXISTS(SELECT 1 
				  FROM BOMON BM
				  JOIN GIAOVIEN GV ON BM.MABM = GV.MAGV
				  WHERE GV.MAGV = @TruongKhoa AND BM.MAKHOA = @MaKhoa)
	BEGIN
		RAISERROR(N'Giáo viên %s không phải người trong khoa %s',15,1,@TruongKhoa,@MaKhoa)
		RETURN
	END

	IF EXISTS(SELECT 1 FROM BOMON WHERE TRUONGBM = @TruongKhoa)
	BEGIN
		RAISERROR(N'Giáo viên %s đang làm trưởng bộ môn',15,1,@TruongKhoa)
		RETURN
	END

	IF EXISTS(SELECT 1 FROM GIAOVIEN WHERE GVQLCM = @TruongKhoa)
	BEGIN
		RAISERROR(N'Giáo viên %s đang làm giáo viên quản lí chuyên môn',15,1,@TruongKhoa)
		RETURN
	END

	UPDATE KHOA
	SET TRUONGKHOA = @TruongKhoa
	WHERE MAKHOA = @MaKhoa
END
GO
--5. Viết stored đếm số lượng công việc có kết quả “Đạt” của mỗi đề tài
GO
CREATE FUNCTION FN_SoLuongCongViecDat(
    @MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
    IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
    BEGIN
        RETURN -1
    END

    DECLARE @SoLuongCongViec INT;

    -- Tập xài CTE
    WITH CongViecCuaDeTai AS (
        SELECT STT
        FROM THAMGIADETAI
        WHERE MADT = @MaDT AND KETQUA LIKE N'Đạt'
        GROUP BY STT
    )
    SELECT @SoLuongCongViec = COUNT(*) FROM CongViecCuaDeTai

    RETURN @SoLuongCongViec
END
GO
--6. Viết stored đếm số lượng công việc có kết quả: “Không đạt” của mỗi đề tài
GO
CREATE FUNCTION FN_SoLuongCongViecKhongDat(
    @MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
    IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
    BEGIN
        RETURN -1
    END

    DECLARE @SoLuongCongViec INT;

    -- Tập xài CTE
    WITH CongViecCuaDeTai AS (
        SELECT STT
        FROM THAMGIADETAI
        WHERE MADT = @MaDT AND KETQUA LIKE N'Không Đạt'
        GROUP BY STT
    )
    SELECT @SoLuongCongViec = COUNT(*) FROM CongViecCuaDeTai

    RETURN @SoLuongCongViec
END
GO
--7. Viết stored đếm số lượng công việc chưa có kết quả: “NULL” của mỗi đề tài
GO 
CREATE FUNCTION FN_SoLuongCongViecNull(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
    BEGIN
        RETURN -1
    END

	DECLARE @SoLuongCongViec INT;

	WITH CongViecCuaDeTai AS (
		SELECT CV.STT
		FROM THAMGIADETAI TGDT
		RIGHT JOIN CONGVIEC CV ON TGDT.MADT = CV.MADT
		WHERE TGDT.KETQUA IS NULL AND TGDT.MADT = @MaDT
		GROUP BY CV.STT
	)
	SELECT @SoLuongCongViec = COUNT(*) FROM CongViecCuaDeTai

	RETURN @SoLuongCongViec
END
GO

CREATE FUNCTION FN_TongSoCV(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
    BEGIN
        RETURN -1
    END

	DECLARE @SoLuongCongViec INT;

	WITH CongViecCuaDeTai AS(
		SELECT DT.MADT,CV.STT
		FROM DETAI DT
		LEFT JOIN CONGVIEC CV ON DT.MADT = CV.MADT
	)

	SELECT @SoLuongCongViec = COUNT(*) FROM CongViecCuaDeTai WHERE MADT = @MaDT AND STT IS NOT NULL
	RETURN @SoLuongCongViec
END
GO
--8. Với mỗi đề tài đã kết thúc, xuất kết quả nghiệm thu đề tài:
--• Mã đề tài:
--• Tỷ lệ đạt:
--• Tỷ lệ không đạt:
--• Tỷ lệ chưa hoàn thành (NULL):
--• XẾP LOẠI ĐỀ TÀI: (GIỎI: 100% đạt; KHÁ: 80% đạt và không có công việc nào chưa hoàn
--thành; TRUNG BÌNH: 70% đạt, 30% không đạt, không có công việc chưa hoàn thành;
--FAILED: <=50% đạt và còn công việc chưa hoàn thành)
GO
CREATE PROCEDURE SP_KetQuaNghiemThuDeTai
AS BEGIN
	SELECT
		DT.MADT,
		1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) AS TyLeDat,
		1.0*dbo.FN_SoLuongCongViecKhongDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) AS TyLeKhongDat,
		1.0*dbo.FN_SoLuongCongViecNull(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) AS TyLeChuaHoanThanh,
		(CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 1 THEN N'Giỏi'
			  
			  WHEN 1.0*dbo.FN_SoLuongCongViecKhongDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) >= 0.8
			  AND 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) < 1
			  AND 1.0*dbo.FN_SoLuongCongViecNull(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 0 THEN N'Khá'
			  
			  WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) >= 0.7
			  AND 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) < 0.8
			  AND 1.0*dbo.FN_SoLuongCongViecNull(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 0 THEN N'Trung bình'
			  
			  WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) > 0.5
			  AND 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) < 0.7 
			  AND 1.0*dbo.FN_SoLuongCongViecNull(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 0 THEN N'Yếu'
			  
			  ELSE N'FAILED' END) AS XepLoai
	FROM DETAI DT
	JOIN CONGVIEC CV ON DT.MADT = CV.MADT
	LEFT JOIN THAMGIADETAI TGDT ON TGDT.MADT = DT.MADT
	WHERE DT.NGAYKT < GETDATE()
	GROUP BY DT.MADT
END
GO
EXEC dbo.SP_KetQuaNghiemThuDeTai
--9. Viết store phân công 1 giáo viên chủ nhiệm 1 đề tài cụ thể với điều kiện: Tại thời điểm phân
--công, giáo viên chỉ được chủ nhiệm tối đa 3 đề tài (kể cả đề tài chưa kết thúc).
GO
CREATE PROCEDURE SP_PhanCongChuNhiem
	@MaGV CHAR(3),
	@MaDT CHAR(3),
	@NgayBD DATETIME
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF EXISTS(SELECT 1 FROM DETAI WHERE MADT = @MaDT AND GVCNDT = @MaGV)
	BEGIN
		RAISERROR(N'Giáo viên %s đang chủ nhiệm đề tài này',15,1,@MaGV)
		RETURN
	END

	DECLARE @SoDTCN INT
	SELECT @SoDTCN = COUNT(*) FROM DETAI WHERE GVCNDT = @MaGV AND NGAYKT > @NgayBD

	IF(3 <= @SoDTCN)
	BEGIN
		RAISERROR(N'Giáo viên %s đang chủ nhiệm quá số đề tài cho phép',15,1,@MaGV)
		RETURN
	END

	UPDATE DETAI
	SET GVCNDT = @MaGV
	WHERE MADT = @MaDT
END
GO
--10.Viết stored đếm số lượng giảng viên nam, nữ của mỗi đề tài
GO
CREATE FUNCTION FN_SoLuongGVNamMoiDeTai(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoGVNam INT
	SELECT @SoGVNam = COUNT(DISTINCT CASE WHEN GV.PHAI LIKE N'Nam' THEN GV.MAGV ELSE NULL END)
	FROM DETAI DT
	LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
	LEFT JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
	WHERE DT.MADT = @MaDT

	RETURN @SoGVNam
END

GO
CREATE FUNCTION FN_SoLuongGVNuMoiDeTai(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoGVNu INT
	SELECT @SoGVNu = COUNT(DISTINCT CASE WHEN GV.PHAI LIKE N'Nữ' THEN GV.MAGV ELSE NULL END)
	FROM DETAI DT
	LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
	LEFT JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
	WHERE DT.MADT = @MaDT

	RETURN @SoGVNu
END

GO
CREATE PROCEDURE SP_DemSoGVNamNuMoiDeTai
	@MaDT CHAR(3)
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	SELECT DT.MADT,dbo.FN_SoLuongGVNamMoiDeTai(DT.MADT) AS SoGVNam,dbo.FN_SoLuongGVNuMoiDeTai(DT.MADT) AS SoGVNu 
	FROM DETAI DT
	LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
	LEFT JOIN GIAOVIEN GV ON TGDT.MAGV = GV.MAGV
	WHERE DT.MADT = @MaDT
	GROUP BY DT.MADT
END
GO
EXEC dbo.SP_DemSoGVNamNuMoiDeTai '002'
--11.Viết stored xuất danh sách các bộ môn có nhiều đề tài loại giỏi nhất
GO
CREATE PROCEDURE SP_BoMonCoNhieuDeTaiLoaiGioiNhat
AS BEGIN
	SELECT GV.MABM,COUNT(DISTINCT CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 1 THEN 1 ELSE NULL END) AS SoDTLoaiGioi
	FROM DETAI DT
	JOIN CONGVIEC CV ON DT.MADT = CV.MADT
	JOIN GIAOVIEN GV ON DT.GVCNDT = GV.MAGV
	LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT
	GROUP BY GV.MABM
	HAVING COUNT(DISTINCT CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT.MADT)/dbo.FN_TongSoCV(DT.MADT) = 1 THEN 1 ELSE NULL END)
	>= ALL (SELECT COUNT(DISTINCT CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(DT1.MADT)/dbo.FN_TongSoCV(DT1.MADT) = 1 THEN 1 ELSE NULL END)
			FROM DETAI DT1
			JOIN CONGVIEC CV1 ON DT1.MADT = CV1.MADT
			JOIN GIAOVIEN GV1 ON DT1.GVCNDT = GV1.MAGV
			LEFT JOIN THAMGIADETAI TGDT1 ON DT1.MADT = TGDT1.MADT
			GROUP BY GV1.MABM)
END
GO
EXEC dbo.SP_BoMonCoNhieuDeTaiLoaiGioiNhat

--12.Viết stored phân công công việc cho 1 giáo viên, với điều kiện giáo viên chỉ được phụ trách
--tối đa 3 công việc (kể cả công việc chưa hoàn thành). Tức là nếu thời điểm phân công, giảng
--viên đã được phân công 2 công việc và chưa hoàn thành thì chỉ được nhận thêm 1 công việc.
--Nếu các công việc phân công trước đó đã hoàn thành (kết quả đạt) thì được phép phân công
--thêm 3 công việc khác.
GO
CREATE PROCEDURE SP_PhanCongCongViecKhoHon
	@MaGV CHAR(3),
	@MaDT CHAR(3),
	@STT INT,
	@PhuCap FLOAT,
	@KetQua NVARCHAR(30)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF(dbo.FN_TonTaiCongViecTrongDeTai(@STT,@MaDT) = -1)
	BEGIN
		RAISERROR(N'Công việc %d không tồn tại trong đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	IF EXISTS(SELECT 1 FROM THAMGIADETAI WHERE MADT = @MaDT AND MAGV = @MaGV AND STT = @STT)
	BEGIN
		RAISERROR(N'Không phân công trùng',15,1)
		RETURN
	END

	DECLARE @SoCongViecChuaHoanThanh INT
	SELECT @SoCongViecChuaHoanThanh = dbo.FN_SoLuongCongViecNull(MADT)
	FROM THAMGIADETAI
	WHERE MAGV = @MaGV

	IF(3 <= @SoCongViecChuaHoanThanh)
	BEGIN
		RAISERROR(N'Còn công việc chưa hoàn thành',15,1)
		RETURN
	END

	INSERT INTO THAMGIADETAI
	VALUES (@MaGV,@MaDT,@STT,@PhuCap,@KetQua)
	PRINT N'Thành công'
END
GO
--13.Viết stored thực hiện phân công 1 nhân sự cho 1 công việc của đề tài, với điều kiện: đề tài
--cấp trường chỉ có tối đa 2 giảng viên; đề tài cấp dhqg có tối đa 4 giảng viên, đề tài cấp nhà
--nước có tối đa 7gv tham gia.
GO
CREATE PROCEDURE SP_PhanCongCoXetCapQL
	@MaGV CHAR(3),
	@MaDT CHAR(3),
	@STT INT,
	@PhuCap FLOAT,
	@KetQua NVARCHAR(30)
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RAISERROR(N'Giáo viên %s không tồn tại',15,1,@MaGV)
		RETURN
	END

	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RAISERROR(N'Đề tài %s không tồn tại',15,1,@MaDT)
		RETURN
	END

	IF(dbo.FN_TonTaiCongViecTrongDeTai(@STT,@MaDT) = -1)
	BEGIN
		RAISERROR(N'Công việc %d không tồn tại trong đề tài %s',15,1,@STT,@MaDT)
		RETURN
	END

	IF EXISTS(SELECT 1 FROM THAMGIADETAI WHERE MADT = @MaDT AND MAGV = @MaGV AND STT = @STT)
	BEGIN
		RAISERROR(N'Không phân công trùng',15,1)
		RETURN
	END

	DECLARE @SoGV INT,
			@CapQL NVARCHAR(30)
	SELECT @SoGV = COUNT(DISTINCT TGDT.MAGV),@CapQL = CAPQL
	FROM THAMGIADETAI TGDT
	JOIN DETAI DT ON TGDT.MADT = DT.MADT
	WHERE @MaDT = TGDT.MADT
	GROUP BY DT.CAPQL

	IF((@SoGV >= 2 AND @CapQL LIKE N'TRƯỜNG')
	OR (@SoGV >= 4 AND @CapQL LIKE N'ĐHQG')
	OR (@SoGV >= 7 AND @CapQL LIKE N'NHÀ NƯỚC'))
	BEGIN
		RAISERROR(N'Quá số giáo viên qui định',15,1)
		RETURN
	END

	INSERT INTO THAMGIADETAI
	VALUES (@MaGV,@MaDT,@STT,@PhuCap,@KetQua)
END
GO
EXEC dbo.SP_PhanCongCoXetCapQL '010','002',5,NULL,NULL
--14.Viết stored cho biết năm vừa qua, mỗi chủ đề nghiên cứu có bao nhiêu đề tài thực hiện
GO
CREATE PROCEDURE SP_SoDeTaiMoiChuDe
AS BEGIN
	SELECT CD.MACD,COUNT(CASE WHEN YEAR(DT.NGAYBD) = YEAR(GETDATE()) THEN DT.MADT ELSE NULL END) AS SoDeTai
	FROM CHUDE CD
	JOIN DETAI DT ON CD.MACD = DT.MACD
	GROUP BY CD.MACD
END
GO
EXEC dbo.SP_SoDeTaiMoiChuDe
--15.Viết stored thực hiện báo cáo:
--• BÁO CÁO TÌNH HÌNH NGHIÊN CỨU TRONG NĂM QUA
--• Tên bộ môn:
--- Số lượng GV có tham gia đề tài
--- Số lượng GV không tham gia đề tài
--- Số lượng đề tài loại Giỏi
--- Số lượng đề tài loại khá
-----------------------------------------------------
--• Tên bộ môn:
--- Số lượng GV có tham gia đề tài
--- Số lượng GV không tham gia đề tài
--- Số lượng đề tài loại Giỏi
--- Số lượng đề tài loại khá
--➔ BỘ MÔN CÓ NHIỀU ĐỀ TÀI LOẠI GIỎI NHẤT:
--Cách 1: Không dùng con trỏ
	SET ANSI_WARNINGS OFF
	GO
CREATE PROCEDURE SP_BaoCaoKhongDungConTro
AS BEGIN
    PRINT N'• BÁO CÁO TÌNH HÌNH NGHIÊN CỨU TRONG NĂM QUA' + CHAR(13) + CHAR(10)
    
    DECLARE @SoGVTGDT INT,
            @SoGVKTGDT INT,
            @SoDeTaiGioi INT,
            @SoDeTaiKha INT,
            @SoBoMon INT,
            @i INT,
            @MaBM VARCHAR(5),
            @TenBM NVARCHAR(50),
            @ThongTin NVARCHAR(1000),
            @MaxSoDTGioi INT

    SET @MaxSoDTGioi = 0
    SELECT @SoBoMon = COUNT(*) FROM BOMON
    SET @i = 0
    WHILE (@i < @SoBoMon)
    BEGIN
        SELECT
            @MaBM = BM.MABM,
            @TenBM = BM.TENBM,
            @SoGVTGDT = COUNT(DISTINCT CASE WHEN TGDT.MAGV IS NOT NULL THEN TGDT.MAGV ELSE NULL END),
            @SoGVKTGDT = COUNT(DISTINCT CASE WHEN TGDT.MAGV IS NULL THEN TGDT.MAGV ELSE NULL END),
            @SoDeTaiGioi = COUNT(DISTINCT CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(TGDT.MADT)/dbo.FN_TongSoCV(TGDT.MADT) = 1 
                                THEN TGDT.MADT ELSE NULL END),
            @SoDeTaiKha = COUNT(DISTINCT CASE WHEN (1.0*dbo.FN_SoLuongCongViecKhongDat(TGDT.MADT)/dbo.FN_TongSoCV(TGDT.MADT) >= 0.8
                                AND 1.0*dbo.FN_SoLuongCongViecDat(TGDT.MADT)/dbo.FN_TongSoCV(TGDT.MADT) < 1
                                AND 1.0*dbo.FN_SoLuongCongViecNull(TGDT.MADT)/dbo.FN_TongSoCV(TGDT.MADT) = 0) 
                                THEN TGDT.MADT ELSE NULL END)
        FROM BOMON BM
        LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
        LEFT JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV
        GROUP BY BM.MABM,BM.TENBM
        ORDER BY BM.MABM ASC OFFSET @i ROWS FETCH NEXT 1 ROWS ONLY

        SET @ThongTin = N'• Tên bộ môn: ' + @TenBM + CHAR(13) + CHAR(10) +
                        N'- Số lượng GV có tham gia đề tài: ' + CAST(@SoGVTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng GV không tham gia đề tài: ' + CAST(@SoGVKTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng đề tài loại Giỏi: ' + CAST(@SoDeTaiGioi  AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng đề tài loại khá: '  + CAST(@SoDeTaiKha AS varchar(10)) + CHAR(13) + CHAR(10)

        IF(@i < @SoBoMon)
        BEGIN
            SET @ThongTin += '---------------------------------------------------' + CHAR(13) + CHAR(10)
        END

        PRINT @ThongTin

        IF(@MaxSoDTGioi < @SoDeTaiGioi)
        BEGIN
            SET @MaxSoDTGioi = @SoDeTaiGioi
        END

        SET @i = @i + 1
    END

    PRINT N'➔ BỘ MÔN CÓ NHIỀU ĐỀ TÀI LOẠI GIỎI NHẤT:'

    SET @i = 0
    WHILE (@i < @SoBoMon)
    BEGIN
        SELECT
            @MaBM = BM.MABM,
            @TenBM = BM.TENBM,
            @SoDeTaiGioi = COUNT(DISTINCT CASE WHEN 1.0*dbo.FN_SoLuongCongViecDat(TGDT.MADT)/dbo.FN_TongSoCV(TGDT.MADT) = 1 
                                THEN TGDT.MADT ELSE NULL END)
        FROM BOMON BM
        LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
        LEFT JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV
        GROUP BY BM.MABM,BM.TENBM
        ORDER BY BM.MABM ASC OFFSET @i ROWS FETCH NEXT 1 ROWS ONLY

        IF(@SoDeTaiGioi = @MaxSoDTGioi)
        BEGIN
            PRINT N'Mã Bộ môn: ' + @MaBM + N' Tên bộ môn: ' + @TenBM + N' Số đề tài giỏi: ' + CAST(@SoDeTaiGioi AS CHAR(10)) + CHAR(13) + CHAR(10)
        END

        SET @i = @i + 1
    END
END
GO
EXEC dbo.SP_BaoCaoKhongDungConTro
--Cách 2: Dùng con trỏ
GO
CREATE PROCEDURE SP_BaoCaoDungConTro
AS BEGIN
	PRINT N'• BÁO CÁO TÌNH HÌNH NGHIÊN CỨU TRONG NĂM QUA' + CHAR(13) + CHAR(10)

	DECLARE @MaBM VARCHAR(5),
			@TenBM NVARCHAR(50),
			@SoGVTGDT INT,
			@SoGVKTGDT INT,
			@SoDeTaiGioi INT,
			@SoDeTaiKha INT,
			@ThongTin NVARCHAR(1000),
			@MaxSoDTGioi INT

    SET @MaxSoDTGioi = 0

	DECLARE CurBOMON CURSOR FOR
	SELECT MABM,TENBM FROM BOMON

	OPEN CurBOMON
	
	FETCH NEXT FROM CurBOMON INTO @MaBM,@TenBM

	WHILE @@FETCH_STATUS = 0
	BEGIN
        SELECT
            @SoGVTGDT = COUNT(DISTINCT CASE WHEN TGDT.MAGV IS NOT NULL THEN TGDT.MAGV ELSE NULL END),
            @SoGVKTGDT = COUNT(DISTINCT CASE WHEN TGDT.MAGV IS NULL THEN TGDT.MAGV ELSE NULL END),
            @SoDeTaiGioi = COUNT(DISTINCT CASE WHEN 1.0 * dbo.FN_SoLuongCongViecDat(TGDT.MADT) / dbo.FN_TongSoCV(TGDT.MADT) = 1 
                                THEN TGDT.MADT ELSE NULL END),
            @SoDeTaiKha = COUNT(DISTINCT CASE WHEN (1.0 * dbo.FN_SoLuongCongViecKhongDat(TGDT.MADT) / dbo.FN_TongSoCV(TGDT.MADT) >= 0.8
                                AND 1.0 * dbo.FN_SoLuongCongViecDat(TGDT.MADT) / dbo.FN_TongSoCV(TGDT.MADT) < 1
                                AND 1.0 * dbo.FN_SoLuongCongViecNull(TGDT.MADT) / dbo.FN_TongSoCV(TGDT.MADT) = 0) 
                                THEN TGDT.MADT ELSE NULL END)
        FROM BOMON BM
        LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
        LEFT JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV
        WHERE BM.MABM = @MaBM
        GROUP BY BM.MABM, BM.TENBM

        SET @ThongTin = N'• Tên bộ môn: ' + @TenBM + CHAR(13) + CHAR(10) +
                        N'- Số lượng GV có tham gia đề tài: ' + CAST(@SoGVTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng GV không tham gia đề tài: ' + CAST(@SoGVKTGDT AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng đề tài loại Giỏi: ' + CAST(@SoDeTaiGioi  AS VARCHAR(10)) + CHAR(13) + CHAR(10) +
                        N'- Số lượng đề tài loại khá: '  + CAST(@SoDeTaiKha AS varchar(10)) + CHAR(13) + CHAR(10) +
                        '---------------------------------------------------' + CHAR(13) + CHAR(10)

        PRINT @ThongTin

		IF(@MaxSoDTGioi < @SoDeTaiGioi)
		BEGIN
			SET @MaxSoDTGioi = @SoDeTaiGioi
		END

		FETCH NEXT FROM CurBOMON INTO @MaBM,@TenBM
		END

		CLOSE CurBOMON
		DEALLOCATE CurBOMON

		DECLARE CurBOMON CURSOR FOR
	SELECT MABM,TENBM FROM BOMON

	OPEN CurBOMON
	
	FETCH NEXT FROM CurBOMON INTO @MaBM,@TenBM

	PRINT N'➔ BỘ MÔN CÓ NHIỀU ĐỀ TÀI LOẠI GIỎI NHẤT:'

	WHILE @@FETCH_STATUS = 0
	BEGIN
        SELECT
            @SoDeTaiGioi = COUNT(DISTINCT CASE WHEN 1.0 * dbo.FN_SoLuongCongViecDat(TGDT.MADT) / dbo.FN_TongSoCV(TGDT.MADT) = 1 
                                THEN TGDT.MADT ELSE NULL END)
        FROM BOMON BM
        LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
        LEFT JOIN THAMGIADETAI TGDT ON TGDT.MAGV = GV.MAGV
        WHERE BM.MABM = @MaBM
        GROUP BY BM.MABM, BM.TENBM

		IF(@SoDeTaiGioi = @MaxSoDTGioi)
        BEGIN
            PRINT N'Mã Bộ môn: ' + @MaBM + N' Tên bộ môn: ' + @TenBM + N' Số đề tài giỏi: ' + CAST(@SoDeTaiGioi AS CHAR(10)) + CHAR(13) + CHAR(10)
        END

		FETCH NEXT FROM CurBOMON INTO @MaBM,@TenBM
	END
		CLOSE CurBOMON
		DEALLOCATE CurBOMON
END
GO

EXEC dbo.SP_BaoCaoDungConTro
--16.Thêm cột tổng hệ số phụ cấp vào bảng giảng viên. Thực hiện cập nhật hệ số phụ cấp cho tất
--cả giảng viên như sau:
--• Tổng hệ số Phụ cấp = tổng hệ số phụ cấp của giảng viên trong mỗi công việc của đề tài
--+ hệ số chức vụ
--• Hệ số chức vụ chỉ lấy hệ số cao nhất trong các hệ số kiêm nhiệm:
--1. Trưởng bộ môn: 1.1
--2. Chủ nhiệm đề tài: 1.2
--3. Trưởng Khoa: 1.3
ALTER TABLE GIAOVIEN
ADD TONGPHUCAP FLOAT
GO
CREATE PROCEDURE SP_CapNhatHeSoPhuCap
AS BEGIN
	DECLARE @MaGV CHAR(3),
			@MaBM VARCHAR(5),
			@TongPhuCap FLOAT

	SET @TongPhuCap = 0
	DECLARE CurGiaoVien CURSOR FOR
	SELECT MAGV FROM GIAOVIEN

	OPEN CurGiaoVien

	FETCH NEXT FROM CurGiaoVien INTO @MaGV
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF EXISTS(SELECT 1 FROM THAMGIADETAI WHERE @MaGV = MAGV)
		BEGIN
			SET @TongPhuCap += (SELECT SUM(PHUCAP) FROM THAMGIADETAI WHERE MAGV = @MaGV) 
		END

		IF EXISTS(SELECT 1 FROM BOMON WHERE TRUONGBM = @MaGV)
		BEGIN
			SET @TongPhuCap += 1.1
		END

		IF EXISTS(SELECT 1 FROM DETAI WHERE GVCNDT = @MaGV)
		BEGIN
			SET @TongPhuCap += 1.2
		END

		IF EXISTS(SELECT 1 FROM KHOA WHERE TRUONGKHOA = @MaGV)
		BEGIN
			SET @TongPhuCap += 1.3
		END

		UPDATE GIAOVIEN
		SET TONGPHUCAP = @TongPhuCap
		WHERE MAGV = @MaGV

		FETCH NEXT FROM CurGiaoVien INTO @MaGV
	END

	CLOSE CurGiaoVien
	DEALLOCATE CurGiaoVien
END
GO
EXEC dbo.SP_CapNhatHeSoPhuCap
SELECT * FROM GIAOVIEN
ALTER TABLE GIAOVIEN
DROP COLUMN TONGPHUCAP
--FUNCTION
--17.Viết function cho các câu 5,6,7,10
--Đã viết
--18.Viết function cho biết 1 magv có bao nhiêu số điện thoại
GO
CREATE FUNCTION FN_DemSoSDT(
	@MaGV CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoSDT INT
	SELECT @SoSDT = COUNT(*) FROM GV_DT WHERE MAGV = @MaGV
	RETURN @SoSDT
END
GO
PRINT dbo.FN_DemSoSDT('001')
--19.Viết function cho biết số lượng giảng viên của 1 mã đề tài
GO
CREATE FUNCTION FN_SoGVMotDeTai(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoDT INT
	SET @SoDT = (SELECT COUNT(DISTINCT TGDT.MAGV) FROM DETAI DT LEFT JOIN THAMGIADETAI TGDT ON DT.MADT = TGDT.MADT WHERE DT.MADT = @MaDT)

	RETURN @SoDT
END
GO
PRINT dbo.FN_SoGVMotDeTai('001')
--20.Viết function đếm số đề tài tham gia của 1 magv
GO
CREATE FUNCTION FN_SoDeTaiThamGia(
	@MaGV CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoDTTG INT
	SET @SoDTTG = (SELECT COUNT(DISTINCT TGDT.MADT) FROM GIAOVIEN GV LEFT JOIN THAMGIADETAI TGDT ON GV.MAGV = TGDT.MAGV WHERE GV.MAGV = @MaGV)

	RETURN @SoDTTG
END
GO
PRINT dbo.FN_SoDeTaiThamGia('001')
--21.Viết function đếm số công việc của 1 madt
GO
CREATE FUNCTION FN_SoCongViecCuaDeTai(
	@MaDT CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoCV INT
	SET @SoCV = (SELECT COUNT(CV.STT) FROM DETAI DT LEFT JOIN CONGVIEC CV ON DT.MADT = CV.MADT WHERE DT.MADT = @MaDT)

	RETURN @SoCV
END
GO
PRINT dbo.FN_SoCongViecCuaDeTai('004')
--22.Viết function đếm số đề tài của 1 makhoa
GO
CREATE FUNCTION FN_SoDeTaiCuaKhoa(
	@MaKhoa VARCHAR(5)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiKhoa(@MaKhoa) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoDT INT
	SET @SoDT = (SELECT COUNT(DISTINCT DT.MADT) 
				 FROM KHOA KH 
				 LEFT JOIN BOMON BM ON KH.MAKHOA = BM.MAKHOA
				 LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
				 LEFT JOIN DETAI DT ON GV.MAGV = DT.GVCNDT
				 WHERE KH.MAKHOA = @MaKhoa)

	RETURN @SoDT
END
GO
PRINT dbo.FN_SoDeTaiCuaKhoa('CNTT')
--23.Viết function đếm số đề tài chủ nhiệm của 1 magv
GO
CREATE FUNCTION FN_SoDeTaiChuNhiemCuaGiaoVien(
	@MaGV CHAR(3)
)
RETURNS INT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @SoDTCN INT
	SET @SoDTCN = (SELECT COUNT(DT.MADT) FROM GIAOVIEN GV LEFT JOIN DETAI DT ON GV.MAGV = DT.GVCNDT WHERE GV.MAGV = @MaGV)

	RETURN @SoDTCN
END
GO
PRINT dbo.FN_SoDeTaiChuNhiemCuaGiaoVien('002')
--ÔN TẬP
--24.Viết stored xuất danh sách (magv, ho ten, ten bo mon) của các giảng
--viên tham gia trên 3 đề tài (sử dụng câu 20)
GO
CREATE PROCEDURE SP_XuatGVTren3DT
AS BEGIN
	SELECT*
	FROM GIAOVIEN
	WHERE dbo.FN_SoDeTaiThamGia(MAGV) > 3
END
GO
EXEC dbo.SP_XuatGVTren3DT
--25.Viết stored xuất danh sách (magv, họ tên, số đề tài tham gia) của mỗi
--giảng viên (sử dụng câu 20)
GO
CREATE PROCEDURE SP_XuatCoSoDTTG
AS BEGIN
	SELECT MAGV,HOTEN,dbo.FN_SoDeTaiThamGia(MAGV) AS SoDTTG
	FROM GIAOVIEN
END
GO
EXEC dbo.SP_XuatCoSoDTTG
--26. Viết stored xuất danh sách (magv, họ tên, phụ cấp) cho các giảng viên có
--Tham gia đề tài như sau: phụ cấp = số đề tài * 0.75 (dùng câu 23)
GO
CREATE PROCEDURE SP_XuatCoPhuCap
AS BEGIN
	SELECT GV.MAGV,GV.HOTEN,0.75*COUNT(DISTINCT TGDT.MADT) AS PHUCAP
	FROM THAMGIADETAI TGDT
	JOIN GIAOVIEN GV ON TGDT.MAGV= GV.MAGV
	GROUP BY GV.MAGV,GV.HOTEN
END
GO
EXEC dbo.SP_XuatCoPhuCap
--27.Viết stored xuất danh sách (magv, họ tên, số đề tài chủ nhiệm, phụ cấp)
--Cho các giảng viên chủ nhiệm đề tài: phụ cấp = số đề tài chủ nhiệm *1.2 (23)
GO
CREATE PROCEDURE SP_XuatCoPhuCapTheoCN
AS BEGIN
	SELECT GV.MAGV,GV.HOTEN,COUNT(DT.MADT) AS SODT,COUNT(DT.MADT)*1.2 AS PHUCAP
	FROM GIAOVIEN GV
	JOIN DETAI DT ON GV.MAGV = DT.GVCNDT
	GROUP BY GV.MAGV,GV.HOTEN
END
GO
EXEC dbo.SP_XuatCoPhuCapTheoCN
GO

--4.8. Viết các Trigger
--T1. Tên đề tài phải duy nhất
GO
CREATE TRIGGER TG_INSERT_TenDeTaiLaDuyNhat 
ON DETAI
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1 
			  FROM inserted I
			  WHERE(SELECT COUNT(*)
					FROM DETAI DT
					WHERE DT.TENDT = I.TENDT) > 1)
	BEGIN
		RAISERROR(N'Tên đề tài phải là duy nhất',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T2. Trưởng bộ môn phải sinh trước 1975
GO
CREATE TRIGGER TG_INSERT_TruongBoMonSinhTruoc1975
ON BOMON
FOR INSERT,UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN GV
						   WHERE GV.MAGV = I.TRUONGBM AND YEAR(GV.NGSINH) >= 1975))
	BEGIN
		RAISERROR(N'Trưởng bộ môn phải sinh trước 1975',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T3. Một bộ môn có tối thiểu 1 giáo viên nữ
GO
CREATE TRIGGER TG_DELETE_MotBoMonCoToiThieuMotGVNu
ON GIAOVIEN
FOR DELETE,UPDATE
AS BEGIN
	IF NOT EXISTS(SELECT 1
				  FROM deleted D
				  WHERE EXISTS (SELECT 1
								FROM GIAOVIEN GV
								WHERE GV.PHAI LIKE N'Nữ' AND GV.MABM = D.MABM))
	BEGIN
		RAISERROR(N'Bộ môn phải có tối thiểu 1 giáo viên nữ',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T4. Một giáo viên phải có ít nhất 1 số điện thoại
GO
CREATE TRIGGER TG_DELETE_GVCoItNhat1SoDienThoai
ON GV_DT
FOR DELETE,UPDATE
AS BEGIN
	IF NOT EXISTS(SELECT 1
				  FROM deleted D
				  WHERE EXISTS(SELECT 1
							   FROM GV_DT GVDT
							   WHERE GVDT.MAGV = D.MAGV))
	BEGIN
		RAISERROR(N'Mỗi giáo viên có ít nhất 1 số điện thoại',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T5. Một giáo viên có tối đa 3 số điện thoại
GO
CREATE TRIGGER TG_INSERT_GVCoToiDa3SoDienThoai
ON GV_DT
FOR INSERT,UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE (SELECT COUNT(GVDT.DIENTHOAI)
					 FROM GV_DT GVDT
					 WHERE GVDT.MAGV = I.MAGV) > 3)
	BEGIN
		RAISERROR(N'Giáo viên có tối đa 3 số điện thoại',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T6. Một bộ môn phải có tối thiểu 4 giáo viên
GO
CREATE TRIGGER TG_DELETE_MotBoMonToiThieu4GiaoVien
ON GIAOVIEN
FOR DELETE,UPDATE
AS BEGIN
	IF EXISTS ( SELECT 1
				FROM deleted D
				WHERE ( SELECT COUNT(GV.MAGV)
						FROM BOMON BM
						LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
						WHERE BM.MABM = D.MABM) < 4)
	BEGIN
		RAISERROR(N'Một bộ môn tối thiểu có 4 giáo viên',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T7. Trưởng bộ môn phải là người lớn tuổi nhất trong bộ môn.
GO
CREATE TRIGGER TG_INSERT_TruongBoMonLonTuoiNhat
ON BOMON
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  JOIN GIAOVIEN GV ON I.TRUONGBM = GV.MAGV
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN GV1
						   WHERE GV1.MABM = I.MABM AND DATEDIFF(DAY,GV1.NGSINH,GV.NGSINH) > 0))
	BEGIN
		RAISERROR(N'Trưởng bộ môn phải lớn tuổi nhất trong bộ môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T8. Nếu một giáo viên đã là trưởng bộ môn thì giáo viên đó không làm người quản lý chuyên
--môn.
GO
CREATE TRIGGER TG_INSERT_KhongDongThoiLaGVQLCMvaTruongBoMon
ON BOMON
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN
						   WHERE GVQLCM = TRUONGBM))
	BEGIN
		RAISERROR(N'Trưởng bộ môn không được làm người quản lý chuyên môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
CREATE TRIGGER TG_INSERT_KhongDongThoiLaGVQLCMvaTruongBoMon2
ON GIAOVIEN
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS(SELECT 1
						   FROM BOMON
						   WHERE GVQLCM = TRUONGBM))
	BEGIN
		RAISERROR(N'Giáo viên quản lí chuyên môn không thể là trưởng bộ môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T9. Giáo viên và giáo viên quản lý chuyên môn của giáo viên đó phải thuộc về 1 bộ môn.
GO
CREATE TRIGGER TG_INSERT_GvqlcmVaGVThuocCungBoMon
ON GIAOVIEN
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS( SELECT 1
							FROM GIAOVIEN GV
							WHERE (GV.GVQLCM = I.MAGV OR I.GVQLCM = GV.MAGV) AND GV.MABM <> I.MABM))
	BEGIN
		RAISERROR(N'Giáo viên quản lý chuyên môn của giáo viên phải cùng bộ môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T10.Mỗi giáo viên chỉ có tối đa 1 vợ chồng
--???
--T11.Giáo viên là Nam thì chỉ có vợ là Nữ hoặc ngược lại.
--????
--T12.Nếu thân nhân có quan hệ là “con gái” hoặc “con trai” với giáo viên thì năm sinh của giáo
--viên phải nhỏ hơn năm sinh của thân nhân.
--???
--T13.Một giáo viên chỉ làm chủ nhiệm tối đa 3 đề tài.
GO
CREATE TRIGGER TG_INSERT_MotGiaoVienChuNhiemToiDa3DeTai
ON DETAI
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE (SELECT COUNT(DT.MADT)
					 FROM DETAI DT
					 WHERE I.GVCNDT = DT.GVCNDT) > 3)
	BEGIN
		RAISERROR(N'Một giáo viên chủ nhiệm tối đa 3 đề tài',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T14.Một đề tài phải có ít nhất một công việc
GO
CREATE TRIGGER TG_DELETE_MoiDeTaiItNhatMotCongViec
ON CONGVIEC
FOR DELETE, UPDATE
AS BEGIN
	IF NOT EXISTS(SELECT 1 
				  FROM deleted D
				  WHERE EXISTS(SELECT 1
							   FROM CONGVIEC CV
							   WHERE CV.MADT = D.MADT))
	BEGIN
		RAISERROR(N'Một đề tài phải có ít nhất một công việc',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T15.Lương của giáo viên phải nhỏ hơn lương người quản lý của giáo viên đó.
GO
CREATE TRIGGER TG_INSERT_LuongGiaoVienNhoHonGVQLCM
ON GIAOVIEN
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN GV
						   WHERE (GV.MAGV = I.GVQLCM AND GV.LUONG < I.LUONG)
						   OR (GV.GVQLCM = I.MAGV AND GV.LUONG > I.LUONG)))
	BEGIN
		RAISERROR(N'Lương của giáo viên quản lý chuyên môn phải cao hơn lương giáo viên đó',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T16.Lương của trưởng bộ môn phải lớn hơn lương của các giáo viên trong bộ môn.
GO
CREATE TRIGGER TG_INSERT_LuongTruongBoMonLonHonLuongGiaoVien
ON BOMON
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  JOIN GIAOVIEN GV ON I.TRUONGBM = GV.MAGV
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN GV1
						   WHERE GV1.MABM = I.MABM AND GV1.LUONG > GV.LUONG))
	BEGIN
		RAISERROR(N'Lương trưởng bộ môn phải cao lương giáo viên cùng bộ môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T17.Bộ môn ban nào cũng phải có trưởng bộ môn và trưởng bộ môn phải là một giáo viên trong
--trường.
GO
CREATE TRIGGER TG_INSERT_BoMonPhaiCoTruongBoMonVaLa1GiaoVienTrongTruong
ON BOMON
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE I.TRUONGBM IS NULL OR NOT EXISTS(SELECT 1 FROM GIAOVIEN GV WHERE GV.MAGV = I.TRUONGBM))
	BEGIN
		RAISERROR(N'Bộ môn phải có trưởng bộ môn là 1 giáo viên trong trường',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T18.Một giáo viên chỉ quản lý tối đa 3 giáo viên khác.
GO
CREATE TRIGGER TG_INSERT_MotGiaoVienQuanLiToiDa3GiaoVien
ON GIAOVIEN
FOR INSERT,UPDATE
AS BEGIN
	IF EXISTS (
        SELECT 1
        FROM inserted I
        JOIN GIAOVIEN GV ON I.MAGV = GV.GVQLCM
        GROUP BY I.GVQLCM
        HAVING COUNT(GV.MAGV) > 3
    )
	BEGIN
		RAISERROR(N'Giáo viên chỉ được quản lí tối đa 3 giáo viên khác',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--T19.Giáo viên chỉ tham gia những đề tài mà giáo viên chủ nhiệm đề tài là người cùng bộ môn với
--giáo viên đó.
GO
CREATE TRIGGER TG_INSERT_GiaoVienChiThamGiaDeTaiBoMonChuNhiem
ON THAMGIADETAI
FOR INSERT, UPDATE
AS BEGIN
	IF NOT EXISTS(SELECT 1
				  FROM inserted I
				  JOIN GIAOVIEN GV ON I.MAGV = GV.MAGV
				  WHERE EXISTS(SELECT 1 
							   FROM DETAI DT
							   JOIN GIAOVIEN GV1 ON DT.GVCNDT = GV1.MAGV
							   WHERE DT.MADT = I.MADT AND GV1.MABM = GV.MABM))
	BEGIN
		RAISERROR(N'Giáo viên chỉ được tham gia vào đề tài mà bộ môn chủ nhiệm',16,1)
		ROLLBACK TRANSACTION
	END
END
GO

--Bài tập thêm Trigger
--28.Thêm cột số lượng giảng viên tham gia đề tài (SoGV) vào bảng đề tài. Cài ràng buộc kiểm tra:
--• SoGV (madt) = tổng số giảng viên tham gia madt đề tài đó
ALTER TABLE THAMGIADETAI
ADD SoGV INT
SELECT* FROM THAMGIADETAI
GO
CREATE TRIGGER TG_INSERT_TongSoDT
ON THAMGIADETAI
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE I.SoGV <>(SELECT COUNT(DISTINCT TGDT.MAGV)
							  FROM THAMGIADETAI TGDT
							  WHERE TGDT.MADT = I.MADT))
	BEGIN
		RAISERROR(N'Số giáo viên phải bằng tổng số giáo viên tham gia đề tài',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--29.Trưởng bộ môn phải là người thuộc bộ môn, nếu vi phạm báo lỗi và huỷ thao tác
GO
CREATE TRIGGER TG_INSERT_TruongBoMonThuocBoMon
ON BOMON
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  JOIN GIAOVIEN GV ON I.TRUONGBM = GV.MAGV
			  WHERE EXISTS(SELECT 1
						   FROM BOMON BM
						   WHERE BM.TRUONGBM = GV.MAGV AND BM.MABM <> GV.MABM))
	BEGIN
		RAISERROR(N'Trưởng bộ môn phải thuộc bộ môn',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--30.Trưởng khoa phải là người thuộc khoa , nếu vi phạm, báo lỗi và huỷ thao tác
GO
CREATE TRIGGER TG_INSERT_TruongKhoaThuocKhoa
ON KHOA
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  JOIN BOMON BM ON BM.MAKHOA = I.MAKHOA
			  WHERE EXISTS(SELECT 1
						   FROM GIAOVIEN GV1
						   JOIN BOMON BM1 ON GV1.MABM = BM1.MABM
						   WHERE GV1.MAGV = I.TRUONGKHOA AND BM1.MAKHOA <> I.MAKHOA ))
	BEGIN
		RAISERROR(N'Trưởng khoa phải thuộc khoa',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--31.Mỗi giáo viên chỉ lưu giữ tối đa 3 số điện thoại
--ĐÃ LÀM
--32.Mỗi giao viên chỉ tham gia tối đa 2 đề tài
GO
CREATE TRIGGER TG_INSERT_ThamGiaToiDa2DeTai
ON THAMGIADETAI
FOR INSERT,UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE (SELECT COUNT(DISTINCT TGDT.MADT)
					 FROM THAMGIADETAI TGDT
					 WHERE TGDT.MAGV = I.MAGV) > 2)
	BEGIN
		RAISERROR(N'Giáo viên chỉ được tham gia tối đa 2 đề tài',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--33.Ngày bắt đầu công việc của đề tài phải từ sau ngày bắt đầu đề tài trở đi
GO
CREATE TRIGGER TG_INSERT_NgayCongViecSauNgayDeTaiBD
ON CONGVIEC
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE EXISTS(SELECT 1
						   FROM DETAI DT
						   WHERE DT.MADT = I.MADT AND I.NGAYBD < DT.NGAYBD))
	BEGIN
		RAISERROR(N'Ngày bắt đầu của công việc phải sau ngày bắt đầu của đề tài',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--34.Mỗi đề tài chỉ phân rã tối đa 8 công việc
GO
CREATE TRIGGER TG_INSERT_MoiDeTaiToiDa8CongViec
ON CONGVIEC
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE (SELECT COUNT(CV.STT)
					 FROM CONGVIEC CV
					 WHERE I.MADT = CV.MADT) > 8)
	BEGIN
		RAISERROR(N'1 đề tài tối đa 8 công việc',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--35.Trong 1 năm, mỗi khoa chỉ được thực hiện tối đa 4 đề tài do giới hạn ngân sách.
CREATE TRIGGER TG_INSERT_MotNamToiDa4DeTai
ON DETAI
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  JOIN GIAOVIEN GV ON I.GVCNDT = GV.MAGV
			  JOIN BOMON BM ON GV.MABM = BM.MABM
			  WHERE (SELECT COUNT(MADT)
					 FROM DETAI DT
					 JOIN GIAOVIEN GV1 ON DT.GVCNDT = GV1.MAGV
					 JOIN BOMON BM1 ON BM1.MABM = GV1.MABM
					 WHERE BM.MAKHOA = BM1.MAKHOA AND I.GVCNDT = DT.GVCNDT
					 AND YEAR(I.NGAYBD) = YEAR(DT.NGAYBD)) > 4)
	BEGIN
		RAISERROR(N'Mỗi khoa chỉ được đảm nhận tối đa 4 đề tài trong 1 năm',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--36.Giảng viên chỉ được tham gia đề tài thuộc khoa của mình.
--ĐÃ LÀM
--37.Giảng viên chỉ được tham gia đề tài do giảng viên bộ môn mình chủ nhiệm (không tham gia
--đề tài của bộ môn khác)
--ĐÃ LÀM
--38. Mỗi đề tài cấp trường chỉ có tối đa 2 giảng viên tham gia
CREATE TRIGGER TG_INSERT_MoiDeTaiCapTruongToiDa2GV
ON THAMGIADETAI
FOR INSERT, UPDATE
AS BEGIN
	IF EXISTS(SELECT 1
			  FROM inserted I
			  WHERE (SELECT COUNT(DISTINCT TGDT.MAGV)
					 FROM THAMGIADETAI TGDT
					 JOIN DETAI DT ON TGDT.MADT = DT.MADT
					 WHERE DT.CAPQL LIKE N'TRƯỜNG' AND TGDT.MADT = I.MADT
					 AND (I.MAGV NOT IN 
					 (SELECT TGDT.MAGV
					 FROM THAMGIADETAI TGDT
					 JOIN DETAI DT ON TGDT.MADT = DT.MADT
					 WHERE DT.CAPQL LIKE N'TRƯỜNG' AND TGDT.MADT = I.MADT))) > 2)
	BEGIN
		RAISERROR(N'Đề tài cấp trường tối đa 2 giảng viên',16,1)
		ROLLBACK TRANSACTION
	END
END
GO
--39.Mỗi giảng viên chỉ được khai báo phụ thuộc tối đa 3 thân nhân
--Đã làm
--40.Lương của giáo viên quản lý chuyên môn phải >= lương của giáo viên cùng bộ môn và phải
--<= lương của trưởng bộ môn
--ĐÃ LÀM

--ÔN TẬP
--1. Viết function tính tổng phụ cấp của 1 giảng viên trong năm qua.
GO
CREATE FUNCTION FN_TinhTongPhuCap(
	@MaGV CHAR(3)
)
RETURNS FLOAT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @TongPhuCap FLOAT
	SET @TongPhuCap = (SELECT SUM(PHUCAP) FROM THAMGIADETAI TGDT JOIN DETAI DT ON TGDT.MADT = DT.MADT WHERE MAGV = @MaGV AND YEAR(NGAYBD) = YEAR(GETDATE()))

	RETURN @TongPhuCap
END
GO
--2. Viết function tính tổng lương của 1 giảng viên trong năm qua.
GO 
CREATE FUNCTION FN_TinhTongLong(
	@MaGV CHAR(3)
)
RETURNS FLOAT
AS BEGIN
	IF(dbo.FN_TonTaiGiaoVien(@MaGV) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @Luong FLOAT
	SELECT @Luong = LUONG FROM GIAOVIEN WHERE MAGV = @MaGV

	RETURN @Luong
END
GO
--3. Cho danh sách giảng viên (magv, họ tên, tổng phụ cấp, tổng lương) của mỗi giảng viên (sử
--dụng câu 1,2)
SELECT MAGV,dbo.FN_TinhTongPhuCap(MAGV),dbo.FN_TinhTongLong(MAGV)
FROM GIAOVIEN
--4. Cho danh sách bộ môn (mabm, tên bộ môn, tổng lương) của mỗi bộ môn
SELECT BM.MABM,BM.TENBM,SUM(CASE WHEN dbo.FN_TinhTongLong(GV.MAGV) <> -1 THEN dbo.FN_TinhTongLong(GV.MAGV) ELSE 0 END)
FROM BOMON BM
LEFT JOIN GIAOVIEN GV ON BM.MABM = GV.MABM
GROUP BY BM.MABM,BM.TENBM
--5. Viết function tính tổng phụ cấp đã phân bổ của mỗi đề tài
GO
CREATE FUNCTION FN_TongPhuCapPhanBoChoDeTai(
	@MaDT CHAR(3)
)
RETURNS FLOAT
AS BEGIN
	IF(dbo.FN_TonTaiDeTai(@MaDT) = -1)
	BEGIN
		RETURN -1
	END

	DECLARE @TongPhuCap FLOAT
	SELECT @TongPhuCap = SUM(PHUCAP) FROM THAMGIADETAI WHERE MADT = @MaDT

	RETURN @TongPhuCap
END
GO
--6. Cho danh sách các đề tài (mã đề tài, kinh phí, tổng phụ cấp, kết quả) của mỗi đề tài. Với, kết
--quả: vượt / còn dư, vừa đủ nếu tổng phụ cấp ( = hoặc > hoặc < ) kinh phí được cấp
SELECT DT.MADT,DT.KINHPHI,dbo.FN_TongPhuCapPhanBoChoDeTai(DT.MADT),TGDT.KETQUA
FROM THAMGIADETAI TGDT
RIGHT JOIN DETAI DT ON TGDT.MADT = DT.MADT
GROUP BY DT.MADT,DT.KINHPHI,TGDT.KETQUA
